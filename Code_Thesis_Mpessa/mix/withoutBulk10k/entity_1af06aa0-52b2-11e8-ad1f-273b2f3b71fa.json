{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=15271",
  "eid" : "1af06aa0-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778554442,
  "textBody" : "Information retrieval (IR) is the activity of obtaining information resources relevant to an information need from a collection of information resources.  Searches can be based on full-text or other content-based indexing. Information retrieval is the science of searching for information in a document, searching for documents themselves, and also searching for metadata that describe data, and for databases of texts, images or sounds.\n\nAutomated information retrieval systems are used to reduce what has been called information overload. An IR systems is a software that provide access to books, journals and other documents, stores them and manages the document. Web search engines are the most visible IR applications.\n\nOverview \n\nAn information retrieval process begins when a user enters a query into the system. Queries are formal statements of information needs, for example search strings in web search engines. In information retrieval a query does not uniquely identify a single object in the collection. Instead, several objects may match the query, perhaps with different degrees of relevancy.\n\nAn object is an entity that is represented by information in a content collection or database. User queries are matched against the database information. However, as opposed to classical SQL queries of a database, in information retrieval the results returned may or may not match the query, so results are typically ranked. This ranking of results is a key difference of information retrieval searching compared to database searching.Jansen, B. J. and Rieh, S. (2010) [https://faculty.ist.psu.edu/jjansen/academic/jansen_theoretical_constructs.pdf The Seventeen Theoretical Constructs of Information Searching and Information Retrieval]. Journal of the American Society for Information Sciences and Technology. 61(8), 1517-1534.\n\nDepending on the application the data objects may be, for example, text documents, images, audio, mind maps or videos. Often the documents themselves are not kept or stored directly in the IR system, but are instead represented in the system by document surrogates or metadata.\n\nMost IR systems compute a numeric score on how well each object in the database matches the query, and rank the objects according to this value. The top ranking objects are then shown to the user. The process may then be iterated if the user wishes to refine the query.\n\nHistory \n\nThe idea of using computers to search for relevant pieces of information was popularized in the article As We May Think by Vannevar Bush in 1945. It would appear that Bush was inspired by patents for a 'statistical machine' - filed by Emanuel Goldberg in the 1920s and '30s - that searched for documents stored on film. The first description of a computer searching for information was described by Holmstrom in 1948, detailing an early mention of the Univac computer. Automated information retrieval systems were introduced in the 1950s: one even featured in the 1957 romantic comedy, Desk Set. In the 1960s, the first large information retrieval research group was formed by Gerard Salton at Cornell. By the 1970s several different retrieval techniques had been shown to perform well on small text corpora such as the Cranfield collection (several thousand documents). Large-scale retrieval systems, such as the Lockheed Dialog system, came into use early in the 1970s.\n\nIn 1992, the US Department of Defense along with the National Institute of Standards and Technology (NIST), cosponsored the Text Retrieval Conference (TREC) as part of the TIPSTER text program. The aim of this was to look into the information retrieval community by supplying the infrastructure that was needed for evaluation of text retrieval methodologies on a very large text collection. This catalyzed research on methods that scale to huge corpora. The introduction of web search engines has boosted the need for very large scale retrieval systems even further.\n\nModel types \n\nFor effectively retrieving relevant documents by IR strategies, the documents are typically transformed into a suitable representation. Each retrieval strategy incorporates a specific model for its document representation purposes. The picture on the right illustrates the relationship of some common models. In the picture, the models are categorized according to two dimensions: the mathematical basis and the properties of the model.\n\nFirst dimension: mathematical basis \n\n* Set-theoretic models represent documents as sets of words or phrases. Similarities are usually derived from set-theoretic operations on those sets. Common models are:\n** Standard Boolean model\n** Extended Boolean model\n** Fuzzy retrieval\n* Algebraic models represent documents and queries usually as vectors, matrices, or tuples. The similarity of the query vector and document vector is represented as a scalar value.\n** Vector space model\n** Generalized vector space model\n** (Enhanced) Topic-based Vector Space Model\n** Extended Boolean model\n** Latent semantic indexing a.k.a. latent semantic analysis\n* Probabilistic models treat the process of document retrieval as a probabilistic inference. Similarities are computed as probabilities that a document is relevant for a given query. Probabilistic theorems like the Bayes' theorem are often used in these models.\n** Binary Independence Model\n** Probabilistic relevance model on which is based the okapi (BM25) relevance function\n** Uncertain inference\n** Language models\n** Divergence-from-randomness model\n** Latent Dirichlet allocation\n* Feature-based retrieval models view documents as vectors of values of feature functions (or just features) and seek the best way to combine these features into a single relevance score, typically by learning to rank methods. Feature functions are arbitrary functions of document and query, and as such can easily incorporate almost any other retrieval model as just another feature.\n\nSecond dimension: properties of the model \n\n* Models without term-interdependencies treat different terms/words as independent. This fact is usually represented in vector space models by the orthogonality assumption of term vectors or in probabilistic models by an independency assumption for term variables.\n* Models with immanent term interdependencies allow a representation of interdependencies between terms. However the degree of the interdependency between two terms is defined by the model itself. It is usually directly or indirectly derived (e.g. by dimensional reduction) from the co-occurrence of those terms in the whole set of documents.\n* Models with transcendent term interdependencies allow a representation of interdependencies between terms, but they do not allege how the interdependency between two terms is defined. They rely an external source for the degree of interdependency between two terms. (For example, a human or sophisticated algorithms.)\n\nPerformance and correctness measures \n\nThe evaluation of an information retrieval system is the process of assessing how well a system meets the information needs of its users. Traditional evaluation metrics, designed for Boolean retrieval or top-k retrieval, include precision and recall.  Many more measures for evaluating the performance of information retrieval systems have also been proposed. In general, measurement considers a collection of documents to be searched and a search query. All common measures described here assume a ground truth notion of relevancy: every document is known to be either relevant or non-relevant to a particular query. In practice, queries may be ill-posed and there may be different shades of relevancy.\n\nVirtually all modern evaluation metrics (e.g., mean average precision, discounted cumulative gain) are designed for ranked retrieval without any explicit rank cutoff, taking into account the relative order of the documents retrieved by the search engines and giving more weight to documents returned at higher ranks.\n\nThe mathematical symbols used in the formulas below mean:\n* X \\cap Y - Intersection - in this case, specifying the documents in both sets X and Y\n* | X | - Cardinality - in this case, the number of documents in set X\n* \\int - Integral\n* \\sum - Summation\n* \\Delta - Symmetric difference\n\nPrecision \n\nPrecision is the fraction of the documents retrieved that are relevant to the user's information need.\n\n \\mbox{precision}=\\frac \n\nIn binary classification, precision is analogous to positive predictive value. Precision takes all retrieved documents into account. It can also be evaluated at a given cut-off rank, considering only the topmost results returned by the system. This measure is called precision at n or P@n.\n\nNote that the meaning and usage of \"precision\" in the field of information retrieval differs from the definition of accuracy and precision within other branches of science and statistics.\n\nRecall \n\nRecall is the fraction of the documents that are relevant to the query that are successfully retrieved.\n\n\\mbox{recall}=\\frac \n\nIn binary classification, recall is often called sensitivity. So it can be looked at as the probability that a relevant document is retrieved by the query.\n\nIt is trivial to achieve recall of 100% by returning all documents in response to any query. Therefore, recall alone is not enough but one needs to measure the number of non-relevant documents also, for example by computing the precision.\n\nFall-out \n\nThe proportion of non-relevant documents that are retrieved, out of all non-relevant documents available:\n\n \\mbox{fall-out}=\\frac \n\nIn binary classification, fall-out is closely related to specificity and is equal to (1-\\mbox{specificity}). It can be looked at as the probability that a non-relevant document is retrieved by the query.\n\nIt is trivial to achieve fall-out of 0% by returning zero documents in response to any query.\n\nF-score / F-measure \n\nThe weighted harmonic mean of precision and recall, the traditional F-measure or balanced F-score is:\n\nF = \\frac{2 \\cdot \\mathrm{precision} \\cdot \\mathrm{recall}}{(\\mathrm{precision} + \\mathrm{recall})}\n\nThis is also known as the F_1 measure, because recall and precision are evenly weighted.\n\nThe general formula for non-negative real \\beta is:\nF_\\beta = \\frac{(1 + \\beta^2) \\cdot (\\mathrm{precision} \\cdot \\mathrm{recall})}{(\\beta^2 \\cdot \\mathrm{precision} + \\mathrm{recall})}\\,\n\nTwo other commonly used F measures are the F_{2} measure, which weights recall twice as much as precision, and the F_{0.5} measure, which weights precision twice as much as recall.\n\nThe F-measure was derived by van Rijsbergen (1979) so that F_\\beta \"measures the effectiveness of retrieval with respect to a user who attaches \\beta times as much importance to recall as precision\".  It is based on van Rijsbergen's effectiveness measure E = 1 - \\frac{1}{\\frac{\\alpha}{P} + \\frac{1-\\alpha}{R}}.  Their relationship is:\nF_\\beta 1 - E where \\alpha\n\\frac{1}{1 + \\beta^2}\n\nF-measure can be a better single metric when compared to precision and recall; both precision and recall give different information that can complement each other when combined. If one of them excels more than the other, F-measure will reflect it.\n\nAverage precision \n\nPrecision and recall are single-value metrics based on the whole list of documents returned by the system. For systems that return a ranked sequence of documents, it is desirable to also consider the order in which the returned documents are presented. By computing a precision and recall at every position in the ranked sequence of documents, one can plot a precision-recall curve, plotting precision p(r) as a function of recall r. Average precision computes the average value of p(r) over the interval from r0 to r\n1:\n\\operatorname{AveP} = \\int_0^1 p(r)dr\nThat is the area under the precision-recall curve.\nThis integral is in practice replaced with a finite sum over every position in the ranked sequence of documents:\n\\operatorname{AveP} \\sum_{k\n1}^n P(k) \\Delta r(k)\nwhere k is the rank in the sequence of retrieved documents, n is the number of retrieved documents, P(k) is the precision at cut-off k in the list, and \\Delta r(k) is the change in recall from items k-1 to k.\n\nThis finite sum is equivalent to:\n \\operatorname{AveP} \\frac{\\sum_{k\n1}^n (P(k) \\times \\operatorname{rel}(k))}{\\mbox{number of relevant documents}} \\!\nwhere \\operatorname{rel}(k) is an indicator function equaling 1 if the item at rank k is a relevant document, zero otherwise. Note that the average is over all relevant documents and the relevant documents not retrieved get a precision score of zero.\n\nSome authors choose to interpolate the p(r) function to reduce the impact of \"wiggles\" in the curve. For example, the PASCAL Visual Object Classes challenge prior to 2010 (a benchmark for computer vision object detection, the evaluation metric changed after 2010 to effectively sample the curve at all unique recall values.) computes average precision by averaging the precision over a set of evenly spaced recall levels {0, 0.1, 0.2, ... 1.0}:\n\\operatorname{AveP} = \\frac{1}{11} \\sum_{r \\in \\{0, 0.1, \\ldots, 1.0\\}} p_{\\operatorname{interp}}(r)\nwhere p_{\\operatorname{interp}}(r) is an interpolated precision that takes the maximum precision over all recalls greater than r:\np_{\\operatorname{interp}}(r) = \\operatorname{max}_{\\tilde{r}:\\tilde{r} \\geq r} p(\\tilde{r}).\n\nAn alternative is to derive an analytical p(r) function by assuming a particular parametric distribution for the underlying decision values. For example, a binormal precision-recall curve can be obtained by assuming decision values in both classes to follow a Gaussian distribution.K.H. Brodersen, C.S. Ong, K.E. Stephan, J.M. Buhmann (2010). [http://icpr2010.org/pdfs/icpr2010_ThBCT8.28.pdf The binormal assumption on precision-recall curves] . Proceedings of the 20th International Conference on Pattern Recognition, 4263-4266.\n\nPrecision at K \n\nWhen the output of a classifier can be ordered (e.g. by some confidence measure), we can consider only the top k results and compute the precision for those. This is known as Precision at k, or P@k.\n\nFor modern (Web-scale) information retrieval, for instance, recall is no longer a meaningful metric, as many queries have thousands of relevant documents, and few users will be interested in reading all of them. Precision at k documents (P@k) is still a useful metric (e.g., P@10 or \"Precision at 10\" corresponds to the number of relevant results on the first search results page), but fails to take into account the positions of the relevant documents among the top k.  Another shortcoming is that on a query with fewer relevant results than k, even a perfect system will have a score less than 1.  It is easier to score manually since only the top k results need to be examined to determine if they are relevant or not.\n\nR-Precision \n\nR-precision requires knowing all documents that are relevant to a query.  The number of relevant documents, R, is used as the cutoff for calculation, and this varies from query to query.  For example, if there are 15 documents relevant to \"red\" in a corpus (R15), R-precision for \"red\" looks at the top 15 documents returned, counts the number that are relevant r turns that into a relevancy fraction: r/R \n r/15.\n\nPrecision is equal to recall at the R-th position.  Part of Introduction to Information Retrieval [http://nlp.stanford.edu/IR-book/]\n\nEmpirically, this measure is often highly correlated to mean average precision.\n\nMean average precision \n\nMean average precision for a set of queries is the mean of the average precision scores for each query.\n \\operatorname{MAP} \\frac{\\sum_{q\n1}^Q \\operatorname{AveP(q)}}{Q} \\!\nwhere Q is the number of queries.\n\nDiscounted cumulative gain \n\nDCG uses a graded relevance scale of documents from the result set to evaluate the usefulness, or gain, of a document based on its position in the result list. The premise of DCG is that highly relevant documents appearing lower in a search result list should be penalized as the graded relevance value is reduced logarithmically proportional to the position of the result.\n\nThe DCG accumulated at a particular rank position p is defined as:\n\n \\mathrm{DCG_{p}} rel_{1} + \\sum_{i\n2}^{p} \\frac{rel_{i}}{\\log_{2}i}. \n\nSince result set may vary in size among different queries or systems, to compare performances the normalised version of DCG uses an ideal DCG. To this end, it sorts documents of a result list by relevance, producing an ideal DCG at position p (IDCG_p), which normalizes the score:\n\n \\mathrm{nDCG_{p}} = \\frac{DCG_{p}}{IDCG{p}}. \n\nThe nDCG values for all queries can be averaged to obtain a measure of the average performance of a ranking algorithm. Note that in a perfect ranking algorithm, the DCG_p will be the same as the IDCG_p producing an nDCG of 1.0. All nDCG calculations are then relative values on the interval 0.0 to 1.0 and so are cross-query comparable.\n\nOther measures \n\n* Mean reciprocal rank\n* Spearman's rank correlation coefficient\n* bpref - a summation-based measure of how many relevant documents are ranked before irrelevant documentshttp://trec.nist.gov/pubs/trec15/appendices/CE.MEASURES06.pdf\n* GMAP - geometric mean of (per-topic) average precision\n* Measures based on marginal relevance and document diversity - see \n\nVisualization\n\nVisualizations of information retrieval performance include:\n* Graphs which chart precision on one axis and recall on the other\n* Histograms of average precision over various topics\n* Receiver operating characteristic (ROC curve)\n* Confusion matrix\n\nTimeline \n\n* Before the 1900s\n*: 1801: Joseph Marie Jacquard invents the Jacquard loom, the first machine to use punched cards to control a sequence of operations.\n*: 1880s: Herman Hollerith invents an electro-mechanical data tabulator using punch cards as a machine readable medium.\n*: 1890 Hollerith cards, keypunches and tabulators used to process the 1890 US Census data.\n* 1920s-1930s\n*: Emanuel Goldberg submits patents for his \"Statistical Machine” a document search engine that used photoelectric cells and pattern recognition to search the metadata on rolls of microfilmed documents.\n* 1940s–1950s\n*: late 1940s: The US military confronted problems of indexing and retrieval of wartime scientific research documents captured from Germans.\n*:: 1945: Vannevar Bush's As We May Think appeared in Atlantic Monthly.\n*:: 1947: Hans Peter Luhn (research engineer at IBM since 1941) began work on a mechanized punch card-based system for searching chemical compounds.\n*: 1950s: Growing concern in the US for a \"science gap\" with the USSR motivated, encouraged funding and provided a backdrop for mechanized literature searching systems (Allen Kent et al.) and the invention of citation indexing (Eugene Garfield).\n*: 1950: The term \"information retrieval\" was coined by Calvin Mooers.Mooers, Calvin N.; [https://babel.hathitrust.org/cgi/pt?idmdp.39015034570591;view\n1up;seq=3 The Theory of Digital Handling of Non-numerical Information and its Implications to Machine Economics] (Zator Technical Bulletin No. 48), cited in \n*: 1951: Philip Bagley conducted the earliest experiment in computerized document retrieval in a master thesis at MIT.\n*: 1955: Allen Kent joined Case Western Reserve University, and eventually became associate director of the Center for Documentation and Communications Research. That same year, Kent and colleagues published a paper in American Documentation describing the precision and recall measures as well as detailing a proposed \"framework\" for evaluating an IR system which included statistical sampling methods for determining the number of relevant documents not retrieved.\n*: 1958: International Conference on Scientific Information Washington DC included consideration of IR systems as a solution to problems identified. See: Proceedings of the International Conference on Scientific Information, 1958 (National Academy of Sciences, Washington, DC, 1959)\n*: 1959: Hans Peter Luhn published \"Auto-encoding of documents for information retrieval.\"\n* 1960s:\n*: early 1960s: Gerard Salton began work on IR at Harvard, later moved to Cornell.\n*: 1960: Melvin Earl Maron and John Lary Kuhns published \"On relevance, probabilistic indexing, and information retrieval\" in the Journal of the ACM 7(3):216–244, July 1960.\n*: 1962:\n*:* Cyril W. Cleverdon published early findings of the Cranfield studies, developing a model for IR system evaluation. See: Cyril W. Cleverdon, \"Report on the Testing and Analysis of an Investigation into the Comparative Efficiency of Indexing Systems\". Cranfield Collection of Aeronautics, Cranfield, England, 1962.\n*:* Kent published Information Analysis and Retrieval.\n*: 1963:\n*:* Weinberg report \"Science, Government and Information\" gave a full articulation of the idea of a \"crisis of scientific information.\"  The report was named after Dr. Alvin Weinberg.\n*:* Joseph Becker and Robert M. Hayes published text on information retrieval. Becker, Joseph; Hayes, Robert Mayo. Information storage and retrieval: tools, elements, theories. New York, Wiley (1963).\n*: 1964:\n*:* Karen Spärck Jones finished her thesis at Cambridge, Synonymy and Semantic Classification, and continued work on computational linguistics as it applies to IR.\n*:* The National Bureau of Standards sponsored a symposium titled \"Statistical Association Methods for Mechanized Documentation.\" Several highly significant papers, including G. Salton's first published reference (we believe) to the SMART system.\n*:mid-1960s:\n*::* National Library of Medicine developed MEDLARS Medical Literature Analysis and Retrieval System, the first major machine-readable database and batch-retrieval system.\n*::* Project Intrex at MIT.\n*:: 1965: J. C. R. Licklider published Libraries of the Future.\n*:: 1966: Don Swanson was involved in studies at University of Chicago on Requirements for Future Catalogs.\n*: late 1960s: F. Wilfrid Lancaster completed evaluation studies of the MEDLARS system and published the first edition of his text on information retrieval.\n*:: 1968:\n*:* Gerard Salton published Automatic Information Organization and Retrieval.\n*:* John W. Sammon, Jr.'s RADC Tech report \"Some Mathematics of Information Storage and Retrieval...\" outlined the vector model.\n*:: 1969: Sammon's \"A nonlinear mapping for data structure analysis\" (IEEE Transactions on Computers) was the first proposal for visualization interface to an IR system.\n* 1970s\n*: early 1970s:\n*::* First online systems—NLM's AIM-TWX, MEDLINE; Lockheed's Dialog; SDC's ORBIT.\n*::* Theodor Nelson promoting concept of hypertext, published Computer Lib/Dream Machines.\n*: 1971: Nicholas Jardine and Cornelis J. van Rijsbergen published \"The use of hierarchic clustering in information retrieval\", which articulated the \"cluster hypothesis.\"\n*: 1975: Three highly influential publications by Salton fully articulated his vector processing framework and term discrimination model:\n*::* A Theory of Indexing (Society for Industrial and Applied Mathematics)\n*::* A Theory of Term Importance in Automatic Text Analysis (JASIS v. 26)\n*::* A Vector Space Model for Automatic Indexing (CACM 18:11)\n*: 1978: The First ACM SIGIR conference.\n*: 1979: C. J. van Rijsbergen published Information Retrieval (Butterworths). Heavy emphasis on probabilistic models.\n*: 1979: Tamas Doszkocs implemented the CITE natural language user interface for MEDLINE at the National Library of Medicine. The CITE system supported free form query input, ranked output and relevance feedback.Doszkocs, T.E. & Rapp, B.A. (1979). \"Searching MEDLINE in English: a Prototype User Inter-face with Natural Language Query, Ranked Output, and relevance feedback,\" In: Proceedings of the ASIS Annual Meeting, 16: 131-139.\n* 1980s\n*: 1980: First international ACM SIGIR conference, joint with British Computer Society IR group in Cambridge.\n*: 1982: Nicholas J. Belkin, Robert N. Oddy, and Helen M. Brooks proposed the ASK (Anomalous State of Knowledge) viewpoint for information retrieval. This was an important concept, though their automated analysis tool proved ultimately disappointing.\n*: 1983: Salton (and Michael J. McGill) published Introduction to Modern Information Retrieval (McGraw-Hill), with heavy emphasis on vector models.\n*: 1985: David Blair and Bill Maron publish: An Evaluation of Retrieval Effectiveness for a Full-Text Document-Retrieval System\n*: mid-1980s: Efforts to develop end-user versions of commercial IR systems.\n*:: 1985–1993: Key papers on and experimental systems for visualization interfaces.\n*:: Work by Donald B. Crouch, Robert R. Korfhage, Matthew Chalmers, Anselm Spoerri and others.\n*: 1989: First World Wide Web proposals by Tim Berners-Lee at CERN.\n* 1990s\n*: 1992: First TREC conference.\n*: 1997: Publication of Korfhage's Information Storage and Retrieval with emphasis on visualization and multi-reference point systems.\n*: 1999: Publication of Ricardo Baeza-Yates and Berthier Ribeiro-Neto's Modern Information Retrieval by Addison Wesley, the first book that attempts to cover all IR. \n*: late 1990s: Web search engines implementation of many features formerly found only in experimental IR systems. Search engines become the most common and maybe best instantiation of IR models.\n\nMajor conferences \n\n* SIGIR: [http://sigir.org/ Conference on Research and Development in Information Retrieval]\n* ECIR: European Conference on Information Retrieval\n* CIKM: Conference on Information and Knowledge Management\n* WWW: International World Wide Web Conference\n* WSDM: [http://www.wsdm-conference.org/ Conference on Web Search and Data Mining]\n* ICTIR: [http://sigir.org/ictir2017/ International Conference on Theory of Information Retrieval]\n\nAwards in the field \n\n* Tony Kent Strix award\n* Gerard Salton Award\n\nLeading IR Research Groups \n\n* Center for Intelligent Information Retrieval (CIIR) at the University of Massachusetts Amherst \n* Information Retrieval Group at the University of Glasgow \n* Information and Language Processing Systems (ILPS) at the University of Amsterdam \n* Information Retrieval Group (THUIR) at Tsinghua University",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Information retrieval" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=15271" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "Information retrieval (IR) is the activity of obtaining information resources relevant to an information need from a collection of information resources.  Searches can be based on full-text or other content-based indexing. Information retrieval is the science of searching for information in a document, searching for documents themselves, and also searching for metadata that describe data, and for databases of texts, images or sounds.\n\nAutomated information retrieval systems are used to reduce what has been called information overload. An IR systems is a software that provide access to books, journals and other documents, stores them and manages the document. Web search engines are the most visible IR applications.\n\nOverview \n\nAn information retrieval process begins when a user enters a query into the system. Queries are formal statements of information needs, for example search strings in web search engines. In information retrieval a query does not uniquely identify a single object in the collection. Instead, several objects may match the query, perhaps with different degrees of relevancy.\n\nAn object is an entity that is represented by information in a content collection or database. User queries are matched against the database information. However, as opposed to classical SQL queries of a database, in information retrieval the results returned may or may not match the query, so results are typically ranked. This ranking of results is a key difference of information retrieval searching compared to database searching.Jansen, B. J. and Rieh, S. (2010) [https://faculty.ist.psu.edu/jjansen/academic/jansen_theoretical_constructs.pdf The Seventeen Theoretical Constructs of Information Searching and Information Retrieval]. Journal of the American Society for Information Sciences and Technology. 61(8), 1517-1534.\n\nDepending on the application the data objects may be, for example, text documents, images, audio, mind maps or videos. Often the documents themselves are not kept or stored directly in the IR system, but are instead represented in the system by document surrogates or metadata.\n\nMost IR systems compute a numeric score on how well each object in the database matches the query, and rank the objects according to this value. The top ranking objects are then shown to the user. The process may then be iterated if the user wishes to refine the query.\n\nHistory \n\nThe idea of using computers to search for relevant pieces of information was popularized in the article As We May Think by Vannevar Bush in 1945. It would appear that Bush was inspired by patents for a 'statistical machine' - filed by Emanuel Goldberg in the 1920s and '30s - that searched for documents stored on film. The first description of a computer searching for information was described by Holmstrom in 1948, detailing an early mention of the Univac computer. Automated information retrieval systems were introduced in the 1950s: one even featured in the 1957 romantic comedy, Desk Set. In the 1960s, the first large information retrieval research group was formed by Gerard Salton at Cornell. By the 1970s several different retrieval techniques had been shown to perform well on small text corpora such as the Cranfield collection (several thousand documents). Large-scale retrieval systems, such as the Lockheed Dialog system, came into use early in the 1970s.\n\nIn 1992, the US Department of Defense along with the National Institute of Standards and Technology (NIST), cosponsored the Text Retrieval Conference (TREC) as part of the TIPSTER text program. The aim of this was to look into the information retrieval community by supplying the infrastructure that was needed for evaluation of text retrieval methodologies on a very large text collection. This catalyzed research on methods that scale to huge corpora. The introduction of web search engines has boosted the need for very large scale retrieval systems even further.\n\nModel types \n\nFor effectively retrieving relevant documents by IR strategies, the documents are typically transformed into a suitable representation. Each retrieval strategy incorporates a specific model for its document representation purposes. The picture on the right illustrates the relationship of some common models. In the picture, the models are categorized according to two dimensions: the mathematical basis and the properties of the model.\n\nFirst dimension: mathematical basis \n\n* Set-theoretic models represent documents as sets of words or phrases. Similarities are usually derived from set-theoretic operations on those sets. Common models are:\n** Standard Boolean model\n** Extended Boolean model\n** Fuzzy retrieval\n* Algebraic models represent documents and queries usually as vectors, matrices, or tuples. The similarity of the query vector and document vector is represented as a scalar value.\n** Vector space model\n** Generalized vector space model\n** (Enhanced) Topic-based Vector Space Model\n** Extended Boolean model\n** Latent semantic indexing a.k.a. latent semantic analysis\n* Probabilistic models treat the process of document retrieval as a probabilistic inference. Similarities are computed as probabilities that a document is relevant for a given query. Probabilistic theorems like the Bayes' theorem are often used in these models.\n** Binary Independence Model\n** Probabilistic relevance model on which is based the okapi (BM25) relevance function\n** Uncertain inference\n** Language models\n** Divergence-from-randomness model\n** Latent Dirichlet allocation\n* Feature-based retrieval models view documents as vectors of values of feature functions (or just features) and seek the best way to combine these features into a single relevance score, typically by learning to rank methods. Feature functions are arbitrary functions of document and query, and as such can easily incorporate almost any other retrieval model as just another feature.\n\nSecond dimension: properties of the model \n\n* Models without term-interdependencies treat different terms/words as independent. This fact is usually represented in vector space models by the orthogonality assumption of term vectors or in probabilistic models by an independency assumption for term variables.\n* Models with immanent term interdependencies allow a representation of interdependencies between terms. However the degree of the interdependency between two terms is defined by the model itself. It is usually directly or indirectly derived (e.g. by dimensional reduction) from the co-occurrence of those terms in the whole set of documents.\n* Models with transcendent term interdependencies allow a representation of interdependencies between terms, but they do not allege how the interdependency between two terms is defined. They rely an external source for the degree of interdependency between two terms. (For example, a human or sophisticated algorithms.)\n\nPerformance and correctness measures \n\nThe evaluation of an information retrieval system is the process of assessing how well a system meets the information needs of its users. Traditional evaluation metrics, designed for Boolean retrieval or top-k retrieval, include precision and recall.  Many more measures for evaluating the performance of information retrieval systems have also been proposed. In general, measurement considers a collection of documents to be searched and a search query. All common measures described here assume a ground truth notion of relevancy: every document is known to be either relevant or non-relevant to a particular query. In practice, queries may be ill-posed and there may be different shades of relevancy.\n\nVirtually all modern evaluation metrics (e.g., mean average precision, discounted cumulative gain) are designed for ranked retrieval without any explicit rank cutoff, taking into account the relative order of the documents retrieved by the search engines and giving more weight to documents returned at higher ranks.\n\nThe mathematical symbols used in the formulas below mean:\n* X \\cap Y - Intersection - in this case, specifying the documents in both sets X and Y\n* | X | - Cardinality - in this case, the number of documents in set X\n* \\int - Integral\n* \\sum - Summation\n* \\Delta - Symmetric difference\n\nPrecision \n\nPrecision is the fraction of the documents retrieved that are relevant to the user's information need.\n\n \\mbox{precision}=\\frac \n\nIn binary classification, precision is analogous to positive predictive value. Precision takes all retrieved documents into account. It can also be evaluated at a given cut-off rank, considering only the topmost results returned by the system. This measure is called precision at n or P@n.\n\nNote that the meaning and usage of \"precision\" in the field of information retrieval differs from the definition of accuracy and precision within other branches of science and statistics.\n\nRecall \n\nRecall is the fraction of the documents that are relevant to the query that are successfully retrieved.\n\n\\mbox{recall}=\\frac \n\nIn binary classification, recall is often called sensitivity. So it can be looked at as the probability that a relevant document is retrieved by the query.\n\nIt is trivial to achieve recall of 100% by returning all documents in response to any query. Therefore, recall alone is not enough but one needs to measure the number of non-relevant documents also, for example by computing the precision.\n\nFall-out \n\nThe proportion of non-relevant documents that are retrieved, out of all non-relevant documents available:\n\n \\mbox{fall-out}=\\frac \n\nIn binary classification, fall-out is closely related to specificity and is equal to (1-\\mbox{specificity}). It can be looked at as the probability that a non-relevant document is retrieved by the query.\n\nIt is trivial to achieve fall-out of 0% by returning zero documents in response to any query.\n\nF-score / F-measure \n\nThe weighted harmonic mean of precision and recall, the traditional F-measure or balanced F-score is:\n\nF = \\frac{2 \\cdot \\mathrm{precision} \\cdot \\mathrm{recall}}{(\\mathrm{precision} + \\mathrm{recall})}\n\nThis is also known as the F_1 measure, because recall and precision are evenly weighted.\n\nThe general formula for non-negative real \\beta is:\nF_\\beta = \\frac{(1 + \\beta^2) \\cdot (\\mathrm{precision} \\cdot \\mathrm{recall})}{(\\beta^2 \\cdot \\mathrm{precision} + \\mathrm{recall})}\\,\n\nTwo other commonly used F measures are the F_{2} measure, which weights recall twice as much as precision, and the F_{0.5} measure, which weights precision twice as much as recall.\n\nThe F-measure was derived by van Rijsbergen (1979) so that F_\\beta \"measures the effectiveness of retrieval with respect to a user who attaches \\beta times as much importance to recall as precision\".  It is based on van Rijsbergen's effectiveness measure E = 1 - \\frac{1}{\\frac{\\alpha}{P} + \\frac{1-\\alpha}{R}}.  Their relationship is:\nF_\\beta 1 - E where \\alpha\n\\frac{1}{1 + \\beta^2}\n\nF-measure can be a better single metric when compared to precision and recall; both precision and recall give different information that can complement each other when combined. If one of them excels more than the other, F-measure will reflect it.\n\nAverage precision \n\nPrecision and recall are single-value metrics based on the whole list of documents returned by the system. For systems that return a ranked sequence of documents, it is desirable to also consider the order in which the returned documents are presented. By computing a precision and recall at every position in the ranked sequence of documents, one can plot a precision-recall curve, plotting precision p(r) as a function of recall r. Average precision computes the average value of p(r) over the interval from r0 to r\n1:\n\\operatorname{AveP} = \\int_0^1 p(r)dr\nThat is the area under the precision-recall curve.\nThis integral is in practice replaced with a finite sum over every position in the ranked sequence of documents:\n\\operatorname{AveP} \\sum_{k\n1}^n P(k) \\Delta r(k)\nwhere k is the rank in the sequence of retrieved documents, n is the number of retrieved documents, P(k) is the precision at cut-off k in the list, and \\Delta r(k) is the change in recall from items k-1 to k.\n\nThis finite sum is equivalent to:\n \\operatorname{AveP} \\frac{\\sum_{k\n1}^n (P(k) \\times \\operatorname{rel}(k))}{\\mbox{number of relevant documents}} \\!\nwhere \\operatorname{rel}(k) is an indicator function equaling 1 if the item at rank k is a relevant document, zero otherwise. Note that the average is over all relevant documents and the relevant documents not retrieved get a precision score of zero.\n\nSome authors choose to interpolate the p(r) function to reduce the impact of \"wiggles\" in the curve. For example, the PASCAL Visual Object Classes challenge prior to 2010 (a benchmark for computer vision object detection, the evaluation metric changed after 2010 to effectively sample the curve at all unique recall values.) computes average precision by averaging the precision over a set of evenly spaced recall levels {0, 0.1, 0.2, ... 1.0}:\n\\operatorname{AveP} = \\frac{1}{11} \\sum_{r \\in \\{0, 0.1, \\ldots, 1.0\\}} p_{\\operatorname{interp}}(r)\nwhere p_{\\operatorname{interp}}(r) is an interpolated precision that takes the maximum precision over all recalls greater than r:\np_{\\operatorname{interp}}(r) = \\operatorname{max}_{\\tilde{r}:\\tilde{r} \\geq r} p(\\tilde{r}).\n\nAn alternative is to derive an analytical p(r) function by assuming a particular parametric distribution for the underlying decision values. For example, a binormal precision-recall curve can be obtained by assuming decision values in both classes to follow a Gaussian distribution.K.H. Brodersen, C.S. Ong, K.E. Stephan, J.M. Buhmann (2010). [http://icpr2010.org/pdfs/icpr2010_ThBCT8.28.pdf The binormal assumption on precision-recall curves] . Proceedings of the 20th International Conference on Pattern Recognition, 4263-4266.\n\nPrecision at K \n\nWhen the output of a classifier can be ordered (e.g. by some confidence measure), we can consider only the top k results and compute the precision for those. This is known as Precision at k, or P@k.\n\nFor modern (Web-scale) information retrieval, for instance, recall is no longer a meaningful metric, as many queries have thousands of relevant documents, and few users will be interested in reading all of them. Precision at k documents (P@k) is still a useful metric (e.g., P@10 or \"Precision at 10\" corresponds to the number of relevant results on the first search results page), but fails to take into account the positions of the relevant documents among the top k.  Another shortcoming is that on a query with fewer relevant results than k, even a perfect system will have a score less than 1.  It is easier to score manually since only the top k results need to be examined to determine if they are relevant or not.\n\nR-Precision \n\nR-precision requires knowing all documents that are relevant to a query.  The number of relevant documents, R, is used as the cutoff for calculation, and this varies from query to query.  For example, if there are 15 documents relevant to \"red\" in a corpus (R15), R-precision for \"red\" looks at the top 15 documents returned, counts the number that are relevant r turns that into a relevancy fraction: r/R \n r/15.\n\nPrecision is equal to recall at the R-th position.  Part of Introduction to Information Retrieval [http://nlp.stanford.edu/IR-book/]\n\nEmpirically, this measure is often highly correlated to mean average precision.\n\nMean average precision \n\nMean average precision for a set of queries is the mean of the average precision scores for each query.\n \\operatorname{MAP} \\frac{\\sum_{q\n1}^Q \\operatorname{AveP(q)}}{Q} \\!\nwhere Q is the number of queries.\n\nDiscounted cumulative gain \n\nDCG uses a graded relevance scale of documents from the result set to evaluate the usefulness, or gain, of a document based on its position in the result list. The premise of DCG is that highly relevant documents appearing lower in a search result list should be penalized as the graded relevance value is reduced logarithmically proportional to the position of the result.\n\nThe DCG accumulated at a particular rank position p is defined as:\n\n \\mathrm{DCG_{p}} rel_{1} + \\sum_{i\n2}^{p} \\frac{rel_{i}}{\\log_{2}i}. \n\nSince result set may vary in size among different queries or systems, to compare performances the normalised version of DCG uses an ideal DCG. To this end, it sorts documents of a result list by relevance, producing an ideal DCG at position p (IDCG_p), which normalizes the score:\n\n \\mathrm{nDCG_{p}} = \\frac{DCG_{p}}{IDCG{p}}. \n\nThe nDCG values for all queries can be averaged to obtain a measure of the average performance of a ranking algorithm. Note that in a perfect ranking algorithm, the DCG_p will be the same as the IDCG_p producing an nDCG of 1.0. All nDCG calculations are then relative values on the interval 0.0 to 1.0 and so are cross-query comparable.\n\nOther measures \n\n* Mean reciprocal rank\n* Spearman's rank correlation coefficient\n* bpref - a summation-based measure of how many relevant documents are ranked before irrelevant documentshttp://trec.nist.gov/pubs/trec15/appendices/CE.MEASURES06.pdf\n* GMAP - geometric mean of (per-topic) average precision\n* Measures based on marginal relevance and document diversity - see \n\nVisualization\n\nVisualizations of information retrieval performance include:\n* Graphs which chart precision on one axis and recall on the other\n* Histograms of average precision over various topics\n* Receiver operating characteristic (ROC curve)\n* Confusion matrix\n\nTimeline \n\n* Before the 1900s\n*: 1801: Joseph Marie Jacquard invents the Jacquard loom, the first machine to use punched cards to control a sequence of operations.\n*: 1880s: Herman Hollerith invents an electro-mechanical data tabulator using punch cards as a machine readable medium.\n*: 1890 Hollerith cards, keypunches and tabulators used to process the 1890 US Census data.\n* 1920s-1930s\n*: Emanuel Goldberg submits patents for his \"Statistical Machine” a document search engine that used photoelectric cells and pattern recognition to search the metadata on rolls of microfilmed documents.\n* 1940s–1950s\n*: late 1940s: The US military confronted problems of indexing and retrieval of wartime scientific research documents captured from Germans.\n*:: 1945: Vannevar Bush's As We May Think appeared in Atlantic Monthly.\n*:: 1947: Hans Peter Luhn (research engineer at IBM since 1941) began work on a mechanized punch card-based system for searching chemical compounds.\n*: 1950s: Growing concern in the US for a \"science gap\" with the USSR motivated, encouraged funding and provided a backdrop for mechanized literature searching systems (Allen Kent et al.) and the invention of citation indexing (Eugene Garfield).\n*: 1950: The term \"information retrieval\" was coined by Calvin Mooers.Mooers, Calvin N.; [https://babel.hathitrust.org/cgi/pt?idmdp.39015034570591;view\n1up;seq=3 The Theory of Digital Handling of Non-numerical Information and its Implications to Machine Economics] (Zator Technical Bulletin No. 48), cited in \n*: 1951: Philip Bagley conducted the earliest experiment in computerized document retrieval in a master thesis at MIT.\n*: 1955: Allen Kent joined Case Western Reserve University, and eventually became associate director of the Center for Documentation and Communications Research. That same year, Kent and colleagues published a paper in American Documentation describing the precision and recall measures as well as detailing a proposed \"framework\" for evaluating an IR system which included statistical sampling methods for determining the number of relevant documents not retrieved.\n*: 1958: International Conference on Scientific Information Washington DC included consideration of IR systems as a solution to problems identified. See: Proceedings of the International Conference on Scientific Information, 1958 (National Academy of Sciences, Washington, DC, 1959)\n*: 1959: Hans Peter Luhn published \"Auto-encoding of documents for information retrieval.\"\n* 1960s:\n*: early 1960s: Gerard Salton began work on IR at Harvard, later moved to Cornell.\n*: 1960: Melvin Earl Maron and John Lary Kuhns published \"On relevance, probabilistic indexing, and information retrieval\" in the Journal of the ACM 7(3):216–244, July 1960.\n*: 1962:\n*:* Cyril W. Cleverdon published early findings of the Cranfield studies, developing a model for IR system evaluation. See: Cyril W. Cleverdon, \"Report on the Testing and Analysis of an Investigation into the Comparative Efficiency of Indexing Systems\". Cranfield Collection of Aeronautics, Cranfield, England, 1962.\n*:* Kent published Information Analysis and Retrieval.\n*: 1963:\n*:* Weinberg report \"Science, Government and Information\" gave a full articulation of the idea of a \"crisis of scientific information.\"  The report was named after Dr. Alvin Weinberg.\n*:* Joseph Becker and Robert M. Hayes published text on information retrieval. Becker, Joseph; Hayes, Robert Mayo. Information storage and retrieval: tools, elements, theories. New York, Wiley (1963).\n*: 1964:\n*:* Karen Spärck Jones finished her thesis at Cambridge, Synonymy and Semantic Classification, and continued work on computational linguistics as it applies to IR.\n*:* The National Bureau of Standards sponsored a symposium titled \"Statistical Association Methods for Mechanized Documentation.\" Several highly significant papers, including G. Salton's first published reference (we believe) to the SMART system.\n*:mid-1960s:\n*::* National Library of Medicine developed MEDLARS Medical Literature Analysis and Retrieval System, the first major machine-readable database and batch-retrieval system.\n*::* Project Intrex at MIT.\n*:: 1965: J. C. R. Licklider published Libraries of the Future.\n*:: 1966: Don Swanson was involved in studies at University of Chicago on Requirements for Future Catalogs.\n*: late 1960s: F. Wilfrid Lancaster completed evaluation studies of the MEDLARS system and published the first edition of his text on information retrieval.\n*:: 1968:\n*:* Gerard Salton published Automatic Information Organization and Retrieval.\n*:* John W. Sammon, Jr.'s RADC Tech report \"Some Mathematics of Information Storage and Retrieval...\" outlined the vector model.\n*:: 1969: Sammon's \"A nonlinear mapping for data structure analysis\" (IEEE Transactions on Computers) was the first proposal for visualization interface to an IR system.\n* 1970s\n*: early 1970s:\n*::* First online systems—NLM's AIM-TWX, MEDLINE; Lockheed's Dialog; SDC's ORBIT.\n*::* Theodor Nelson promoting concept of hypertext, published Computer Lib/Dream Machines.\n*: 1971: Nicholas Jardine and Cornelis J. van Rijsbergen published \"The use of hierarchic clustering in information retrieval\", which articulated the \"cluster hypothesis.\"\n*: 1975: Three highly influential publications by Salton fully articulated his vector processing framework and term discrimination model:\n*::* A Theory of Indexing (Society for Industrial and Applied Mathematics)\n*::* A Theory of Term Importance in Automatic Text Analysis (JASIS v. 26)\n*::* A Vector Space Model for Automatic Indexing (CACM 18:11)\n*: 1978: The First ACM SIGIR conference.\n*: 1979: C. J. van Rijsbergen published Information Retrieval (Butterworths). Heavy emphasis on probabilistic models.\n*: 1979: Tamas Doszkocs implemented the CITE natural language user interface for MEDLINE at the National Library of Medicine. The CITE system supported free form query input, ranked output and relevance feedback.Doszkocs, T.E. & Rapp, B.A. (1979). \"Searching MEDLINE in English: a Prototype User Inter-face with Natural Language Query, Ranked Output, and relevance feedback,\" In: Proceedings of the ASIS Annual Meeting, 16: 131-139.\n* 1980s\n*: 1980: First international ACM SIGIR conference, joint with British Computer Society IR group in Cambridge.\n*: 1982: Nicholas J. Belkin, Robert N. Oddy, and Helen M. Brooks proposed the ASK (Anomalous State of Knowledge) viewpoint for information retrieval. This was an important concept, though their automated analysis tool proved ultimately disappointing.\n*: 1983: Salton (and Michael J. McGill) published Introduction to Modern Information Retrieval (McGraw-Hill), with heavy emphasis on vector models.\n*: 1985: David Blair and Bill Maron publish: An Evaluation of Retrieval Effectiveness for a Full-Text Document-Retrieval System\n*: mid-1980s: Efforts to develop end-user versions of commercial IR systems.\n*:: 1985–1993: Key papers on and experimental systems for visualization interfaces.\n*:: Work by Donald B. Crouch, Robert R. Korfhage, Matthew Chalmers, Anselm Spoerri and others.\n*: 1989: First World Wide Web proposals by Tim Berners-Lee at CERN.\n* 1990s\n*: 1992: First TREC conference.\n*: 1997: Publication of Korfhage's Information Storage and Retrieval with emphasis on visualization and multi-reference point systems.\n*: 1999: Publication of Ricardo Baeza-Yates and Berthier Ribeiro-Neto's Modern Information Retrieval by Addison Wesley, the first book that attempts to cover all IR. \n*: late 1990s: Web search engines implementation of many features formerly found only in experimental IR systems. Search engines become the most common and maybe best instantiation of IR models.\n\nMajor conferences \n\n* SIGIR: [http://sigir.org/ Conference on Research and Development in Information Retrieval]\n* ECIR: European Conference on Information Retrieval\n* CIKM: Conference on Information and Knowledge Management\n* WWW: International World Wide Web Conference\n* WSDM: [http://www.wsdm-conference.org/ Conference on Web Search and Data Mining]\n* ICTIR: [http://sigir.org/ictir2017/ International Conference on Theory of Information Retrieval]\n\nAwards in the field \n\n* Tony Kent Strix award\n* Gerard Salton Award\n\nLeading IR Research Groups \n\n* Center for Intelligent Information Retrieval (CIIR) at the University of Massachusetts Amherst \n* Information Retrieval Group at the University of Glasgow \n* Information and Language Processing Systems (ILPS) at the University of Amsterdam \n* Information Retrieval Group (THUIR) at Tsinghua University. Information retrieval. http://en.wikipedia.org/?curid=15271."
  }
}
