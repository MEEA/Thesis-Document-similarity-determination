{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=13914",
  "eid" : "1012e450-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778536213,
  "textBody" : "The history of the graphical user interface, understood as the use of graphic icons and a pointing device to control a computer, covers a five-decade span of incremental refinements, built on some constant core principles. Several vendors have created their own windowing systems based on independent code, but with basic elements in common that define the WIMP \"window, icon, menu and pointing device\" paradigm.\n\nThere have been important technological achievements, and enhancements to the general interaction in small steps over previous systems. There have been a few significant breakthroughs in terms of use, but the same organizational metaphors and interaction idioms are still in use. Although many GUI operating systems are controlled by using a mouse, the keyboard can also be used with keyboard shortcuts or arrow keys. The interface developments described, below, have been summarized and omit many details in the interest of brevity. The influence of game computers and joystick operation has been omitted.\n__TOC__\n\nEarly research and developments \n\nEarly dynamic information devices such as radar displays, where input devices were used for direct control of computer-created data, set the basis for later improvements of graphical interfaces. Some early cathode-ray-tube (CRT) screens used a light pen, rather than a mouse, as the pointing device.\n\nThe concept of a multi-panel windowing system was introduced by the first real-time graphic display systems for computers: the SAGE Project and Ivan Sutherland's Sketchpad.\n\nAugmentation of Human Intellect (NLS) \n\nIn the 1960s, Douglas Engelbart's Augmentation of Human Intellect project at the Augmentation Research Center at SRI International in Menlo Park, California developed the oN-Line System (NLS). This computer incorporated a mouse-driven cursor and multiple windows used to work on hypertext. Engelbart had been inspired, in part, by the memex desk-based information machine suggested by Vannevar Bush in 1945.\n\nMuch of the early research was based on how young children learn. So, the design was based on the childlike primitives of eye-hand coordination, rather than use of command languages, user-defined macro procedures, or automated transformations of data as later used by adult professionals.\n\nXerox PARC \n\n led to the advances at Xerox PARC. Several people went from SRI to Xerox PARC in the early 1970s.\nIn 1973, Xerox PARC developed the Alto personal computer. It had a bitmapped screen, and was the first computer to demonstrate the desktop metaphor and graphical user interface (GUI). It was not a commercial product, but several thousand units were built and were heavily used at PARC, as well as other XEROX offices, and at several universities for many years.  The Alto greatly influenced the design of personal computers during the late 1970s and early 1980s, notably the Three Rivers PERQ, the Apple Lisa and Macintosh, and the first Sun workstations.\n\nThe GUI was first developed at Xerox PARC by Alan Kay, Larry Tesler, Dan Ingalls, David Smith, Clarence Ellis and a number of other researchers. It used windows, icons, and menus (including the first fixed drop-down menu) to support commands such as opening files, deleting files, moving files, etc. In 1974, work began at PARC on Gypsy, the first bitmap What-You-See-Is-What-You-Get (WYSIWYG) cut & paste editor. In 1975, Xerox engineers demonstrated a Graphical User Interface \"including icons and the first use of pop-up menus\".\n\nIn 1981 Xerox introduced a pioneering product, Star, a workstation incorporating many of PARC's innovations.  Although not commercially successful, Star greatly influenced future developments, for example at Apple, Microsoft and Sun Microsystems.\n\nThe Xerox Alto (and later Xerox Star) was an early personal computer developed at Xerox PARC in 1973. It was the first computer to use the desktop metaphor and mouse-driven graphical user interface (GUI).\n\nThe Alto, unlike Star, was not a commercial product, but several thousand units were built and were heavily used at PARC, other Xerox facilities, at least one government facility and at several universities for many years. The Alto greatly influenced the design of some personal computers in the following decades, notably the Apple Macintosh and the first Sun workstations.\n\nBlit \n\nThe Blit, a graphics terminal, was developed at Bell Labs in 1982.\n\nLisp machines, Symbolics \n\nLisp machines originally developed at MIT and later commercialized by Symbolics and other manufacturers, were early high-end single user computer workstations with advanced graphical user interfaces, windowing, and mouse as an input device. First workstations from Symbolics came to market in 1981, with more advanced designs in the subsequent years.\n\nApple Lisa and Macintosh (and later, the Apple IIgs) \n\nBeginning in 1979, started by Steve Jobs and led by Jef Raskin, the Apple Lisa and Macintosh teams at Apple Computer (which included former members of the Xerox PARC group) continued to develop such ideas. The Lisa, released in 1983, featured a high-resolution stationery-based (document-centric) graphical interface atop an advanced hard disk based OS that featured such things as preemptive multitasking and graphically oriented inter-process communication. The comparatively simplified Macintosh, released in 1984 and designed to be lower in cost, was the first commercially successful product to use a multi-panel window interface. A desktop metaphor was used, in which files looked like pieces of paper. File directories looked like file folders. There were a set of desk accessories like a calculator, notepad, and alarm clock that the user could place around the screen as desired; and the user could delete files and folders by dragging them to a trash-can icon on the screen. The Macintosh, in contrast to the Lisa, used a program-centric rather than document-centric design. Apple revisited the document-centric design, in a limited manner, much later with OpenDoc.\n\nThere is still some controversy over the amount of influence that Xerox's PARC work, as opposed to previous academic research, had on the GUIs of the Apple Lisa and Macintosh, but it is clear that the influence was extensive, because first versions of Lisa GUIs even lacked icons. These prototype GUIs are at least mouse-driven, but completely ignored the WIMP ( \"window, icon, menu, pointing device\") concept. Screenshots of first GUIs of Apple Lisa prototypes show the early designs. Note also that Apple engineers visited the PARC facilities (Apple secured the rights for the visit by compensating Xerox with a pre-IPO purchase of Apple stock) and a number of PARC employees subsequently moved to Apple to work on the Lisa and Macintosh GUI. However, the Apple work extended PARC's considerably, adding manipulatable icons, and drag and drop manipulation of objects in the file system (see Macintosh Finder) for example. A list of the improvements made by Apple, beyond the PARC interface, can be read at Folklore.org.[http://www.folklore.org/StoryView.py?projectMacintosh&story\nOn_Xerox,_Apple_and_Progress.txt&topicSoftware%20Design&sortOrder\nSort%20by%20Date \"On Xerox, Apple and Progress\"] (1996), Folklore.org. Jef Raskin warns that many of the reported facts in the history of the PARC and Macintosh development are inaccurate, distorted or even fabricated, due to the lack of usage by historians of direct primary sources.\n\nIn 1984, Apple released a television commercial which introduced the Apple Macintosh during the telecast of Super Bowl XVIII by CBS, with allusions to George Orwell's noted novel, Nineteen Eighty-Four. The commercial was aimed at making people think about computers, identifying the user-friendly interface as a personal computer which departed from previous business-oriented systems, and becoming a signature representation of Apple products.\n\nIn 1986, the Apple IIgs was launched. The IIgs was a very advanced model of the successful Apple II series, based on 16-bit technology (in fact, virtually two machines into one). It came with a new operating system, the Apple GS/OS, which features a Finder-like GUI, very similar to that of the Macintosh series, able to deal with the advanced graphic abilities of its Video Graphics Chip (VGC).\n\nAgat \n\nReleased in 1983, the Soviet Union Agat PC featured a graphical interface and a mouse device.\n\nSGI 1000 series and MEX \n\nFounded 1982, SGI introduced the IRIS 1000 Series in 1983. The first graphical terminals (IRIS 1000) shipped in late 1983, and the corresponding workstation model (IRIS 1400) was released in mid-1984. The machines used an early version of the MEX windowing system on top of the GL2 Release 1 operating environment. Examples of the MEX user interface can be seen in a 1988 article in the journal \"Computer Graphics\", while earlier screenshots can not be found. The first commercial GUI-based systems, these did not find widespread use as to their (discounted) academic list price of $22,500 and $35,700 for the IRIS 1000 and IRIS 1400, respectively. However, these systems were commercially successful enough to start SGI's business as one of the main graphical workstation vendors. In later revisions of graphical workstations, SGI switched to the X window system, which had been developed starting at MIT since 1984 and which became the standard for UNIX workstations.\n\nGraphics Environment Manager (GEM) \n\nDigital Research (DRI) created the Graphics Environment Manager (GEM) as an add-on program for personal computers. GEM was developed to work with existing CP/M and DOS operating systems on business computers such as IBM PC compatibles. It was developed from DRI software, known as GSX, designed by a former PARC employee. The similarity to the Macintosh desktop led to a copyright lawsuit from Apple Computer, and a settlement which involved some changes to GEM. This was to be the first of a series of 'look and feel' lawsuits related to GUI design in the 1980s.\n\nGEM received widespread use in the consumer market from 1985, when it was made the default user interface built into the Atari TOS operating system of the Atari ST line of personal computers. It was also bundled by other computer manufacturers and distributors, such as Amstrad. Later, it was distributed with the best-sold Digital Research version of DOS for IBM PC compatibles, the DR-DOS 6.0. The GEM desktop faded from the market with the withdrawal of the Atari ST line in 1992 and with the popularity of the Microsoft Windows 3.0 in the PC front around the same period of time. The Falcon030, released in 1993 was the last computer from Atari to use GEM.\n\nDeskMate \n\nTandy's DeskMate appeared in the early 1980s on its TRS-80 machines and was ported to its Tandy 1000 range in 1984.  Like most PC GUIs of the time, it depended on a disk operating system such as TRSDOS or MS-DOS.  The application was popular at the time and included a number of programs like Draw, Text and Calendar, as well as attracting outside investment such as Lotus 1-2-3 for DeskMate.\n\nMSX-View \n\nMSX-View was developed for MSX computers by ASCII Corporation and HAL Laboratory. MSX-View contains software such as Page Edit, Page View, Page Link, VShell, VTed, VPaint and VDraw. An external version of the built-in MSX View of the Panasonic FS-A1GT was released as an add-on for the Panasonic FS-A1ST on disk instead of 512 kB ROM DISK.\n\nAmiga Intuition and the Workbench \n\nThe Amiga computer was launched by Commodore in 1985 with a GUI called Workbench. Workbench was based on an internal engine developed mostly by RJ Mical, called Intuition, which drove all the input events. The first versions used a blue/orange/white/black default palette, which was selected for high contrast on televisions and composite monitors. Workbench presented directories as drawers to fit in with the \"workbench\" theme.\nIntuition was the widget and graphics library that made the GUI work. It was driven by user events through the mouse, keyboard, and other input devices.\n\nDue to a mistake made by the Commodore sales department, the first floppies of AmigaOS (released with the Amiga1000) named the whole OS \"Workbench\". Since then, users and CBM itself referred to \"Workbench\" as the nickname for the whole AmigaOS (including Amiga DOS, Extras, etc.). This common consent ended with release of version 2.0 of AmigaOS, which re-introduced proper names to the installation floppies of AmigaDOS, Workbench, Extras, etc.\n\nStarting with Workbench 1.0, AmigaOS treated the Workbench as a backdrop, borderless window sitting atop a blank screen.  With the introduction of AmigaOS 2.0, however, the user was free to select whether the main Workbench window appeared as a normally layered window, complete with a border and scrollbars, through a menu item.\n\nAmiga users were able to boot their computer into a command-line interface (also known as the CLI or Amiga Shell). This was a keyboard-based environment without the Workbench GUI. Later they could invoke it with the CLI/SHELL command \"LoadWB\" which loaded Workbench GUI.\n\nOne major difference between other OS's of the time (and for some time after) was the Amiga's fully multi-tasking operating system, a powerful built-in animation system using a hardware blitter and copper and 4 channels of 26 kHz 8-bit sampled sound. This made the Amiga the first multi-media computer years before other OS's.\n\nLike most GUIs of the day, Amiga's Intuition followed Xerox's, and sometimes Apple's, lead. But a CLI was included which dramatically extended the functionality of the platform. However, the CLI/Shell of Amiga is not just a simple text-based interface like in MS-DOS, but another graphic process driven by Intuition, and with the same gadgets included in Amiga's graphics.library. The CLI/Shell interface integrates itself with the Workbench, sharing privileges with the GUI.\n\nThe Amiga Workbench evolved over the 1990s, even after Commodore's 1994 bankruptcy.\n\nAcorn BBC Master Compact \n\nAcorn's 8-bit BBC Master Compact shipped with Acorn's first public GUI interface in 1986.[http://acorn.chriswhy.co.uk/Computers/MasterCompact.html Chris's Acorns: Master Compact] Little commercial software, beyond that included on the Welcome disk, was ever made available for the system, despite the claim by Acorn at the time that \"the major software houses have worked with Acorn to make over 100 titles available on compilation discs at launch\".[Acorn User October 1986 – News – Page 9]  The most avid supporter of the Master Compact appeared to be Superior Software, who produced and specifically labelled their games as 'Master Compact' compatible.\n\nArthur / RISC OS \n\n is a series of graphical user interface-based computer operating systems (OSes) designed for ARM architecture systems. It takes its name from the RISC (Reduced Instruction Set Computing) architecture supported. The OS was originally developed by Acorn Computers for use with their 1987 range of Archimedes personal computers using the Acorn RISC Machine processors. It comprises a command-line interface and desktop environment with a windowing system.\n\nOriginally branded as the Arthur 1.20  the subsequent Arthur 2 release was shipped under the name RISC OS 2.\n\nDesktop \n\nThe WIMP interface incorporates three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window order control (i.e. send to back) and dynamic window focus (a window can have input focus at any position on the stack). The Icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.\n\nThe GUI is centred around the concept of files. The Filer displays the contents of a disc. Applications are run from the Filer view and files can be dragged to the Filer view from applications to perform saves. Application directories are used to store applications. The OS differentiates them from normal directories through the use of a pling (exclamation mark, also called shriek) prefix. Double-clicking on such a directory launches the application rather than opening the directory. The application's executable files and resources are contained within the directory, but normally they remain hidden from the user. Because applications are self-contained, this allows drag-and-drop installation and removal.\n\nThe  Style Guide encourages a consistent look and feel across applications. This was introduced in  and specifies application appearance and behaviour. Acorn's own main bundled applications were not updated to comply with the guide until 's Select release in 2001.\n\nFont manager \n\nThe outline fonts manager provides spatial anti-aliasing of fonts, the OS being the first operating system to include such a feature, having included it since before January 1989. Since 1994, in RISC OS 3.5, it has been possible to use an outline anti-aliased font in the WindowManager for UI elements, rather than the bitmap system font from previous versions.[http://acorn.chriswhy.co.uk/docs/Acorn/AN/253.pdf Acorn Computers Support Group Application Notice 253 – New features of RISC OS version 3.5]\n\nMS-DOS file managers and utility suites \n\nBecause most of the very early IBM PC and compatibles lacked any common true graphical capability (they used the 80-column basic text mode compatible with the original MDA display adapter), a series of file managers arose, including Microsoft's DOS Shell, which features typical GUI elements as menus, push buttons, lists with scrollbars and mouse pointer. The name text-based user interface was later invented to name this kind of interface. Many MS-DOS text mode applications, like the default text editor for MS-DOS 5.0 (and related tools, like QBasic), also used the same philosophy. The IBM DOS Shell included with IBM DOS 5.0 (circa 1992) supported both text display modes and actual graphics display modes, making it both a TUI and a GUI, depending on the chosen mode.\n\nAdvanced file managers for MS-DOS were able to redefine character shapes with EGA and better display adapters, giving some basic low resolution icons and graphical interface elements, including an arrow (instead of a coloured cell block) for the mouse pointer. When the display adapter lacks the ability to change the character's shapes, they default to the CP437 character set found in the adapter's ROM. Some popular utility suites for MS-DOS, as Norton Utilities (pictured) and PC Tools used these techniques as well.\n\nDESQview was a text mode multitasking program introduced in July 1985. Running on top of MS-DOS, it allowed users to run multiple DOS programs concurrently in windows. It was the first program to bring multitasking and windowing capabilities to a DOS environment in which existing DOS programs could be used. DESQview was not a true GUI but offered certain components of one, such as resizable, overlapping windows and mouse pointing.\n\nApplications under MS-DOS with proprietary GUIs \n\nBefore the MS-Windows age, and with the lack of a true common GUI under MS-DOS, most graphical applications which worked with EGA, VGA and better graphic cards had proprietary built-in GUIs. One of the best known such graphical applications was Deluxe Paint, a popular painting software with a typical WIMP interface.\n\nThe original Adobe Acrobat Reader executable file for MS-DOS was able to run on both the standard Windows 3.x GUI and the standard DOS command prompt. When it was launched from the command prompt, on a machine with a VGA graphics card, it provided its own GUI.\n\nMicrosoft Windows (16-bit versions) \n\nWindows 1.0, a GUI for the MS-DOS operating system was released in 1985. The market's response was less than stellar. Windows 2.0 followed, but it wasn't until the 1990 launch of Windows 3.0, based on Common User Access that its popularity truly exploded. The GUI has seen minor redesigns since, mainly the networking enabled Windows 3.11 and its Win32s 32-bit patch. The 16-bit line of MS Windows were discontinued with the introduction of Windows 95 and Windows NT 32-bit based architecture in the 1990s. See the next section.\n\nThe main window of a given application can occupy the full screen in maximized status. The users must then to switch between maximized applications using the Alt+Tab keyboard shortcut; no alternative with the mouse except for de-maximize. When none of the running application windows are maximized, switching can be done by clicking on a partially visible window, as is the common way in other GUIs.\n\nIn 1988, Apple sued Microsoft for copyright infringement of the LISA and Apple Macintosh GUI. The court case lasted 4 years before almost all of Apple's claims were denied on a contractual technicality. Subsequent appeals by Apple were also denied. Microsoft and Apple apparently entered a final, private settlement of the matter in 1997.\n\nGEOS \n\nGEOS was launched in 1986. Originally written for the 8-bit home computer Commodore 64 and shortly after, the Apple II series. The name was later used by the company as PC/Geos for IBM PC systems, then Geoworks Ensemble. It came with several application programs like a calendar and word processor, and a cut-down version served as the basis for America Online's DOS client. Compared to the competing Windows 3.0 GUI it could run reasonably well on simpler hardware, but its developer had a restrictive policy towards third-party developers that prevented it from becoming a serious competitor. And it was targeted at 8-bit machines and the 16-bit computer age was dawning.\n\nThe X Window System \n\nThe standard windowing system in the Unix world is the X Window System (commonly X11 or X), first released in the mid-1980s. The W Window System (1983) was the precursor to X; X was developed at MIT as Project Athena. Its original purpose was to allow users of the newly emerging graphic terminals to access remote graphics workstations without regard to the workstation's operating system or the hardware. Due largely to the availability of the source code used to write X, it has become the standard layer for management of graphical and input/output devices and for the building of both local and remote graphical interfaces on virtually all Unix, Linux and other Unix-like operating systems, with the notable exceptions of macOS and Android.\n\nX allows a graphical terminal user to make use of remote resources on the network as if they were all located locally to the user by running a single module of software called the X server. The software running on the remote machine is called the client application. X's network transparency protocols allow the display and input portions of any application to be separated from the remainder of the application and 'served up' to any of a large number of remote users. X is available today as free software.\n\nNeWS \n\nThe PostScript-based NeWS (Network extensible Window System) was developed by Sun Microsystems in the mid-1980s. For several years SunOS included a window system combining NeWS and the X Window System. Although NeWS was considered technically elegant by some commentators, Sun eventually dropped the product. Unlike X, NeWS was always proprietary software.\n\nThe 1990s: Mainstream usage of the desktop \n\nThe widespread adoption of the PC platform in homes and small businesses popularized computers among people with no formal training. This created a fast-growing market, opening an opportunity for commercial exploitation and of easy-to-use interfaces and making economically viable the incremental refinement of the existing GUIs for home systems.\n\nAlso, the spreading of Highcolor and True Color capabilities of display adapters providing thousands and millions of colors, along with faster CPUs and accelerated graphic cards, cheaper RAM, storage devices orders of magnitude larger (from megabytes to gigabytes) and larger bandwidth for telecom networking at lower cost helped to create an environment in which the common user was able to run complicated GUIs which began to favor aesthetics.\n\nWindows 95 and \"a computer in every home\" \n\nAfter Windows 3.11, Microsoft began to develop a new consumer-oriented version of the operating system. Windows 95 was intended to integrate Microsoft's formerly separate MS-DOS and Windows products and included an enhanced version of DOS, often referred to as MS-DOS 7.0. It also featured a significant redesign of the GUI, dubbed \"Cairo\".  While Cairo never really materialized, parts of Cairo found their way into subsequent versions of the operating system starting with Windows 95. Both Win95 and WinNT could run 32-bit applications, and could exploit the abilities of the Intel 80386 CPU, as the preemptive multitasking and up to 4 GiB of linear address memory space.  Windows 95 was touted as a 32-bit based operating system but it was actually based on a hybrid kernel (VWIN32.VXD) with the 16-bit user interface (USER.EXE) and graphic device interface (GDI.EXE) of Windows for Workgroups (3.11), which had 16-bit kernel components with a 32-bit subsystem (USER32.DLL and GDI32.DLL) that allowed it to run native 16-bit applications as well as 32-bit applications.  In the marketplace, Windows 95 was an unqualified success, promoting a general upgrade to 32-bit technology, and within a year or two of its release had become the most successful operating system ever produced.\n\nAccompanied by an extensive marketing campaign, Windows 95 was a major success in the marketplace at launch and shortly became the most popular desktop operating system.\n\nWindows 95 saw the beginning of the browser wars, when the World Wide Web began receiving a great deal of attention in popular culture and mass media. Microsoft at first did not see potential in the Web, and Windows 95 was shipped with Microsoft's own online service called The Microsoft Network, which was dial-up only and was used primarily for its own content, not internet access. As versions of Netscape Navigator and Internet Explorer were released at a rapid pace over the following few years, Microsoft used its desktop dominance to push its browser and shape the ecology of the web mainly as a monoculture.\n\nWindows 95 evolved through the years into Windows 98 and Windows ME.  Windows ME was the last in the line of the Windows 3.x-based operating systems from Microsoft.  Windows underwent a parallel 32-bit evolutionary path, where Windows NT 3.1 was released in 1993.  Windows NT (for New Technology) was a native 32-bit operating system with a new driver model, was unicode-based, and provided for true separation between applications.  Windows NT also supported 16-bit applications in an NTVDM, but it did not support VxD based drivers.  Windows 95 was supposed to be released before 1993 as the predecessor to Windows NT.  The idea was to promote the development of 32-bit applications with backward compatibility – leading the way for more successful NT release.  After multiple delays, Windows 95 was released without unicode and used the VxD driver model. Windows NT 3.1 evolved to Windows NT 3.5, 3.51 and then 4.0 when it finally shared a similar interface with its Windows 9x desktop counterpart and included a Start button. The evolution continued with Windows 2000, Windows XP, Windows Vista, then Windows 7.  Windows XP and higher were also made available in 64-bit modes.  Windows server products branched off with the introduction of Windows Server 2003 (available in 32-bit and 64-bit IA64 or x64), then Windows Server 2008 and then Windows Server 2008 R2. Windows 2000 and XP shared the same basic GUI although XP introduced Visual Styles. With Windows 98, the Active Desktop theme was introduced, allowing an HTML approach for the desktop, but this feature was coldly received by customers, who frequently disabled it. At the end, Windows Vista definitively discontinued it, but put a new SideBar on the desktop.\n\nMac OS \n\nThe Macintosh's GUI has been revised multiple times since 1984, with major updates including System 7 and Mac OS 8. It underwent its largest revision to date with the introduction of the \"Aqua\" interface in 2001's Mac OS X. It was a new operating system built primarily on technology from NeXTStep with UI elements of the original Mac OS grafted on. macOS uses a technology known as Quartz, for graphics rendering and drawing on-screen. Some interface features of macOS are inherited from NeXTStep (such as the Dock, the automatic wait cursor, or double-buffered windows giving a solid appearance and flicker-free window redraws), while others are inherited from the old Mac OS operating system (the single system-wide menu-bar). Mac OS X 10.3 introduced features to improve usability including Exposé, which is designed to make finding open windows easier.\n\nWith Mac OS X 10.4, new features were added, including Dashboard (a virtual alternate desktop for mini specific-purpose applications) and a search tool called Spotlight, which provides users with an option for searching through files instead of browsing through folders.\n\nGUIs built on the X Window System \n\n of X Window development, Sun Microsystems and AT&T attempted to push for a GUI standard called OPEN LOOK in competition with Motif. OPEN LOOK was  developed from scratch in conjunction with Xerox, while Motif was a collective effort that fell into place, with a look and feel patterned after Windows 3.11. Motif prevailed in the UNIX GUI battles and became the basis for the Common Desktop Environment (CDE). CDE was based on Visual User Environment (VUE), a proprietary desktop from Hewlett-Packard that in turn was based on the Motif look and feel.\n\nIn the late 1990s, there was significant growth in the Unix world, especially among the free software community. New graphical desktop movements grew up around Linux and similar operating systems, based on the X Window System. A new emphasis on providing an integrated and uniform interface to the user brought about new desktop environments, such as KDE Plasma 5, GNOME and Xfce which have supplanted CDE in popularity on both Unix and Unix-like operating systems. The Xfce, KDE and GNOME look and feel each tend to undergo more rapid change and less codification than the earlier OPEN LOOK and Motif environments.\n\nAmiga \n\nLater releases added improvements over the original Workbench, like support for high-color Workbench screens, context menus, and embossed 2D icons with pseudo-3D aspect. Some Amiga users preferred alternative interfaces to standard Workbench, such as Directory Opus Magellan.\n\nThe use of improved, third-party GUI engines became common amongst users who preferred more attractive interfaces – such as Magic User Interface (MUI), and ReAction. These object-oriented graphic engines driven by user interface classes and methods were then standardized into the Amiga environment and changed Amiga Workbench to a complete and modern guided interface, with new standard gadgets, animated buttons, true 24-bit-color icons, increased use of wallpapers for screens and windows, alpha channel, transparencies and shadows as any modern GUI provides.\n\nModern derivatives of Workbench are Ambient for MorphOS, Scalos, Workbench for AmigaOS 4 and Wanderer for AROS.\nThere is a brief article on Ambient and descriptions of MUI icons, menus and gadgets at [http://www.aps.fr/article/ambient.html aps.fr] and images of Zune stay at main [http://aros.sourceforge.net/pictures/screenshots/ AROS site].\n\nUse of object oriented graphic engines dramatically changes the look and feel of a GUI to match actual styleguides.\n\nOS/2 \n\nOriginally collaboratively developed by Microsoft and IBM to replace DOS, OS/2 version 1.0 (released in 1987) had no GUI at all. Version 1.1 (released 1988) included Presentation Manager (PM), an implementation of IBM Common User Access, which looked a lot like the later Windows 3.1 UI. After the split with Microsoft, IBM developed the Workplace Shell (WPS) for version 2.0 (released in 1992), a quite radical, object-oriented approach to GUIs. Microsoft later imitated much of this look in Windows 95.\n\nNeXTSTEP \n\nThe NeXTSTEP user interface was used in the NeXT line of computers. NeXTSTEP's first major version was released in 1989. It used Display PostScript for its graphical underpinning. The NeXTSTEP interface's most significant feature was the Dock, carried with some modification into Mac OS X, and had other minor interface details that some found made it easier and more intuitive to use than previous GUIs. NeXTSTEP's GUI was the first to feature opaque dragging of windows in its user interface, on a comparatively weak machine by today's standards, ideally aided by [http://www.bytecellar.com/archives/000092.php high performance graphics hardware].\n\nBeOS \n\nBeOS was developed on custom AT&T Hobbit-based computers before switching to PowerPC hardware by a team led by former Apple executive Jean-Louis Gassée as an alternative to Mac OS. BeOS was later ported to Intel hardware. It used an object-oriented kernel written by Be, and did not use the X Window System, but a different GUI written from scratch. Much effort was spent by the developers to make it an efficient platform for multimedia applications. Be Inc. was [https://archive.is/20130119212047/http://news.com.com/2102-1040_3-271718.html?tag=st.util.print acquired] by PalmSource, Inc. (Palm Inc. at the time) in 2001. The BeOS GUI still lives in Haiku, an open source software reimplementation of the BeOS.\n\nCurrent trends \n\nMobile devices \n\nIn 2007 with the iPhoneMather, John. [https://web.archive.org/web/20070303032701/http://www.rrj.ca/online/658/ iMania], Ryerson Review of Journalism, (February 19, 2007) Retrieved February 19, 2007 and later in 2010 with the introduction of the iPad,\"the iPad could finally spark demand for the hitherto unsuccessful tablet PC\" --Eaton, Nick [http://blog.seattlepi.com/microsoft/archives/199045.asp The iPad/tablet PC market defined?], Seattle Post-Intelligencer, 2010  Apple popularized the post-WIMP style of interaction for multi-touch screens, with those devices considered to be milestones in the development of mobile devices.Bright, Peter [https://arstechnica.com/microsoft/news/2010/07/ballmer-and-microsoft-still-doesnt-get-the-ipad.ars Ballmer (and Microsoft) still doesn't get the iPad], Ars Technica, 2010\n\nOther portable devices such as MP3 players and cell phones have been a burgeoning area of deployment for GUIs in recent years. Since the mid-2000s, a vast majority of portable devices have advanced to having high-screen resolutions and sizes. (The Galaxy Note 4's 2,560 × 1,440 pixel display is an example). Because of this, these devices have their own famed user interfaces and operating systems that have large homebrew communities dedicated to creating their own visual elements, such as icons, menus, wallpapers, and more. Post-WIMP interfaces are often used in these mobile devices, where the traditional pointing devices required by the desktop metaphor are not practical.\n\nAs high-powered graphics hardware draws considerable power and generates significant heat, many of the 3D effects developed between 2000 and 2010 are not practical on this class of device. This has led to the development of simpler interfaces making a design feature of two dimensionality such as exhibited by the Metro (Modern) UI first used in Windows 8 and the 2012 Gmail redesign.\n\n3D user interface \n\nIn the first decade of the 21st century, the rapid development of GPUs led to a trend for the inclusion of 3D effects in window management. It is based in experimental research in User Interface Design trying to expand the expressive power of the existing toolkits in order to enhance the physical cues that allow for direct manipulation. New effects common to several projects are scale resizing and zooming, several windows transformations and animations (wobbly windows, smooth minimization to system tray...), composition of images (used for window drop shadows and transparency) and enhancing the global organization of open windows (zooming to virtual desktops, desktop cube, Exposé, etc.) The proof-of-concept BumpTop desktop combines a physical representation of documents with tools for document classification possible only in the simulated environment, like instant reordering and automated grouping of related documents.\n\nThese effects are popularized thanks to the widespread use of 3D video cards (mainly due to gaming) which allow for complex visual processing with low CPU use, using the 3D acceleration in most modern graphics cards to render the application clients in a 3D scene. The application window is drawn off-screen in a pixel buffer, and the graphics card renders it into the 3D scene.\n\nThis can have the advantage of moving some of the window rendering to the GPU on the graphics card and thus reducing the load on the main CPU, but the facilities that allow this must be available on the graphics card to be able to take advantage of this.\n\nExamples of 3D user-interface software include XGL and Compiz from Novell, and AIGLX bundled with Red Hat Fedora. Quartz Extreme for macOS and Windows 7 and Vista's Aero interface use 3D rendering for shading and transparency effects as well as Exposé and Windows Flip and Flip 3D, respectively. Windows Vista uses Direct3D to accomplish this, whereas the other interfaces use OpenGL.\n\nVirtual reality and presence \n\nVirtual reality devices such as the Oculus Rift and Sony's PlayStation VR (formerly Project Morpheus) aim to provide users with presence, a perception of full immersion into a virtual environment.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "History of the graphical user interface" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=13914" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "The history of the graphical user interface, understood as the use of graphic icons and a pointing device to control a computer, covers a five-decade span of incremental refinements, built on some constant core principles. Several vendors have created their own windowing systems based on independent code, but with basic elements in common that define the WIMP \"window, icon, menu and pointing device\" paradigm.\n\nThere have been important technological achievements, and enhancements to the general interaction in small steps over previous systems. There have been a few significant breakthroughs in terms of use, but the same organizational metaphors and interaction idioms are still in use. Although many GUI operating systems are controlled by using a mouse, the keyboard can also be used with keyboard shortcuts or arrow keys. The interface developments described, below, have been summarized and omit many details in the interest of brevity. The influence of game computers and joystick operation has been omitted.\n__TOC__\n\nEarly research and developments \n\nEarly dynamic information devices such as radar displays, where input devices were used for direct control of computer-created data, set the basis for later improvements of graphical interfaces. Some early cathode-ray-tube (CRT) screens used a light pen, rather than a mouse, as the pointing device.\n\nThe concept of a multi-panel windowing system was introduced by the first real-time graphic display systems for computers: the SAGE Project and Ivan Sutherland's Sketchpad.\n\nAugmentation of Human Intellect (NLS) \n\nIn the 1960s, Douglas Engelbart's Augmentation of Human Intellect project at the Augmentation Research Center at SRI International in Menlo Park, California developed the oN-Line System (NLS). This computer incorporated a mouse-driven cursor and multiple windows used to work on hypertext. Engelbart had been inspired, in part, by the memex desk-based information machine suggested by Vannevar Bush in 1945.\n\nMuch of the early research was based on how young children learn. So, the design was based on the childlike primitives of eye-hand coordination, rather than use of command languages, user-defined macro procedures, or automated transformations of data as later used by adult professionals.\n\nXerox PARC \n\n led to the advances at Xerox PARC. Several people went from SRI to Xerox PARC in the early 1970s.\nIn 1973, Xerox PARC developed the Alto personal computer. It had a bitmapped screen, and was the first computer to demonstrate the desktop metaphor and graphical user interface (GUI). It was not a commercial product, but several thousand units were built and were heavily used at PARC, as well as other XEROX offices, and at several universities for many years.  The Alto greatly influenced the design of personal computers during the late 1970s and early 1980s, notably the Three Rivers PERQ, the Apple Lisa and Macintosh, and the first Sun workstations.\n\nThe GUI was first developed at Xerox PARC by Alan Kay, Larry Tesler, Dan Ingalls, David Smith, Clarence Ellis and a number of other researchers. It used windows, icons, and menus (including the first fixed drop-down menu) to support commands such as opening files, deleting files, moving files, etc. In 1974, work began at PARC on Gypsy, the first bitmap What-You-See-Is-What-You-Get (WYSIWYG) cut & paste editor. In 1975, Xerox engineers demonstrated a Graphical User Interface \"including icons and the first use of pop-up menus\".\n\nIn 1981 Xerox introduced a pioneering product, Star, a workstation incorporating many of PARC's innovations.  Although not commercially successful, Star greatly influenced future developments, for example at Apple, Microsoft and Sun Microsystems.\n\nThe Xerox Alto (and later Xerox Star) was an early personal computer developed at Xerox PARC in 1973. It was the first computer to use the desktop metaphor and mouse-driven graphical user interface (GUI).\n\nThe Alto, unlike Star, was not a commercial product, but several thousand units were built and were heavily used at PARC, other Xerox facilities, at least one government facility and at several universities for many years. The Alto greatly influenced the design of some personal computers in the following decades, notably the Apple Macintosh and the first Sun workstations.\n\nBlit \n\nThe Blit, a graphics terminal, was developed at Bell Labs in 1982.\n\nLisp machines, Symbolics \n\nLisp machines originally developed at MIT and later commercialized by Symbolics and other manufacturers, were early high-end single user computer workstations with advanced graphical user interfaces, windowing, and mouse as an input device. First workstations from Symbolics came to market in 1981, with more advanced designs in the subsequent years.\n\nApple Lisa and Macintosh (and later, the Apple IIgs) \n\nBeginning in 1979, started by Steve Jobs and led by Jef Raskin, the Apple Lisa and Macintosh teams at Apple Computer (which included former members of the Xerox PARC group) continued to develop such ideas. The Lisa, released in 1983, featured a high-resolution stationery-based (document-centric) graphical interface atop an advanced hard disk based OS that featured such things as preemptive multitasking and graphically oriented inter-process communication. The comparatively simplified Macintosh, released in 1984 and designed to be lower in cost, was the first commercially successful product to use a multi-panel window interface. A desktop metaphor was used, in which files looked like pieces of paper. File directories looked like file folders. There were a set of desk accessories like a calculator, notepad, and alarm clock that the user could place around the screen as desired; and the user could delete files and folders by dragging them to a trash-can icon on the screen. The Macintosh, in contrast to the Lisa, used a program-centric rather than document-centric design. Apple revisited the document-centric design, in a limited manner, much later with OpenDoc.\n\nThere is still some controversy over the amount of influence that Xerox's PARC work, as opposed to previous academic research, had on the GUIs of the Apple Lisa and Macintosh, but it is clear that the influence was extensive, because first versions of Lisa GUIs even lacked icons. These prototype GUIs are at least mouse-driven, but completely ignored the WIMP ( \"window, icon, menu, pointing device\") concept. Screenshots of first GUIs of Apple Lisa prototypes show the early designs. Note also that Apple engineers visited the PARC facilities (Apple secured the rights for the visit by compensating Xerox with a pre-IPO purchase of Apple stock) and a number of PARC employees subsequently moved to Apple to work on the Lisa and Macintosh GUI. However, the Apple work extended PARC's considerably, adding manipulatable icons, and drag and drop manipulation of objects in the file system (see Macintosh Finder) for example. A list of the improvements made by Apple, beyond the PARC interface, can be read at Folklore.org.[http://www.folklore.org/StoryView.py?projectMacintosh&story\nOn_Xerox,_Apple_and_Progress.txt&topicSoftware%20Design&sortOrder\nSort%20by%20Date \"On Xerox, Apple and Progress\"] (1996), Folklore.org. Jef Raskin warns that many of the reported facts in the history of the PARC and Macintosh development are inaccurate, distorted or even fabricated, due to the lack of usage by historians of direct primary sources.\n\nIn 1984, Apple released a television commercial which introduced the Apple Macintosh during the telecast of Super Bowl XVIII by CBS, with allusions to George Orwell's noted novel, Nineteen Eighty-Four. The commercial was aimed at making people think about computers, identifying the user-friendly interface as a personal computer which departed from previous business-oriented systems, and becoming a signature representation of Apple products.\n\nIn 1986, the Apple IIgs was launched. The IIgs was a very advanced model of the successful Apple II series, based on 16-bit technology (in fact, virtually two machines into one). It came with a new operating system, the Apple GS/OS, which features a Finder-like GUI, very similar to that of the Macintosh series, able to deal with the advanced graphic abilities of its Video Graphics Chip (VGC).\n\nAgat \n\nReleased in 1983, the Soviet Union Agat PC featured a graphical interface and a mouse device.\n\nSGI 1000 series and MEX \n\nFounded 1982, SGI introduced the IRIS 1000 Series in 1983. The first graphical terminals (IRIS 1000) shipped in late 1983, and the corresponding workstation model (IRIS 1400) was released in mid-1984. The machines used an early version of the MEX windowing system on top of the GL2 Release 1 operating environment. Examples of the MEX user interface can be seen in a 1988 article in the journal \"Computer Graphics\", while earlier screenshots can not be found. The first commercial GUI-based systems, these did not find widespread use as to their (discounted) academic list price of $22,500 and $35,700 for the IRIS 1000 and IRIS 1400, respectively. However, these systems were commercially successful enough to start SGI's business as one of the main graphical workstation vendors. In later revisions of graphical workstations, SGI switched to the X window system, which had been developed starting at MIT since 1984 and which became the standard for UNIX workstations.\n\nGraphics Environment Manager (GEM) \n\nDigital Research (DRI) created the Graphics Environment Manager (GEM) as an add-on program for personal computers. GEM was developed to work with existing CP/M and DOS operating systems on business computers such as IBM PC compatibles. It was developed from DRI software, known as GSX, designed by a former PARC employee. The similarity to the Macintosh desktop led to a copyright lawsuit from Apple Computer, and a settlement which involved some changes to GEM. This was to be the first of a series of 'look and feel' lawsuits related to GUI design in the 1980s.\n\nGEM received widespread use in the consumer market from 1985, when it was made the default user interface built into the Atari TOS operating system of the Atari ST line of personal computers. It was also bundled by other computer manufacturers and distributors, such as Amstrad. Later, it was distributed with the best-sold Digital Research version of DOS for IBM PC compatibles, the DR-DOS 6.0. The GEM desktop faded from the market with the withdrawal of the Atari ST line in 1992 and with the popularity of the Microsoft Windows 3.0 in the PC front around the same period of time. The Falcon030, released in 1993 was the last computer from Atari to use GEM.\n\nDeskMate \n\nTandy's DeskMate appeared in the early 1980s on its TRS-80 machines and was ported to its Tandy 1000 range in 1984.  Like most PC GUIs of the time, it depended on a disk operating system such as TRSDOS or MS-DOS.  The application was popular at the time and included a number of programs like Draw, Text and Calendar, as well as attracting outside investment such as Lotus 1-2-3 for DeskMate.\n\nMSX-View \n\nMSX-View was developed for MSX computers by ASCII Corporation and HAL Laboratory. MSX-View contains software such as Page Edit, Page View, Page Link, VShell, VTed, VPaint and VDraw. An external version of the built-in MSX View of the Panasonic FS-A1GT was released as an add-on for the Panasonic FS-A1ST on disk instead of 512 kB ROM DISK.\n\nAmiga Intuition and the Workbench \n\nThe Amiga computer was launched by Commodore in 1985 with a GUI called Workbench. Workbench was based on an internal engine developed mostly by RJ Mical, called Intuition, which drove all the input events. The first versions used a blue/orange/white/black default palette, which was selected for high contrast on televisions and composite monitors. Workbench presented directories as drawers to fit in with the \"workbench\" theme.\nIntuition was the widget and graphics library that made the GUI work. It was driven by user events through the mouse, keyboard, and other input devices.\n\nDue to a mistake made by the Commodore sales department, the first floppies of AmigaOS (released with the Amiga1000) named the whole OS \"Workbench\". Since then, users and CBM itself referred to \"Workbench\" as the nickname for the whole AmigaOS (including Amiga DOS, Extras, etc.). This common consent ended with release of version 2.0 of AmigaOS, which re-introduced proper names to the installation floppies of AmigaDOS, Workbench, Extras, etc.\n\nStarting with Workbench 1.0, AmigaOS treated the Workbench as a backdrop, borderless window sitting atop a blank screen.  With the introduction of AmigaOS 2.0, however, the user was free to select whether the main Workbench window appeared as a normally layered window, complete with a border and scrollbars, through a menu item.\n\nAmiga users were able to boot their computer into a command-line interface (also known as the CLI or Amiga Shell). This was a keyboard-based environment without the Workbench GUI. Later they could invoke it with the CLI/SHELL command \"LoadWB\" which loaded Workbench GUI.\n\nOne major difference between other OS's of the time (and for some time after) was the Amiga's fully multi-tasking operating system, a powerful built-in animation system using a hardware blitter and copper and 4 channels of 26 kHz 8-bit sampled sound. This made the Amiga the first multi-media computer years before other OS's.\n\nLike most GUIs of the day, Amiga's Intuition followed Xerox's, and sometimes Apple's, lead. But a CLI was included which dramatically extended the functionality of the platform. However, the CLI/Shell of Amiga is not just a simple text-based interface like in MS-DOS, but another graphic process driven by Intuition, and with the same gadgets included in Amiga's graphics.library. The CLI/Shell interface integrates itself with the Workbench, sharing privileges with the GUI.\n\nThe Amiga Workbench evolved over the 1990s, even after Commodore's 1994 bankruptcy.\n\nAcorn BBC Master Compact \n\nAcorn's 8-bit BBC Master Compact shipped with Acorn's first public GUI interface in 1986.[http://acorn.chriswhy.co.uk/Computers/MasterCompact.html Chris's Acorns: Master Compact] Little commercial software, beyond that included on the Welcome disk, was ever made available for the system, despite the claim by Acorn at the time that \"the major software houses have worked with Acorn to make over 100 titles available on compilation discs at launch\".[Acorn User October 1986 – News – Page 9]  The most avid supporter of the Master Compact appeared to be Superior Software, who produced and specifically labelled their games as 'Master Compact' compatible.\n\nArthur / RISC OS \n\n is a series of graphical user interface-based computer operating systems (OSes) designed for ARM architecture systems. It takes its name from the RISC (Reduced Instruction Set Computing) architecture supported. The OS was originally developed by Acorn Computers for use with their 1987 range of Archimedes personal computers using the Acorn RISC Machine processors. It comprises a command-line interface and desktop environment with a windowing system.\n\nOriginally branded as the Arthur 1.20  the subsequent Arthur 2 release was shipped under the name RISC OS 2.\n\nDesktop \n\nThe WIMP interface incorporates three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window order control (i.e. send to back) and dynamic window focus (a window can have input focus at any position on the stack). The Icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.\n\nThe GUI is centred around the concept of files. The Filer displays the contents of a disc. Applications are run from the Filer view and files can be dragged to the Filer view from applications to perform saves. Application directories are used to store applications. The OS differentiates them from normal directories through the use of a pling (exclamation mark, also called shriek) prefix. Double-clicking on such a directory launches the application rather than opening the directory. The application's executable files and resources are contained within the directory, but normally they remain hidden from the user. Because applications are self-contained, this allows drag-and-drop installation and removal.\n\nThe  Style Guide encourages a consistent look and feel across applications. This was introduced in  and specifies application appearance and behaviour. Acorn's own main bundled applications were not updated to comply with the guide until 's Select release in 2001.\n\nFont manager \n\nThe outline fonts manager provides spatial anti-aliasing of fonts, the OS being the first operating system to include such a feature, having included it since before January 1989. Since 1994, in RISC OS 3.5, it has been possible to use an outline anti-aliased font in the WindowManager for UI elements, rather than the bitmap system font from previous versions.[http://acorn.chriswhy.co.uk/docs/Acorn/AN/253.pdf Acorn Computers Support Group Application Notice 253 – New features of RISC OS version 3.5]\n\nMS-DOS file managers and utility suites \n\nBecause most of the very early IBM PC and compatibles lacked any common true graphical capability (they used the 80-column basic text mode compatible with the original MDA display adapter), a series of file managers arose, including Microsoft's DOS Shell, which features typical GUI elements as menus, push buttons, lists with scrollbars and mouse pointer. The name text-based user interface was later invented to name this kind of interface. Many MS-DOS text mode applications, like the default text editor for MS-DOS 5.0 (and related tools, like QBasic), also used the same philosophy. The IBM DOS Shell included with IBM DOS 5.0 (circa 1992) supported both text display modes and actual graphics display modes, making it both a TUI and a GUI, depending on the chosen mode.\n\nAdvanced file managers for MS-DOS were able to redefine character shapes with EGA and better display adapters, giving some basic low resolution icons and graphical interface elements, including an arrow (instead of a coloured cell block) for the mouse pointer. When the display adapter lacks the ability to change the character's shapes, they default to the CP437 character set found in the adapter's ROM. Some popular utility suites for MS-DOS, as Norton Utilities (pictured) and PC Tools used these techniques as well.\n\nDESQview was a text mode multitasking program introduced in July 1985. Running on top of MS-DOS, it allowed users to run multiple DOS programs concurrently in windows. It was the first program to bring multitasking and windowing capabilities to a DOS environment in which existing DOS programs could be used. DESQview was not a true GUI but offered certain components of one, such as resizable, overlapping windows and mouse pointing.\n\nApplications under MS-DOS with proprietary GUIs \n\nBefore the MS-Windows age, and with the lack of a true common GUI under MS-DOS, most graphical applications which worked with EGA, VGA and better graphic cards had proprietary built-in GUIs. One of the best known such graphical applications was Deluxe Paint, a popular painting software with a typical WIMP interface.\n\nThe original Adobe Acrobat Reader executable file for MS-DOS was able to run on both the standard Windows 3.x GUI and the standard DOS command prompt. When it was launched from the command prompt, on a machine with a VGA graphics card, it provided its own GUI.\n\nMicrosoft Windows (16-bit versions) \n\nWindows 1.0, a GUI for the MS-DOS operating system was released in 1985. The market's response was less than stellar. Windows 2.0 followed, but it wasn't until the 1990 launch of Windows 3.0, based on Common User Access that its popularity truly exploded. The GUI has seen minor redesigns since, mainly the networking enabled Windows 3.11 and its Win32s 32-bit patch. The 16-bit line of MS Windows were discontinued with the introduction of Windows 95 and Windows NT 32-bit based architecture in the 1990s. See the next section.\n\nThe main window of a given application can occupy the full screen in maximized status. The users must then to switch between maximized applications using the Alt+Tab keyboard shortcut; no alternative with the mouse except for de-maximize. When none of the running application windows are maximized, switching can be done by clicking on a partially visible window, as is the common way in other GUIs.\n\nIn 1988, Apple sued Microsoft for copyright infringement of the LISA and Apple Macintosh GUI. The court case lasted 4 years before almost all of Apple's claims were denied on a contractual technicality. Subsequent appeals by Apple were also denied. Microsoft and Apple apparently entered a final, private settlement of the matter in 1997.\n\nGEOS \n\nGEOS was launched in 1986. Originally written for the 8-bit home computer Commodore 64 and shortly after, the Apple II series. The name was later used by the company as PC/Geos for IBM PC systems, then Geoworks Ensemble. It came with several application programs like a calendar and word processor, and a cut-down version served as the basis for America Online's DOS client. Compared to the competing Windows 3.0 GUI it could run reasonably well on simpler hardware, but its developer had a restrictive policy towards third-party developers that prevented it from becoming a serious competitor. And it was targeted at 8-bit machines and the 16-bit computer age was dawning.\n\nThe X Window System \n\nThe standard windowing system in the Unix world is the X Window System (commonly X11 or X), first released in the mid-1980s. The W Window System (1983) was the precursor to X; X was developed at MIT as Project Athena. Its original purpose was to allow users of the newly emerging graphic terminals to access remote graphics workstations without regard to the workstation's operating system or the hardware. Due largely to the availability of the source code used to write X, it has become the standard layer for management of graphical and input/output devices and for the building of both local and remote graphical interfaces on virtually all Unix, Linux and other Unix-like operating systems, with the notable exceptions of macOS and Android.\n\nX allows a graphical terminal user to make use of remote resources on the network as if they were all located locally to the user by running a single module of software called the X server. The software running on the remote machine is called the client application. X's network transparency protocols allow the display and input portions of any application to be separated from the remainder of the application and 'served up' to any of a large number of remote users. X is available today as free software.\n\nNeWS \n\nThe PostScript-based NeWS (Network extensible Window System) was developed by Sun Microsystems in the mid-1980s. For several years SunOS included a window system combining NeWS and the X Window System. Although NeWS was considered technically elegant by some commentators, Sun eventually dropped the product. Unlike X, NeWS was always proprietary software.\n\nThe 1990s: Mainstream usage of the desktop \n\nThe widespread adoption of the PC platform in homes and small businesses popularized computers among people with no formal training. This created a fast-growing market, opening an opportunity for commercial exploitation and of easy-to-use interfaces and making economically viable the incremental refinement of the existing GUIs for home systems.\n\nAlso, the spreading of Highcolor and True Color capabilities of display adapters providing thousands and millions of colors, along with faster CPUs and accelerated graphic cards, cheaper RAM, storage devices orders of magnitude larger (from megabytes to gigabytes) and larger bandwidth for telecom networking at lower cost helped to create an environment in which the common user was able to run complicated GUIs which began to favor aesthetics.\n\nWindows 95 and \"a computer in every home\" \n\nAfter Windows 3.11, Microsoft began to develop a new consumer-oriented version of the operating system. Windows 95 was intended to integrate Microsoft's formerly separate MS-DOS and Windows products and included an enhanced version of DOS, often referred to as MS-DOS 7.0. It also featured a significant redesign of the GUI, dubbed \"Cairo\".  While Cairo never really materialized, parts of Cairo found their way into subsequent versions of the operating system starting with Windows 95. Both Win95 and WinNT could run 32-bit applications, and could exploit the abilities of the Intel 80386 CPU, as the preemptive multitasking and up to 4 GiB of linear address memory space.  Windows 95 was touted as a 32-bit based operating system but it was actually based on a hybrid kernel (VWIN32.VXD) with the 16-bit user interface (USER.EXE) and graphic device interface (GDI.EXE) of Windows for Workgroups (3.11), which had 16-bit kernel components with a 32-bit subsystem (USER32.DLL and GDI32.DLL) that allowed it to run native 16-bit applications as well as 32-bit applications.  In the marketplace, Windows 95 was an unqualified success, promoting a general upgrade to 32-bit technology, and within a year or two of its release had become the most successful operating system ever produced.\n\nAccompanied by an extensive marketing campaign, Windows 95 was a major success in the marketplace at launch and shortly became the most popular desktop operating system.\n\nWindows 95 saw the beginning of the browser wars, when the World Wide Web began receiving a great deal of attention in popular culture and mass media. Microsoft at first did not see potential in the Web, and Windows 95 was shipped with Microsoft's own online service called The Microsoft Network, which was dial-up only and was used primarily for its own content, not internet access. As versions of Netscape Navigator and Internet Explorer were released at a rapid pace over the following few years, Microsoft used its desktop dominance to push its browser and shape the ecology of the web mainly as a monoculture.\n\nWindows 95 evolved through the years into Windows 98 and Windows ME.  Windows ME was the last in the line of the Windows 3.x-based operating systems from Microsoft.  Windows underwent a parallel 32-bit evolutionary path, where Windows NT 3.1 was released in 1993.  Windows NT (for New Technology) was a native 32-bit operating system with a new driver model, was unicode-based, and provided for true separation between applications.  Windows NT also supported 16-bit applications in an NTVDM, but it did not support VxD based drivers.  Windows 95 was supposed to be released before 1993 as the predecessor to Windows NT.  The idea was to promote the development of 32-bit applications with backward compatibility – leading the way for more successful NT release.  After multiple delays, Windows 95 was released without unicode and used the VxD driver model. Windows NT 3.1 evolved to Windows NT 3.5, 3.51 and then 4.0 when it finally shared a similar interface with its Windows 9x desktop counterpart and included a Start button. The evolution continued with Windows 2000, Windows XP, Windows Vista, then Windows 7.  Windows XP and higher were also made available in 64-bit modes.  Windows server products branched off with the introduction of Windows Server 2003 (available in 32-bit and 64-bit IA64 or x64), then Windows Server 2008 and then Windows Server 2008 R2. Windows 2000 and XP shared the same basic GUI although XP introduced Visual Styles. With Windows 98, the Active Desktop theme was introduced, allowing an HTML approach for the desktop, but this feature was coldly received by customers, who frequently disabled it. At the end, Windows Vista definitively discontinued it, but put a new SideBar on the desktop.\n\nMac OS \n\nThe Macintosh's GUI has been revised multiple times since 1984, with major updates including System 7 and Mac OS 8. It underwent its largest revision to date with the introduction of the \"Aqua\" interface in 2001's Mac OS X. It was a new operating system built primarily on technology from NeXTStep with UI elements of the original Mac OS grafted on. macOS uses a technology known as Quartz, for graphics rendering and drawing on-screen. Some interface features of macOS are inherited from NeXTStep (such as the Dock, the automatic wait cursor, or double-buffered windows giving a solid appearance and flicker-free window redraws), while others are inherited from the old Mac OS operating system (the single system-wide menu-bar). Mac OS X 10.3 introduced features to improve usability including Exposé, which is designed to make finding open windows easier.\n\nWith Mac OS X 10.4, new features were added, including Dashboard (a virtual alternate desktop for mini specific-purpose applications) and a search tool called Spotlight, which provides users with an option for searching through files instead of browsing through folders.\n\nGUIs built on the X Window System \n\n of X Window development, Sun Microsystems and AT&T attempted to push for a GUI standard called OPEN LOOK in competition with Motif. OPEN LOOK was  developed from scratch in conjunction with Xerox, while Motif was a collective effort that fell into place, with a look and feel patterned after Windows 3.11. Motif prevailed in the UNIX GUI battles and became the basis for the Common Desktop Environment (CDE). CDE was based on Visual User Environment (VUE), a proprietary desktop from Hewlett-Packard that in turn was based on the Motif look and feel.\n\nIn the late 1990s, there was significant growth in the Unix world, especially among the free software community. New graphical desktop movements grew up around Linux and similar operating systems, based on the X Window System. A new emphasis on providing an integrated and uniform interface to the user brought about new desktop environments, such as KDE Plasma 5, GNOME and Xfce which have supplanted CDE in popularity on both Unix and Unix-like operating systems. The Xfce, KDE and GNOME look and feel each tend to undergo more rapid change and less codification than the earlier OPEN LOOK and Motif environments.\n\nAmiga \n\nLater releases added improvements over the original Workbench, like support for high-color Workbench screens, context menus, and embossed 2D icons with pseudo-3D aspect. Some Amiga users preferred alternative interfaces to standard Workbench, such as Directory Opus Magellan.\n\nThe use of improved, third-party GUI engines became common amongst users who preferred more attractive interfaces – such as Magic User Interface (MUI), and ReAction. These object-oriented graphic engines driven by user interface classes and methods were then standardized into the Amiga environment and changed Amiga Workbench to a complete and modern guided interface, with new standard gadgets, animated buttons, true 24-bit-color icons, increased use of wallpapers for screens and windows, alpha channel, transparencies and shadows as any modern GUI provides.\n\nModern derivatives of Workbench are Ambient for MorphOS, Scalos, Workbench for AmigaOS 4 and Wanderer for AROS.\nThere is a brief article on Ambient and descriptions of MUI icons, menus and gadgets at [http://www.aps.fr/article/ambient.html aps.fr] and images of Zune stay at main [http://aros.sourceforge.net/pictures/screenshots/ AROS site].\n\nUse of object oriented graphic engines dramatically changes the look and feel of a GUI to match actual styleguides.\n\nOS/2 \n\nOriginally collaboratively developed by Microsoft and IBM to replace DOS, OS/2 version 1.0 (released in 1987) had no GUI at all. Version 1.1 (released 1988) included Presentation Manager (PM), an implementation of IBM Common User Access, which looked a lot like the later Windows 3.1 UI. After the split with Microsoft, IBM developed the Workplace Shell (WPS) for version 2.0 (released in 1992), a quite radical, object-oriented approach to GUIs. Microsoft later imitated much of this look in Windows 95.\n\nNeXTSTEP \n\nThe NeXTSTEP user interface was used in the NeXT line of computers. NeXTSTEP's first major version was released in 1989. It used Display PostScript for its graphical underpinning. The NeXTSTEP interface's most significant feature was the Dock, carried with some modification into Mac OS X, and had other minor interface details that some found made it easier and more intuitive to use than previous GUIs. NeXTSTEP's GUI was the first to feature opaque dragging of windows in its user interface, on a comparatively weak machine by today's standards, ideally aided by [http://www.bytecellar.com/archives/000092.php high performance graphics hardware].\n\nBeOS \n\nBeOS was developed on custom AT&T Hobbit-based computers before switching to PowerPC hardware by a team led by former Apple executive Jean-Louis Gassée as an alternative to Mac OS. BeOS was later ported to Intel hardware. It used an object-oriented kernel written by Be, and did not use the X Window System, but a different GUI written from scratch. Much effort was spent by the developers to make it an efficient platform for multimedia applications. Be Inc. was [https://archive.is/20130119212047/http://news.com.com/2102-1040_3-271718.html?tag=st.util.print acquired] by PalmSource, Inc. (Palm Inc. at the time) in 2001. The BeOS GUI still lives in Haiku, an open source software reimplementation of the BeOS.\n\nCurrent trends \n\nMobile devices \n\nIn 2007 with the iPhoneMather, John. [https://web.archive.org/web/20070303032701/http://www.rrj.ca/online/658/ iMania], Ryerson Review of Journalism, (February 19, 2007) Retrieved February 19, 2007 and later in 2010 with the introduction of the iPad,\"the iPad could finally spark demand for the hitherto unsuccessful tablet PC\" --Eaton, Nick [http://blog.seattlepi.com/microsoft/archives/199045.asp The iPad/tablet PC market defined?], Seattle Post-Intelligencer, 2010  Apple popularized the post-WIMP style of interaction for multi-touch screens, with those devices considered to be milestones in the development of mobile devices.Bright, Peter [https://arstechnica.com/microsoft/news/2010/07/ballmer-and-microsoft-still-doesnt-get-the-ipad.ars Ballmer (and Microsoft) still doesn't get the iPad], Ars Technica, 2010\n\nOther portable devices such as MP3 players and cell phones have been a burgeoning area of deployment for GUIs in recent years. Since the mid-2000s, a vast majority of portable devices have advanced to having high-screen resolutions and sizes. (The Galaxy Note 4's 2,560 × 1,440 pixel display is an example). Because of this, these devices have their own famed user interfaces and operating systems that have large homebrew communities dedicated to creating their own visual elements, such as icons, menus, wallpapers, and more. Post-WIMP interfaces are often used in these mobile devices, where the traditional pointing devices required by the desktop metaphor are not practical.\n\nAs high-powered graphics hardware draws considerable power and generates significant heat, many of the 3D effects developed between 2000 and 2010 are not practical on this class of device. This has led to the development of simpler interfaces making a design feature of two dimensionality such as exhibited by the Metro (Modern) UI first used in Windows 8 and the 2012 Gmail redesign.\n\n3D user interface \n\nIn the first decade of the 21st century, the rapid development of GPUs led to a trend for the inclusion of 3D effects in window management. It is based in experimental research in User Interface Design trying to expand the expressive power of the existing toolkits in order to enhance the physical cues that allow for direct manipulation. New effects common to several projects are scale resizing and zooming, several windows transformations and animations (wobbly windows, smooth minimization to system tray...), composition of images (used for window drop shadows and transparency) and enhancing the global organization of open windows (zooming to virtual desktops, desktop cube, Exposé, etc.) The proof-of-concept BumpTop desktop combines a physical representation of documents with tools for document classification possible only in the simulated environment, like instant reordering and automated grouping of related documents.\n\nThese effects are popularized thanks to the widespread use of 3D video cards (mainly due to gaming) which allow for complex visual processing with low CPU use, using the 3D acceleration in most modern graphics cards to render the application clients in a 3D scene. The application window is drawn off-screen in a pixel buffer, and the graphics card renders it into the 3D scene.\n\nThis can have the advantage of moving some of the window rendering to the GPU on the graphics card and thus reducing the load on the main CPU, but the facilities that allow this must be available on the graphics card to be able to take advantage of this.\n\nExamples of 3D user-interface software include XGL and Compiz from Novell, and AIGLX bundled with Red Hat Fedora. Quartz Extreme for macOS and Windows 7 and Vista's Aero interface use 3D rendering for shading and transparency effects as well as Exposé and Windows Flip and Flip 3D, respectively. Windows Vista uses Direct3D to accomplish this, whereas the other interfaces use OpenGL.\n\nVirtual reality and presence \n\nVirtual reality devices such as the Oculus Rift and Sony's PlayStation VR (formerly Project Morpheus) aim to provide users with presence, a perception of full immersion into a virtual environment. History of the graphical user interface. http://en.wikipedia.org/?curid=13914."
  }
}
