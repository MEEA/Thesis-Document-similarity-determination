{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=18334",
  "eid" : "325bbf50-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778593733,
  "textBody" : "Logo is an educational programming language, designed in 1967 by Wally Feurzeig, Seymour Papert and Cynthia Solomon. \"Logo\" is not an acronym. It was derived from the Greek logos meaning word or \"thought\" by Feurzeig, to distinguish itself from other programming languages that were primarily numbers, not graphics or logic, oriented.\n\nA general-purpose language, Logo is widely known for its use of turtle graphics, in which commands for movement and drawing produced line graphics either on screen or with a small robot called a turtle. The language was conceived to teach concepts of programming related to Lisp and only later to enable what Papert called \"body-syntonic reasoning\", where students could understand, predict and reason about the turtle's motion by imagining what they would do if they were the turtle. There are substantial differences among the many dialects of Logo, and the situation is confused by the regular appearance of turtle-graphics programs that call themselves Logo.\n\nLogo is a multi-paradigm adaptation and dialect of Lisp, a functional programming language.CSLS Vol 1, Preface .pxvi, Harvey 1997  There is no standard Logo, but UCBLogo has the best facilities for handling lists, files, I/O, and recursion in scripts, and can be used to teach all computer science concepts, as UC Berkeley lecturer Brian Harvey did in his Computer Science Logo Style trilogy.Computer Science Logo Style, Brian Harvey, MIT Press (3 volumes) , , .  Available [http://www.cs.berkeley.edu/~bh/ online]\n\nLogo is usually an interpreted language, although there have been developed compiled Logo dialects (such as Lhogho and Liogo). Logo is not case-sensitive but retains the case used for formatting.\n\nHistory\n\nLogo was created in 1967 at Bolt, Beranek and Newman (BBN), a Cambridge, Massachusetts research firm, by Wally Feurzeig, Cynthia Solomon, and Seymour Papert.[http://el.media.mit.edu/logo-foundation/index.html Logo Foundation] Its intellectual roots are in artificial intelligence, mathematical logic and developmental psychology. The first four years of Logo research, development and teaching work was done at BBN. The first implementation of Logo, called Ghost, was written in LISP on a PDP-1. The goal was to create a mathematical land where children could play with words and sentences.[https://logothings.wikispaces.com/ Cynthia Solomon] Modeled on LISP, the design goals of Logo included accessible power  and informative error messages. The use of virtual Turtles allowed for immediate visual feedback and debugging of graphic programming.\n\nThe first working Logo turtle robot was created in 1969. A display turtle preceded the physical floor turtle. Modern Logo has not changed too much from the basic concepts before the first turtle. The first turtle was a tethered floor roamer, not radio-controlled or wireless. At BBN Paul Wexelblat developed a turtle named Irving that had touch sensors and could move forwards, backwards, rotate, and ding its bell. The earliest year-long school users of Logo were in 1968-69 at Muzzey Jr High, Lexington MA. The virtual and physical turtles were first used by fifth graders at the Bridge School in Lexington, MA in 1970-71.\n\nTurtle and graphics\n\nLogo's most-known feature is the turtle (derived originally from a robot of the same name),[http://el.media.mit.edu/logo-foundation/index.html Logo Foundation] an on-screen \"cursor\"  that showed output from commands for movement and small retractable pen, together producing line graphics. It has traditionally been displayed either as a triangle or a turtle icon (though it can be represented by any icon). Turtle graphics were added to the Logo language by Seymour Papert in the late 1960s to support Papert's version of the turtle robot, a simple robot controlled from the user's workstation that is designed to carry out the drawing functions assigned to it using a small retractable pen set into or attached to the robot's body.\n\nAs a practical matter, the use of turtle geometry instead of a more traditional model mimics the actual movement logic of the turtle robot. The turtle moves with commands that are relative to its own position, LEFT 90 means spin left by 90 degrees. Some Logo implementations, particularly those that allow the use of concurrency and multiple turtles, support collision detection and allow the user to redefine the appearance of the turtle cursor, essentially allowing the Logo turtles to function as sprites.\n\nMultiple turtles are supported by MSWLogo, as well as 3D graphics. Input from COM ports and LPT ports are also allowed by MSWLogo through windows GUI. Interrupts can be triggered via keyboard and mouse events. Simple GIF animations may also be produced on MSWLogo version 6.5 with the gifsave command.\n\nTurtle geometry is also sometimes used in environments other than Logo as an alternative to a strictly coordinate-addressed graphics system. For instance, the idea of turtle graphics is also useful in Lindenmayer system for generating fractals.\n\nImplementations\n\nSome modern derivatives of Logo allow thousands of independently moving turtles. There are two popular implementations: MIT's StarLogo and Northwestern University CCL's NetLogo. They allow for the exploration of emergent phenomena and come with many experiments in social studies, biology, physics, and other areas.  NetLogo is widely used in agent-based simulation in the biological and social sciences.\n\nAlthough there is no single agreed-upon standard, there is a broad consensus on core aspects of the language. As of March 2009 there were 197 implementations and dialects of Logo, each with its own strengths.[http://elica.net/download/papers/LogoTreeProject.pdf The Logo Tree Project] Most of those 197 are no longer in wide use, but many are still under active development. Commercial Logos that are still widely used in schools include MicroWorlds Logo and Imagine Logo.\n\n* Apple Logo for II+ and Apple Logo Writer for the //e, developed by LCSI, was the most broadly used and prevalent early implementation of Logo that peaked in the early to mid-1980s.\n* Atari Logo was released on cartridge by Atari for the Atari 8-bit family.\n* Color Logo was released in 1983 on cartridge (26-2722) and disk (26-2721) by Tandy for the TRS-80 Color Computer\n* Commodore Logo was released, with the subtitle \"A Language for Learning\", by Commodore Electronics.  It was based on MIT Logo and enhanced by Terrapin, Inc.  The Commodore 64 version (C64105) was released on diskette in 1983; the Plus/4 version (T263001) was released on cartridge in 1984.\n* ExperLogo was released in 1985 on floppy by Expertelligence Inc. for the Macintosh_128K.\n* Hot-Logo was released in the mid-1980s by EPCOM for the MSX 8-bit computers with its own set of commands in Brazilian Portuguese. \n* TI Logo (for the TI 99/4A computer) was also used in primary schools, emphasizing Logo's usefulness in teaching computing fundamentals to novice programmers.   IBM marketed their own version of Logo (P/N 6024076), also developed by LCSI (Logo Computer Systems, Inc), for their then-new IBM PC.\n* UCBLogo, also known as Berkeley Logo, is free and cross-platform standard Logo last released in 2009. Subsequently, George Mills at MIT used UCBLogo as the basis for MSWLogo which is more refined and also free. After that, Jim Muller wrote The Great Logo Adventure which was a complete Logo manual and which used MSWLogo as the demonstration language. The book is now out of print, but Jim has released all the files in pdf format. (Check the Logo Foundation website for details.)  MSWLogo has evolved into [http://sourceforge.net/projects/fmslogo/ FMSLogo: An Educational Programming Environment].\n* ObjectLOGO is a variant with object-oriented extensions.\n* [http://www.aucblogo.org/en/Logo.html aUCBLogo] a rewrite and enhancement of UCBLogo.\n* Logo3D is a tridimensional version of Logo and can be found at .\n* Dr. Logo developed by Digital Research and distributed in computers like the Amstrad CPC.\n* Acornsoft Logo, released in 1985 for the BBC Micro and Acorn Electron.\n* In February 1990, Electron User published Timothy Grantham's simple implementation of Logo for the Acorn Electron under the article \"Talking Turtle\".[http://www.acornelectron.co.uk/mags/eu/ills/7_05/s-p20.jpg Talking Turtle] page 20 and 21\n* Work continues to be done in writing Logo implementations. In 2012, the LibreOffice team developed LibreLogo as an extension to some LibreOffice versions. Libre-Logo is written in Python and allows vector graphics to be written in Writer. At least two web based Logos using Berkeley Logo,  HTML5, CSS3 and JQuery can be found.\n* [http://qlogo.org/ QLogo] is an open-source and cross-platform rewrite of UCBLogo with nearly full UCB compatibility that uses hardware-accelerated graphics.\n\nInfluence\n\nLogo was a primary influence on the Smalltalk programming language. It is also the main influence on the Etoys educational programming environment and language, which is essentially a Logo written in Squeak (a variant of Smalltalk). Logo influenced the procedure/method model in AgentSheets and AgentCubes to program agents similar to the notion of a turtle in Logo. Logo provided the underlying language for Boxer.  Boxer was developed at Berkeley and MIT and is based on a 'literacy model', making it easier to use for everyday people.\n\nKTurtle is a variation of Logo implemented at Qt for the KDE environment loosely based on Logo.[http://edu.kde.org/kturtle/ The programming language used in KTurtle is loosely based on Logo.]\n\nAnother result of Logo's influence is the Kojo, a variant of Scala and  Scratch educational programming language, which runs on Squeak, a variant of Smalltalk, which was inspired by Logo.\n\nIn 2015-6  Cubetto an education robotics system for children 3 years plus was developed\nthrough crowd-sourcing funding. Cubetto influenced both by LOGO and by Montessori\nfeatures a small cubic Turtle that turns only through 90 degrees.[https://www.primotoys.com/ primotoys.com]\nCubetto has been described to be an update of button-box MIT LOGO system TORTIS.http://harveycohen.net/oznaki",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Logo (programming language)" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=18334" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "Logo is an educational programming language, designed in 1967 by Wally Feurzeig, Seymour Papert and Cynthia Solomon. \"Logo\" is not an acronym. It was derived from the Greek logos meaning word or \"thought\" by Feurzeig, to distinguish itself from other programming languages that were primarily numbers, not graphics or logic, oriented.\n\nA general-purpose language, Logo is widely known for its use of turtle graphics, in which commands for movement and drawing produced line graphics either on screen or with a small robot called a turtle. The language was conceived to teach concepts of programming related to Lisp and only later to enable what Papert called \"body-syntonic reasoning\", where students could understand, predict and reason about the turtle's motion by imagining what they would do if they were the turtle. There are substantial differences among the many dialects of Logo, and the situation is confused by the regular appearance of turtle-graphics programs that call themselves Logo.\n\nLogo is a multi-paradigm adaptation and dialect of Lisp, a functional programming language.CSLS Vol 1, Preface .pxvi, Harvey 1997  There is no standard Logo, but UCBLogo has the best facilities for handling lists, files, I/O, and recursion in scripts, and can be used to teach all computer science concepts, as UC Berkeley lecturer Brian Harvey did in his Computer Science Logo Style trilogy.Computer Science Logo Style, Brian Harvey, MIT Press (3 volumes) , , .  Available [http://www.cs.berkeley.edu/~bh/ online]\n\nLogo is usually an interpreted language, although there have been developed compiled Logo dialects (such as Lhogho and Liogo). Logo is not case-sensitive but retains the case used for formatting.\n\nHistory\n\nLogo was created in 1967 at Bolt, Beranek and Newman (BBN), a Cambridge, Massachusetts research firm, by Wally Feurzeig, Cynthia Solomon, and Seymour Papert.[http://el.media.mit.edu/logo-foundation/index.html Logo Foundation] Its intellectual roots are in artificial intelligence, mathematical logic and developmental psychology. The first four years of Logo research, development and teaching work was done at BBN. The first implementation of Logo, called Ghost, was written in LISP on a PDP-1. The goal was to create a mathematical land where children could play with words and sentences.[https://logothings.wikispaces.com/ Cynthia Solomon] Modeled on LISP, the design goals of Logo included accessible power  and informative error messages. The use of virtual Turtles allowed for immediate visual feedback and debugging of graphic programming.\n\nThe first working Logo turtle robot was created in 1969. A display turtle preceded the physical floor turtle. Modern Logo has not changed too much from the basic concepts before the first turtle. The first turtle was a tethered floor roamer, not radio-controlled or wireless. At BBN Paul Wexelblat developed a turtle named Irving that had touch sensors and could move forwards, backwards, rotate, and ding its bell. The earliest year-long school users of Logo were in 1968-69 at Muzzey Jr High, Lexington MA. The virtual and physical turtles were first used by fifth graders at the Bridge School in Lexington, MA in 1970-71.\n\nTurtle and graphics\n\nLogo's most-known feature is the turtle (derived originally from a robot of the same name),[http://el.media.mit.edu/logo-foundation/index.html Logo Foundation] an on-screen \"cursor\"  that showed output from commands for movement and small retractable pen, together producing line graphics. It has traditionally been displayed either as a triangle or a turtle icon (though it can be represented by any icon). Turtle graphics were added to the Logo language by Seymour Papert in the late 1960s to support Papert's version of the turtle robot, a simple robot controlled from the user's workstation that is designed to carry out the drawing functions assigned to it using a small retractable pen set into or attached to the robot's body.\n\nAs a practical matter, the use of turtle geometry instead of a more traditional model mimics the actual movement logic of the turtle robot. The turtle moves with commands that are relative to its own position, LEFT 90 means spin left by 90 degrees. Some Logo implementations, particularly those that allow the use of concurrency and multiple turtles, support collision detection and allow the user to redefine the appearance of the turtle cursor, essentially allowing the Logo turtles to function as sprites.\n\nMultiple turtles are supported by MSWLogo, as well as 3D graphics. Input from COM ports and LPT ports are also allowed by MSWLogo through windows GUI. Interrupts can be triggered via keyboard and mouse events. Simple GIF animations may also be produced on MSWLogo version 6.5 with the gifsave command.\n\nTurtle geometry is also sometimes used in environments other than Logo as an alternative to a strictly coordinate-addressed graphics system. For instance, the idea of turtle graphics is also useful in Lindenmayer system for generating fractals.\n\nImplementations\n\nSome modern derivatives of Logo allow thousands of independently moving turtles. There are two popular implementations: MIT's StarLogo and Northwestern University CCL's NetLogo. They allow for the exploration of emergent phenomena and come with many experiments in social studies, biology, physics, and other areas.  NetLogo is widely used in agent-based simulation in the biological and social sciences.\n\nAlthough there is no single agreed-upon standard, there is a broad consensus on core aspects of the language. As of March 2009 there were 197 implementations and dialects of Logo, each with its own strengths.[http://elica.net/download/papers/LogoTreeProject.pdf The Logo Tree Project] Most of those 197 are no longer in wide use, but many are still under active development. Commercial Logos that are still widely used in schools include MicroWorlds Logo and Imagine Logo.\n\n* Apple Logo for II+ and Apple Logo Writer for the //e, developed by LCSI, was the most broadly used and prevalent early implementation of Logo that peaked in the early to mid-1980s.\n* Atari Logo was released on cartridge by Atari for the Atari 8-bit family.\n* Color Logo was released in 1983 on cartridge (26-2722) and disk (26-2721) by Tandy for the TRS-80 Color Computer\n* Commodore Logo was released, with the subtitle \"A Language for Learning\", by Commodore Electronics.  It was based on MIT Logo and enhanced by Terrapin, Inc.  The Commodore 64 version (C64105) was released on diskette in 1983; the Plus/4 version (T263001) was released on cartridge in 1984.\n* ExperLogo was released in 1985 on floppy by Expertelligence Inc. for the Macintosh_128K.\n* Hot-Logo was released in the mid-1980s by EPCOM for the MSX 8-bit computers with its own set of commands in Brazilian Portuguese. \n* TI Logo (for the TI 99/4A computer) was also used in primary schools, emphasizing Logo's usefulness in teaching computing fundamentals to novice programmers.   IBM marketed their own version of Logo (P/N 6024076), also developed by LCSI (Logo Computer Systems, Inc), for their then-new IBM PC.\n* UCBLogo, also known as Berkeley Logo, is free and cross-platform standard Logo last released in 2009. Subsequently, George Mills at MIT used UCBLogo as the basis for MSWLogo which is more refined and also free. After that, Jim Muller wrote The Great Logo Adventure which was a complete Logo manual and which used MSWLogo as the demonstration language. The book is now out of print, but Jim has released all the files in pdf format. (Check the Logo Foundation website for details.)  MSWLogo has evolved into [http://sourceforge.net/projects/fmslogo/ FMSLogo: An Educational Programming Environment].\n* ObjectLOGO is a variant with object-oriented extensions.\n* [http://www.aucblogo.org/en/Logo.html aUCBLogo] a rewrite and enhancement of UCBLogo.\n* Logo3D is a tridimensional version of Logo and can be found at .\n* Dr. Logo developed by Digital Research and distributed in computers like the Amstrad CPC.\n* Acornsoft Logo, released in 1985 for the BBC Micro and Acorn Electron.\n* In February 1990, Electron User published Timothy Grantham's simple implementation of Logo for the Acorn Electron under the article \"Talking Turtle\".[http://www.acornelectron.co.uk/mags/eu/ills/7_05/s-p20.jpg Talking Turtle] page 20 and 21\n* Work continues to be done in writing Logo implementations. In 2012, the LibreOffice team developed LibreLogo as an extension to some LibreOffice versions. Libre-Logo is written in Python and allows vector graphics to be written in Writer. At least two web based Logos using Berkeley Logo,  HTML5, CSS3 and JQuery can be found.\n* [http://qlogo.org/ QLogo] is an open-source and cross-platform rewrite of UCBLogo with nearly full UCB compatibility that uses hardware-accelerated graphics.\n\nInfluence\n\nLogo was a primary influence on the Smalltalk programming language. It is also the main influence on the Etoys educational programming environment and language, which is essentially a Logo written in Squeak (a variant of Smalltalk). Logo influenced the procedure/method model in AgentSheets and AgentCubes to program agents similar to the notion of a turtle in Logo. Logo provided the underlying language for Boxer.  Boxer was developed at Berkeley and MIT and is based on a 'literacy model', making it easier to use for everyday people.\n\nKTurtle is a variation of Logo implemented at Qt for the KDE environment loosely based on Logo.[http://edu.kde.org/kturtle/ The programming language used in KTurtle is loosely based on Logo.]\n\nAnother result of Logo's influence is the Kojo, a variant of Scala and  Scratch educational programming language, which runs on Squeak, a variant of Smalltalk, which was inspired by Logo.\n\nIn 2015-6  Cubetto an education robotics system for children 3 years plus was developed\nthrough crowd-sourcing funding. Cubetto influenced both by LOGO and by Montessori\nfeatures a small cubic Turtle that turns only through 90 degrees.[https://www.primotoys.com/ primotoys.com]\nCubetto has been described to be an update of button-box MIT LOGO system TORTIS.http://harveycohen.net/oznaki. Logo (programming language). http://en.wikipedia.org/?curid=18334."
  }
}
