{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=15445",
  "eid" : "1c699d20-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778556914,
  "textBody" : "Information entropy is defined as the average amount of information produced by a stochastic source of data.\n\nThe measure of information entropy associated with each possible data value is the negative logarithm of the probability mass function for the value. Thus, when the data source has a lower-probability value (i.e., when a low-probability event occurs), the event carries more \"information\" (\"surprisal\") than when the source data has a higher-probability value. The amount of information conveyed by each event defined in this way becomes a random variable whose expected value is the information entropy. Generally, entropy refers to disorder or uncertainty, and the definition of entropy used in information theory is directly analogous to the definition used in statistical thermodynamics. The concept of information entropy was introduced by Claude Shannon in his 1948 paper \"A Mathematical Theory of Communication\". ([https://web.archive.org/web/20120615000000*/https://www.alcatel-lucent.com/bstj/vol27-1948/articles/bstj27-3-379.pdf PDF], archived from [http://www.alcatel-lucent.com/bstj/vol27-1948/articles/bstj27-3-379.pdf here])\n\nThe basic model of a data communication system is composed of three elements, a source of data, a channel, and a receiver, and – as expressed by Shannon, who essentially single-handedly created the field of information theory – the \"fundamental problem of communication\" is for the receiver to be able to identify what data was generated by the source, based on the signal it receives through the channel., July and October, pp. 379–423 and 623–656. The entropy provides an absolute limit on the shortest possible average length of a lossless compression encoding of the data produced by a source, and if the entropy of the source is less than the channel capacity of the communication channel, the data generated by the source can be reliably communicated to the receiver (at least in theory, possibly neglecting some practical considerations such as the complexity of the system needed to convey the data and the amount of time it may take for the data to be conveyed).\n\nInformation entropy is typically measured in bits (alternatively called \"shannons\") or sometimes in \"natural units\" (nats) or decimal digits (called \"dits\", \"bans\", or \"hartleys\"). The unit of the measurement depends on the base of the logarithm that is used to define the entropy.\n\nThe logarithm of the probability distribution is useful as a measure of entropy because it is additive for independent sources. For instance, the entropy of a fair coin toss is 1 bit, and the entropy of  tosses is  bits. In a straightforward representation,  bits are needed to represent a variable that can take one of  values if  is a power of 2. If these values are equally probable, the entropy (in bits) is equal to this number. If one of the values is more probable to occur than the others, an observation that this value occurs is less informative than if some less common outcome had occurred. Conversely, rarer events provide more information when observed. Since observation of less probable events occurs more rarely, the net effect is that the entropy (thought of as average information) received from non-uniformly distributed data is always less than or equal to . Entropy is zero when one outcome is certain to occur. The entropy quantifies these considerations when a probability distribution of the source data is known. The meaning of the events observed (the meaning of messages) does not matter in the definition of entropy. Entropy only takes into account the probability of observing a specific event, so the information it encapsulates is information about the underlying probability distribution, not the meaning of the events themselves.\n\nIntroduction\n\nEntropy is a measure of unpredictability of the state, or equivalently, of its average information content. To get an intuitive understanding of these terms, consider the example of a political poll. Usually, such polls happen because the outcome of the poll is not already known. In other words, the outcome of the poll is relatively unpredictable, and actually performing the poll and learning the results gives some new information; these are just different ways of saying that the a priori entropy of the poll results is large. Now, consider the case that the same poll is performed a second time shortly after the first poll. Since the result of the first poll is already known, the outcome of the second poll can be predicted well and the results should not contain much new information; in this case the a priori entropy of the second poll result is small relative to that of the first.\n\nNow consider the example of a coin toss. Assuming the probability of heads is the same as the probability of tails, then the entropy of the coin toss is as high as it could be. This is because there is no way to predict the outcome of the coin toss ahead of time: if we have to choose, the best we can do is predict that the coin will come up heads, and this prediction will be correct with probability 1/2. Such a coin toss has one bit of entropy since there are two possible outcomes that occur with equal probability, and learning the actual outcome contains one bit of information. In contrast, a coin toss using a coin that has two heads and no tails has zero entropy since the coin will always come up heads, and the outcome can be predicted perfectly. Analogously, one binary-outcome with equiprobable values has a Shannon entropy of \\log_2 2=1 bit. Similarly, one trit with equiprobable values contains \\log_2 3 (about 1.58496) bits of information because it can have one of three values.\n\nEnglish text, treated as a string of characters, has fairly low entropy, i.e., is fairly predictable. Even if we do not know exactly what is going to come next, we can be fairly certain that, for example, 'e' will be far more common than 'z', that the combination 'qu' will be much more common than any other combination with a 'q' in it, and that the combination 'th' will be more common than 'z', 'q', or 'qu'. After the first few letters one can often guess the rest of the word. English text has between 0.6 and 1.3 bits of entropy per character of the message.Schneier, B: Applied Cryptography, Second edition, page 234. John Wiley and Sons.\n\nIf a compression scheme is lossless—that is, you can always recover the entire original message by decompressing—then a compressed message has the same quantity of information as the original, but communicated in fewer characters. That is, it has more information, or a higher entropy, per character. This means a compressed message has less redundancy. Roughly speaking, Shannon's source coding theorem says that a lossless compression scheme cannot compress messages, on average, to have more than one bit of information per bit of message, but that any value less than one bit of information per bit of message can be attained by employing a suitable coding scheme. The entropy of a message per bit multiplied by the length of that message is a measure of how much total information the message contains.\n\nIntuitively, imagine that we wish to transmit sequences comprising the 4 characters 'A', 'B', 'C', and 'D'. Thus, a message to be transmitted might be 'ABADDCAB'. Information theory gives a way of calculating the smallest possible amount of information that will convey this. If all 4 letters are equally likely (25%), we can do no better (over a binary channel) than to have 2 bits encode (in binary) each letter: 'A' might code as '00', 'B' as '01', 'C' as '10', and 'D' as '11'. Now suppose 'A' occurs with 70% probability, 'B' with 26%, and 'C' and 'D' with 2% each. We could assign variable length codes, so that receiving a '1' tells us to look at another bit unless we have already received 2 bits of sequential 1s. In this case, 'A' would be coded as '0' (one bit), 'B' as '10', and 'C' and 'D' as '110' and '111'. It is easy to see that 70% of the time only one bit needs to be sent, 26% of the time two bits, and only 4% of the time 3 bits. On average, then, fewer than 2 bits are required since the entropy is lower (owing to the high prevalence of 'A' followed by 'B' – together 96% of characters). The calculation of the sum of probability-weighted log probabilities measures and captures this effect.\n\nShannon's theorem also implies that no lossless compression scheme can shorten all messages. If some messages come out shorter, at least one must come out longer due to the pigeonhole principle. In practical use, this is generally not a problem, because we are usually only interested in compressing certain types of messages, for example English documents as opposed to gibberish text, or digital photographs rather than noise, and it is unimportant if a compression algorithm makes some unlikely or uninteresting sequences larger. However, the problem can still arise even in everyday use when applying a compression algorithm to already compressed data: for example, making a ZIP file of music, pictures or videos that are already in a compressed format such as FLAC, MP3, WebM, AAC, PNG or JPEG will generally result in a ZIP file that is slightly larger than the source file(s).\n\nDefinition\n\nNamed after Boltzmann's Η-theorem, Shannon defined the entropy  (Greek capital letter eta) of a discrete random variable  with possible values } and probability mass function  as:\n\n\\Eta(X) \\mathrm{E}[\\mathrm{I}(X)] \n \\mathrm{E}[-\\ln(\\mathrm{P}(X))].\n\nHere  is the expected value operator, and  is the information content of .\n is itself a random variable.\n\nThe entropy can explicitly be written as\n\\Eta(X) \\sum_{i\n1}^n {\\mathrm{P}(x_i)\\,\\mathrm{I}(x_i)} -\\sum_{i\n1}^n {\\mathrm{P}(x_i) \\log_b \\mathrm{P}(x_i)},\n\nwhere  is the base of the logarithm used. Common values of  are 2, Euler's number , and 10, and the corresponding units of entropy are the bits for , nats for , and bans for .Schneider, T.D, [http://alum.mit.edu/www/toms/paper/primer/primer.pdf Information theory primer with an appendix on logarithms], National Cancer Institute, 14 April 2007.\n\nIn the case of  for some , the value of the corresponding summand  is taken to be , which is consistent with the limit:\n\n\\lim_{p\\to0+}p\\log (p) = 0.\n\nOne may also define the conditional entropy of two events  and  taking values  and  respectively, as\n\n \\Eta(X|Y)=-\\sum_{i,j}p(x_{i},y_{j})\\log\\frac{p(x_{i},y_{j})}{p(y_{j})}\n\nwhere  is the probability that  and . This quantity should be understood as the amount of randomness in the random variable  given the event .\n\nExample\n\nConsider tossing a coin with known, not necessarily fair, probabilities of coming up heads or tails; this can be modelled as a Bernoulli process.\n\nThe entropy of the unknown result of the next toss of the coin is maximized if the coin is fair (that is, if heads and tails both have equal probability 1/2). This is the situation of maximum uncertainty as it is most difficult to predict the outcome of the next toss; the result of each toss of the coin delivers one full bit of information. This is because\n\\Eta(X) -\\sum_{i\n1}^n {\\mathrm{P}(x_i) \\log_b \\mathrm{P}(x_i)} -\\sum_{i\n1}^2 {(1 / 2) \\log_2 (1 / 2)} -\\sum_{i\n1}^2 {(1 / 2) \\times (-1)} = 1\n\nHowever, if we know the coin is not fair, but comes up heads or tails with probabilities  and , where , then there is less uncertainty. Every time it is tossed, one side is more likely to come up than the other. The reduced uncertainty is quantified in a lower entropy: on average each toss of the coin delivers less than one full bit of information. For example, if =0.7, then\n\\Eta(X)  - p \\log_2 (p) - q \\log_2 (q) \n - 0.7 \\log_2 (0.7) - 0.3 \\log_2 (0.3) \\approx - 0.7 \\times (-0.515) - 0.3 \\times (-1.737) \\approx 0.881 \n\nThe extreme case is that of a double-headed coin that never comes up tails, or a double-tailed coin that never results in a head. Then there is no uncertainty. The entropy is zero: each toss of the coin delivers no new information as the outcome of each coin toss is always certain.\n\nEntropy can be normalized by dividing it by information length. This ratio is called metric entropy and is a measure of the randomness of the information.\n\nRationale\n\nTo understand the meaning of , at first, try to define an information function, , in terms of an event  with probability . How much information is acquired due to the observation of event ? Shannon's solution follows from the fundamental properties of information:\n#  is anti-monotonic in  – an increase in the probability of an event decreases the information from an observed event, and vice versa\n#  – information is a non-negative quantity\n#  – events that always occur do not communicate information\n#  – information due to independent events is additive\n\nThe last is a crucial property. It states that joint probability of independent sources of information communicates as much information as the two individual events separately. Particularly, if the first event can yield one of  equiprobable outcomes and another has one of  equiprobable outcomes then there are  possible outcomes of the joint event. This means that if  bits are needed to encode the first value and  to encode the second, one needs  to encode both. Shannon discovered that the proper choice of function to quantify information, preserving this additivity, is logarithmic, i.e.,\n\n\\mathrm{I}(p) \\log(1/p) \n -\\log(p):\n\nlet I be the information function which one assumes to be twice continuously differentiable, one has:\n\n\\begin{array}{lcl}\nI(p_1 p_2) &=& I(p_1) +  I(p_2) \\\\\np_2 I'(p_1 p_2) &=& I'(p_1) \\\\\nI'(p_1 p_2) + p_1 p_2 I(p_1 p_2) &=& 0 \\\\\nI'(u) + u I(u) &=& 0 \\\\\n(u \\mapsto u I'(u))' &=& 0\n\\end{array}\n\nThis differential equation leads to the solution I(u) k \\log u for any k \\in \\mathbb{R}. Condition 2. leads to k  and especially, k  can be chosen on the form k \n - 1/\\log x with x > 1, which is equivalent to choosing a specific base for the logarithm. The different units of information (bits for , nats for the natural logarithm , bans for  and so on) are just constant multiples of each other. For instance, in case of a fair coin toss, heads provides  bit of information, which is approximately 0.693 nats or 0.301 decimal digits. Because of additivity,  tosses provide  bits of information, which is approximately  nats or  decimal digits.\n\nNow, suppose we have a distribution where event  can happen with probability . Suppose we have sampled it  times and outcome  was, accordingly, seen  times. The total amount of information we have received is \n\\sum_i {n_i \\mathrm{I}(p_i)} = -\\sum_i {N p_i \\log{p_i}}. \nThe average amount of information that we receive per event is therefore\n-\\sum_i {p_i \\log {p_i}}.\n\nAspects\n\nRelationship to thermodynamic entropy\n\nThe inspiration for adopting the word entropy in information theory came from the close resemblance between Shannon's formula and very similar known formulae from statistical mechanics.\n\nIn statistical thermodynamics the most general formula for the thermodynamic entropy  of a thermodynamic system is the Gibbs entropy,\nS = - k_\\text{B} \\sum p_i \\ln p_i \\,\nwhere  is the Boltzmann constant, and  is the probability of a microstate. The Gibbs entropy was defined by J. Willard Gibbs in 1878 after earlier work by Boltzmann (1872).Compare: Boltzmann, Ludwig (1896, 1898). Vorlesungen über Gastheorie : 2 Volumes – Leipzig 1895/98 UB: O 5262-6. English version: Lectures on gas theory. Translated by Stephen G. Brush (1964) Berkeley: University of California Press; (1995) New York: Dover \n\nThe Gibbs entropy translates over almost unchanged into the world of quantum physics to give the von Neumann entropy, introduced by John von Neumann in 1927,\nS = - k_\\text{B} \\,{\\rm Tr}(\\rho \\ln \\rho) \\,\nwhere ρ is the density matrix of the quantum mechanical system and Tr is the trace.\n\nAt an everyday practical level the links between information entropy and thermodynamic entropy are not evident. Physicists and chemists are apt to be more interested in changes in entropy as a system spontaneously evolves away from its initial conditions, in accordance with the second law of thermodynamics, rather than an unchanging probability distribution. And, as the minuteness of Boltzmann's constant  indicates, the changes in  for even tiny amounts of substances in chemical and physical processes represent amounts of entropy that are extremely large compared to anything in data compression or signal processing. Furthermore, in classical thermodynamics the entropy is defined in terms of macroscopic measurements and makes no reference to any probability distribution, which is central to the definition of information entropy.\n\nThe connection between thermodynamics and what is now known as information theory was first made by Ludwig Boltzmann and expressed by his famous equation:\n\nS=k_\\text{B} \\ln(W)\n\nwhere S is the thermodynamic entropy of a particular macrostate (defined by thermodynamic parameters such as temperature, volume, energy, etc.), W is the number of microstates (various combinations of particles in various energy states) that can yield the given macrostate, and kB is Boltzmann's constant. It is assumed that each microstate is equally likely, so that the probability of a given microstate is pi = 1/W. When these probabilities are substituted into the above expression for the Gibbs entropy (or equivalently kB times the Shannon entropy), Boltzmann's equation results. In information theoretic terms, the information entropy of a system is the amount of \"missing\" information needed to determine a microstate, given the macrostate.\n\nIn the view of Jaynes (1957), thermodynamic entropy, as explained by statistical mechanics, should be seen as an application of Shannon's information theory: the thermodynamic entropy is interpreted as being proportional to the amount of further Shannon information needed to define the detailed microscopic state of the system, that remains uncommunicated by a description solely in terms of the macroscopic variables of classical thermodynamics, with the constant of proportionality being just the Boltzmann constant. For example, adding heat to a system increases its thermodynamic entropy because it increases the number of possible microscopic states of the system that are consistent with the measurable values of its macroscopic variables, thus making any complete state description longer. (See article: maximum entropy thermodynamics). Maxwell's demon can (hypothetically) reduce the thermodynamic entropy of a system by using information about the states of individual molecules; but, as Landauer (from 1961) and co-workers have shown, to function the demon himself must increase thermodynamic entropy in the process, by at least the amount of Shannon information he proposes to first acquire and store; and so the total thermodynamic entropy does not decrease (which resolves the paradox). Landauer's principle imposes a lower bound on the amount of heat a computer must generate to process a given amount of information, though modern computers are far less efficient.\n\nEntropy as information content\n\nEntropy is defined in the context of a probabilistic model. Independent fair coin flips have an entropy of 1 bit per flip. A source that always generates a long string of B's has an entropy of 0, since the next character will always be a 'B'.\n\nThe entropy rate of a data source means the average number of bits per symbol needed to encode it. Shannon's experiments with human predictors show an information rate between 0.6 and 1.3 bits per character in English; the PPM compression algorithm can achieve a compression ratio of 1.5 bits per character in English text.\n\nFrom the preceding example, note the following points:\n\n# The amount of entropy is not always an integer number of bits.\n# Many data bits may not convey information. For example, data structures often store information redundantly, or have identical sections regardless of the information in the data structure.\n\nShannon's definition of entropy, when applied to an information source, can determine the minimum channel capacity required to reliably transmit the source as encoded binary digits (see caveat below in italics). The formula can be derived by calculating the mathematical expectation of the amount of information contained in a digit from the information source.  See also Shannon–Hartley theorem.\n\nShannon's entropy measures the information contained in a message as opposed to the portion of the message that is determined (or predictable). Examples of the latter include redundancy in language structure or statistical properties relating to the occurrence frequencies of letter or word pairs, triplets etc. See Markov chain.\n\nEntropy as a measure of diversity\n\nEntropy is one of several ways to measure diversity.  Specifically, Shannon entropy is the logarithm of , the true diversity index with parameter equal to 1.\n\nData compression\n\nEntropy effectively bounds the performance of the strongest lossless compression possible, which can be realized in theory by using the typical set or in practice using Huffman, Lempel–Ziv or arithmetic coding. See also Kolmogorov complexity. In practice, compression algorithms deliberately include some judicious redundancy in the form of checksums to protect against errors.\n\nWorld's technological capacity to store and communicate information \n\nA 2011 study in Science estimates the world's technological capacity to store and communicate optimally compressed information normalized on the most effective compression algorithms available in the year 2007, therefore estimating the entropy of the technologically available sources.[http://www.sciencemag.org/content/332/6025/60 \"The World's Technological Capacity to Store, Communicate, and Compute Information\"], Martin Hilbert and Priscila López (2011), Science, 332(6025), 60–65; free access to the article through here: martinhilbert.net/WorldInfoCapacity.html \n\nThe authors estimate humankind technological capacity to store information (fully entropically compressed) in 1986 and again in 2007. They break the information into three categories—to store information on a medium, to receive information through a one-way broadcast networks, or to exchange information through two-way telecommunication networks.\n\nLimitations of entropy as information content\n\nThere are a number of entropy-related concepts that mathematically quantify information content in some way:\n* the self-information of an individual message or symbol taken from a given probability distribution,\n* the entropy of a given probability distribution of messages or symbols, and\n* the entropy rate of a stochastic process.\n(The \"rate of self-information\" can also be defined for a particular sequence of messages or symbols generated by a given stochastic process: this will always be equal to the entropy rate in the case of a stationary process.) Other quantities of information are also used to compare or relate different sources of information.\n\nIt is important not to confuse the above concepts. Often it is only clear from context which one is meant. For example, when someone says that the \"entropy\" of the English language is about 1 bit per character, they are actually modeling the English language as a stochastic process and talking about its entropy rate. Shannon himself used the term in this way.\n\nAlthough entropy is often used as a characterization of the information content of a data source, this information content is not absolute: it depends crucially on the probabilistic model. A source that always generates the same symbol has an entropy rate of 0, but the definition of what a symbol is depends on the alphabet. Consider a source that produces the string ABABABABAB… in which A is always followed by B and vice versa. If the probabilistic model considers individual letters as independent, the entropy rate of the sequence is 1 bit per character. But if the sequence is considered as \"AB AB AB AB AB …\" with symbols as two-character blocks, then the entropy rate is 0 bits per character.\n\nHowever, if we use very large blocks, then the estimate of per-character entropy rate may become artificially low. This is because in reality, the probability distribution of the sequence is not knowable exactly; it is only an estimate. For example, suppose one considers the text of every book ever published as a sequence, with each symbol being the text of a complete book. If there are  published books, and each book is only published once, the estimate of the probability of each book is , and the entropy (in bits) is . As a practical code, this corresponds to assigning each book a unique identifier and using it in place of the text of the book whenever one wants to refer to the book. This is enormously useful for talking about books, but it is not so useful for characterizing the information content of an individual book, or of language in general: it is not possible to reconstruct the book from its identifier without knowing the probability distribution, that is, the complete text of all the books. The key idea is that the complexity of the probabilistic model must be considered. Kolmogorov complexity is a theoretical generalization of this idea that allows the consideration of the information content of a sequence independent of any particular probability model; it considers the shortest program for a universal computer that outputs the sequence. A code that achieves the entropy rate of a sequence for a given model, plus the codebook (i.e. the probabilistic model), is one such program, but it may not be the shortest.\n\nFor example, the Fibonacci sequence is 1, 1, 2, 3, 5, 8, 13, …. Treating the sequence as a message and each number as a symbol, there are almost as many symbols as there are characters in the message, giving an entropy of approximately . So the first 128 symbols of the Fibonacci sequence has an entropy of approximately 7 bits/symbol. However, the sequence can be expressed using a formula [ for , , ] and this formula has a much lower entropy and applies to any length of the Fibonacci sequence.\n\nLimitations of entropy in cryptography\n\nIn cryptanalysis, entropy is often roughly used as a measure of the unpredictability of a cryptographic key, though its real uncertainty is unmeasurable. For example, a 128-bit key that is uniformly randomly generated has 128 bits of entropy. It also takes (on average) 2^{128-1} guesses to break by brute force. However, entropy fails to capture the number of guesses required if the possible keys are not chosen uniformly. Instead, a measure called guesswork can be used to measure the effort required for a brute force attack.\n\nOther problems may arise from non-uniform distributions used in cryptography. For example, consider a 1000000-digit binary one-time pad using exclusive or. If the pad has 1000000 bits of entropy, it is perfect. If the pad has 999999 bits of entropy, evenly distributed (each individual bit of the pad having 0.999999 bits of entropy) it may provide good security. But if the pad has 999999 bits of entropy, where the first bit is fixed and the remaining 999999 bits are perfectly random, then the first bit of the ciphertext will not be encrypted at all.\n\nData as a Markov process\n\nA common way to define entropy for text is based on the Markov model of text. For an order-0 source (each character is selected independent of the last characters), the binary entropy is:\n\n\\Eta(\\mathcal{S}) = - \\sum p_i \\log_2 p_i ,\n\nwhere  is the probability of . For a first-order Markov source (one in which the probability of selecting a character is dependent only on the immediately preceding character), the entropy rate is:\n\n\\Eta(\\mathcal{S}) = - \\sum_i p_i \\sum_j  \\  p_i (j) \\log_2 p_i (j) , \n\nwhere  is a state (certain preceding characters) and p_i(j) is the probability of  given  as the previous character.\n\nFor a second order Markov source, the entropy rate is\n\n\\Eta(\\mathcal{S}) = -\\sum_i p_i \\sum_j p_i(j) \\sum_k p_{i,j}(k)\\ \\log_2 \\  p_{i,j}(k) .\n\n-ary entropy\n\nIn general the -ary entropy of a source \\mathcal{S}  with source alphabet } and discrete probability distribution } where  is the probability of  (say  is defined by:\n\n \\Eta_b(\\mathcal{S}) - \\sum_{i\n1}^n p_i \\log_b p_i ,\n\nNote: the  in \"-ary entropy\" is the number of different symbols of the ideal alphabet used as a standard yardstick to measure source alphabets. In information theory, two symbols are necessary and sufficient for an alphabet to encode information. Therefore, the default is to let  (\"binary entropy\"). Thus, the entropy of the source alphabet, with its given empiric probability distribution, is a number equal to the number (possibly fractional) of symbols of the \"ideal alphabet\", with an optimal probability distribution, necessary to encode for each symbol of the source alphabet. Also note that \"optimal probability distribution\" here means a uniform distribution: a source alphabet with  symbols has the highest possible entropy (for an alphabet with  symbols) when the probability distribution of the alphabet is uniform. This optimal entropy turns out to be .\n\nEfficiency\n\nA source alphabet with non-uniform distribution will have less entropy than if those symbols had uniform distribution (i.e. the \"optimized alphabet\"). This deficiency in entropy can be expressed as a ratio called efficiency:\n\n\\eta(X) -\\sum_{i\n1}^n \\frac{p(x_i) \\log_b (p(x_i))}{\\log_b (n)}\n\nEfficiency has utility in quantifying the effective use of a communications channel. This formulation is also referred to as the normalized entropy, as the entropy is divided by the maximum entropy {\\log_b (n)}.\n\nCharacterization\n\nShannon entropy is characterized by a small number of criteria, listed below. Any definition of entropy satisfying these assumptions has the form\n-K\\sum_{i=1}^np_i\\log (p_i)\nwhere  is a constant corresponding to a choice of measurement units.\n\nIn the following,  and .\n\nContinuity\n\nThe measure should be continuous, so that changing the values of the probabilities by a very small amount should only change the entropy by a small amount.\n\nSymmetry\n\nThe measure should be unchanged if the outcomes  are re-ordered.\n\\Eta_n\\left(p_1, p_2, \\ldots \\right) = \\Eta_n\\left(p_2, p_1, \\ldots \\right) etc.\n\nMaximum\n\nThe measure should be maximal if all the outcomes are equally likely (uncertainty is highest when all possible events are equiprobable).\n \\Eta_n(p_1,\\ldots,p_n) \\le \\Eta_n\\left(\\frac{1}{n}, \\ldots, \\frac{1}{n}\\right) = \\log_b (n).\n\nFor equiprobable events the entropy should increase with the number of outcomes.\n\\Eta_n\\bigg(\\underbrace{\\frac{1}{n}, \\ldots, \\frac{1}{n}}_{n}\\bigg) \\log_b(n) \n\nFor continuous random variables, the multivariate Gaussian is the distribution with maximum differential entropy.\n\nAdditivity\n\nThe amount of entropy should be independent of how the process is regarded as being divided into parts.\n\nThis last functional relationship characterizes the entropy of a system with sub-systems. It demands that the entropy of a system can be calculated from the entropies of its sub-systems if the interactions between the sub-systems are known.\n\nGiven an ensemble of  uniformly distributed elements that are divided into  boxes (sub-systems) with  elements each, the entropy of the whole ensemble should be equal to the sum of the entropy of the system of boxes and the individual entropies of the boxes, each weighted with the probability of being in that particular box.\n\nFor positive integers  where ,\n\\Eta_n\\left(\\frac{1}{n}, \\ldots, \\frac{1}{n}\\right) \\Eta_k\\left(\\frac{b_1}{n}, \\ldots, \\frac{b_k}{n}\\right) + \\sum_{i\n1}^k \\frac{b_i}{n} \\, \\Eta_{b_i}\\left(\\frac{1}{b_i}, \\ldots, \\frac{1}{b_i}\\right).\n\nChoosing ,  this implies that the entropy of a certain outcome is zero: . This implies that the efficiency of a source alphabet with  symbols can be defined simply as being equal to its -ary entropy. See also Redundancy (information theory).\n\nFurther properties\n\nThe Shannon entropy satisfies the following properties, for some of which it is useful to interpret entropy as the amount of information learned (or uncertainty eliminated) by revealing the value of a random variable :\n\n* Adding or removing an event with probability zero does not contribute to the entropy:\n:\\Eta_{n+1}(p_1,\\ldots,p_n,0) = \\Eta_n(p_1,\\ldots,p_n).\n* The entropy of a discrete random variable is a nonnegative number:\n:\\Eta(X) \\ge 0.\n* It can be confirmed using the Jensen inequality that\n:\\Eta(X) \\operatorname{E}\\left[\\log_b \\left( \\frac{1}{p(X)}\\right) \\right] \\leq \\log_b \\left( \\operatorname{E}\\left[ \\frac{1}{p(X)} \\right] \\right) \n \\log_b(n).\nThis maximal entropy of  is effectively attained by a source alphabet having a uniform probability distribution: uncertainty is maximal when all possible events are equiprobable.\n* The entropy or the amount of information revealed by evaluating  (that is, evaluating  and  simultaneously) is equal to the information revealed by conducting two consecutive experiments: first evaluating the value of , then revealing the value of  given that you know the value of . This may be written as\n: \\Eta(X,Y)\\Eta(X|Y)+\\Eta(Y)\n\\Eta(Y|X)+\\Eta(X).\n* If  where  is a function, then . Applying the previous formula to  yields\n: \\Eta(X)+\\Eta(f(X)|X)=\\Eta(f(X))+\\Eta(X|f(X)), \nso , thus the entropy of a variable can only decrease when the latter is passed through a function.\n* If  and  are two independent random variables, then knowing the value of  doesn't influence our knowledge of the value of  (since the two don't influence each other by independence):\n: \\Eta(X|Y)=\\Eta(X).\n* The entropy of two simultaneous events is no more than the sum of the entropies of each individual event, and are equal if the two events are independent. More specifically, if  and  are two random variables on the same probability space, and  denotes their Cartesian product, then\n: \\Eta(X,Y)\\leq \\Eta(X)+\\Eta(Y).\nProving this mathematically follows easily from the previous two properties of entropy.\n* The entropy \\Eta(p) is concave in the probability mass function p, i.e.\n:\\Eta(\\lambda p_1 + (1-\\lambda) p_2) \\ge \\lambda \\Eta(p_1) + (1-\\lambda) \\Eta(p_2)\nfor all probability mass functions p_1,p_2 and  0 \\le \\lambda \\le 1.\n\nExtending discrete entropy to the continuous case\n\nDifferential entropy\n\nThe Shannon entropy is restricted to random variables taking discrete values. The corresponding formula for a continuous random variable with probability density function  with finite or infinite support \\mathbb X on the real line is defined by analogy, using the above form of the entropy as an expectation:\n\nh[f] \\operatorname{E}[-\\ln (f(x))] \n -\\int_\\mathbb X f(x) \\ln (f(x))\\, dx.\n\nThis formula is usually referred to as the continuous entropy, or differential entropy. A precursor of the continuous entropy  is the expression for the functional  in the H-theorem of Boltzmann.\n\nAlthough the analogy between both functions is suggestive, the following question must be set: is the differential entropy a valid extension of the Shannon discrete entropy? Differential entropy lacks a number of properties that the Shannon discrete entropy has – it can even be negative – and thus corrections have been suggested, notably limiting density of discrete points.\n\nTo answer this question, we must establish a connection between the two functions:\n\nWe wish to obtain a generally finite measure as the bin size goes to zero. In the discrete case, the bin size is the (implicit) width of each of the  (finite or infinite) bins whose probabilities are denoted by . As we generalize to the continuous domain, we must make this width explicit.\n\nTo do this, start with a continuous function  discretized into bins of size \\Delta.\n\nBy the mean-value theorem there exists a value  in each bin such that\n\nf(x_i) \\Delta = \\int_{i\\Delta}^{(i+1)\\Delta} f(x)\\, dx\n\nand thus the integral of the function  can be approximated (in the Riemannian sense) by\n\n\\int_{-\\infty}^{\\infty} f(x)\\, dx \\lim_{\\Delta \\to 0} \\sum_{i \n -\\infty}^{\\infty} f(x_i) \\Delta\n\nwhere this limit and \"bin size goes to zero\" are equivalent.\n\nWe will denote\n\n\\Eta^{\\Delta} :- \\sum_{i\n-\\infty}^{\\infty} f(x_i)  \\Delta \\log \\left(  f(x_i)  \\Delta \\right)\n\nand expanding the logarithm, we have\n\n\\Eta^{\\Delta} - \\sum_{i\n-\\infty}^{\\infty}  f(x_i)  \\Delta \\log (f(x_i)) -\\sum_{i=-\\infty}^{\\infty} f(x_i) \\Delta \\log (\\Delta).\n\nAs Δ → 0, we have\n\n\\begin{align}\n\\sum_{i-\\infty}^{\\infty} f(x_i) \\Delta &\\to \\int_{-\\infty}^{\\infty} f(x)\\, dx \n 1 \\\\\n\\sum_{i=-\\infty}^{\\infty} f(x_i) \\Delta \\log (f(x_i)) &\\to \\int_{-\\infty}^{\\infty} f(x) \\log f(x)\\, dx.\n\\end{align}\n\nBut note that  as , therefore we need a special definition of the differential or continuous entropy:\n\nh[f] \\lim_{\\Delta \\to 0} \\left(\\Eta^{\\Delta} + \\log \\Delta\\right) \n -\\int_{-\\infty}^{\\infty} f(x) \\log f(x)\\,dx,\n\nwhich is, as said before, referred to as the differential entropy. This means that the differential entropy is not a limit of the Shannon entropy for . Rather, it differs from the limit of the Shannon entropy by an infinite offset (see also the article on information dimension)\n\nLimiting density of discrete points\n\nIt turns out as a result that, unlike the Shannon entropy, the differential entropy is not in general a good measure of uncertainty or information. For example, the differential entropy can be negative; also it is not invariant under continuous co-ordinate transformations. This problem may be illustrated by a change of units when x is a dimensioned variable. f(x) will then have the units of 1/x. The argument of the logarithm must be dimensionless, otherwise it is improper, so that the differential entropy as given above  will be improper. If Δ is some \"standard\" value of x (i.e. \"bin size\") and therefore has the same units, then a modified differential entropy may be written in proper form as:\n\nH=\\int_{-\\infty}^\\infty f(x) \\log(f(x)\\,\\Delta)\\,dx\n\nand the result will be the same for any choice of units for x. In fact, the limit of discrete entropy as  N \\rightarrow \\infty  would also include a term of  \\log(N), which would in general be infinite. This is expected, continuous variables would typically have infinite entropy when discretized. The limiting density of discrete points is really a measure of how much easier a distribution is to describe than a distribution that is uniform over its quantization scheme.\n\nRelative entropy\n\nAnother useful measure of entropy that works equally well in the discrete and the continuous case is the relative entropy of a distribution. It is defined as the Kullback–Leibler divergence from the distribution to a reference measure  as follows. Assume that a probability distribution  is absolutely continuous with respect to a measure , i.e. is of the form  for some non-negative -integrable function  with -integral 1, then the relative entropy can be defined as\nD_{\\mathrm{KL}}(p \\| m ) \\int \\log (f(x)) p(dx) \n \\int f(x)\\log (f(x)) m(dx) .\n\nIn this form the relative entropy generalises (up to change in sign) both the discrete entropy, where the measure  is the counting measure, and the differential entropy, where the measure  is the Lebesgue measure. If the measure  is itself a probability distribution, the relative entropy is non-negative, and zero if  as measures. It is defined for any measure space, hence coordinate independent and invariant under co-ordinate reparameterizations if one properly takes into account the transformation of the measure . The relative entropy, and implicitly entropy and differential entropy, do depend on the \"reference\" measure .\n\nUse in combinatorics\n\nEntropy has become a useful quantity in combinatorics.\n\nLoomis–Whitney inequality\n\nA simple example of this is an alternate proof of the Loomis–Whitney inequality: for every subset , we have\n |A|^{d-1}\\leq \\prod_{i=1}^{d} |P_{i}(A)|\nwhere  is the orthogonal projection in the th coordinate:\n P_{i}(A)=\\{(x_{1}, \\ldots, x_{i-1}, x_{i+1}, \\ldots, x_{d}) : (x_{1}, \\ldots, x_{d})\\in A\\}.\n\nThe proof follows as a simple corollary of Shearer's inequality: if  are random variables and  are subsets of } such that every integer between 1 and  lies in exactly  of these subsets, then\n \\Eta[(X_{1}, \\ldots ,X_{d})]\\leq \\frac{1}{r}\\sum_{i=1}^{n}\\Eta[(X_{j})_{j\\in S_{i}}]\nwhere  (X_{j})_{j\\in S_{i}} is the Cartesian product of random variables  with indexes  in  (so the dimension of this vector is equal to the size of ).\n\nWe sketch how Loomis–Whitney follows from this: Indeed, let  be a uniformly distributed random variable with values in  and so that each point in  occurs with equal probability. Then (by the further properties of entropy mentioned above) , where  denotes the cardinality of . Let }. The range of (X_{j})_{j\\in S_{i}} is contained in  and hence  \\Eta[(X_{j})_{j\\in S_{i}}]\\leq \\log |P_{i}(A)|. Now use this to bound the right side of Shearer's inequality and exponentiate the opposite sides of the resulting inequality you obtain.\n\nApproximation to binomial coefficient\n\nFor integers  let . Then\n\\frac{2^{n\\Eta(q)}}{n+1} \\leq \\tbinom nk \\leq 2^{n\\Eta(q)},\nwhere \n\\Eta(q) = -q \\log_2(q) - (1-q) \\log_2(1-q).Aoki, New Approaches to Macroeconomic Modeling. page 43.\n\nHere is a sketch proof. Note that \\tbinom nk q^{qn}(1-q)^{n-nq} is one term of the expression\n\\sum_{i0}^n \\tbinom ni q^i(1-q)^{n-i} \n (q + (1-q))^n = 1. \nRearranging gives the upper bound. For the lower bound one first shows, using some algebra, that it is the largest term in the summation. But then,\n\\tbinom nk q^{qn}(1-q)^{n-nq} \\geq \\tfrac{1}{n+1}\nsince there are  terms in the summation. Rearranging gives the lower bound.\n\nA nice interpretation of this is that the number of binary strings of length  with exactly  many 1's is approximately 2^{n\\Eta(k/n)}.Probability and Computing, M. Mitzenmacher and E. Upfal, Cambridge University Press",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Entropy (information theory)" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=15445" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "Information entropy is defined as the average amount of information produced by a stochastic source of data.\n\nThe measure of information entropy associated with each possible data value is the negative logarithm of the probability mass function for the value. Thus, when the data source has a lower-probability value (i.e., when a low-probability event occurs), the event carries more \"information\" (\"surprisal\") than when the source data has a higher-probability value. The amount of information conveyed by each event defined in this way becomes a random variable whose expected value is the information entropy. Generally, entropy refers to disorder or uncertainty, and the definition of entropy used in information theory is directly analogous to the definition used in statistical thermodynamics. The concept of information entropy was introduced by Claude Shannon in his 1948 paper \"A Mathematical Theory of Communication\". ([https://web.archive.org/web/20120615000000*/https://www.alcatel-lucent.com/bstj/vol27-1948/articles/bstj27-3-379.pdf PDF], archived from [http://www.alcatel-lucent.com/bstj/vol27-1948/articles/bstj27-3-379.pdf here])\n\nThe basic model of a data communication system is composed of three elements, a source of data, a channel, and a receiver, and – as expressed by Shannon, who essentially single-handedly created the field of information theory – the \"fundamental problem of communication\" is for the receiver to be able to identify what data was generated by the source, based on the signal it receives through the channel., July and October, pp. 379–423 and 623–656. The entropy provides an absolute limit on the shortest possible average length of a lossless compression encoding of the data produced by a source, and if the entropy of the source is less than the channel capacity of the communication channel, the data generated by the source can be reliably communicated to the receiver (at least in theory, possibly neglecting some practical considerations such as the complexity of the system needed to convey the data and the amount of time it may take for the data to be conveyed).\n\nInformation entropy is typically measured in bits (alternatively called \"shannons\") or sometimes in \"natural units\" (nats) or decimal digits (called \"dits\", \"bans\", or \"hartleys\"). The unit of the measurement depends on the base of the logarithm that is used to define the entropy.\n\nThe logarithm of the probability distribution is useful as a measure of entropy because it is additive for independent sources. For instance, the entropy of a fair coin toss is 1 bit, and the entropy of  tosses is  bits. In a straightforward representation,  bits are needed to represent a variable that can take one of  values if  is a power of 2. If these values are equally probable, the entropy (in bits) is equal to this number. If one of the values is more probable to occur than the others, an observation that this value occurs is less informative than if some less common outcome had occurred. Conversely, rarer events provide more information when observed. Since observation of less probable events occurs more rarely, the net effect is that the entropy (thought of as average information) received from non-uniformly distributed data is always less than or equal to . Entropy is zero when one outcome is certain to occur. The entropy quantifies these considerations when a probability distribution of the source data is known. The meaning of the events observed (the meaning of messages) does not matter in the definition of entropy. Entropy only takes into account the probability of observing a specific event, so the information it encapsulates is information about the underlying probability distribution, not the meaning of the events themselves.\n\nIntroduction\n\nEntropy is a measure of unpredictability of the state, or equivalently, of its average information content. To get an intuitive understanding of these terms, consider the example of a political poll. Usually, such polls happen because the outcome of the poll is not already known. In other words, the outcome of the poll is relatively unpredictable, and actually performing the poll and learning the results gives some new information; these are just different ways of saying that the a priori entropy of the poll results is large. Now, consider the case that the same poll is performed a second time shortly after the first poll. Since the result of the first poll is already known, the outcome of the second poll can be predicted well and the results should not contain much new information; in this case the a priori entropy of the second poll result is small relative to that of the first.\n\nNow consider the example of a coin toss. Assuming the probability of heads is the same as the probability of tails, then the entropy of the coin toss is as high as it could be. This is because there is no way to predict the outcome of the coin toss ahead of time: if we have to choose, the best we can do is predict that the coin will come up heads, and this prediction will be correct with probability 1/2. Such a coin toss has one bit of entropy since there are two possible outcomes that occur with equal probability, and learning the actual outcome contains one bit of information. In contrast, a coin toss using a coin that has two heads and no tails has zero entropy since the coin will always come up heads, and the outcome can be predicted perfectly. Analogously, one binary-outcome with equiprobable values has a Shannon entropy of \\log_2 2=1 bit. Similarly, one trit with equiprobable values contains \\log_2 3 (about 1.58496) bits of information because it can have one of three values.\n\nEnglish text, treated as a string of characters, has fairly low entropy, i.e., is fairly predictable. Even if we do not know exactly what is going to come next, we can be fairly certain that, for example, 'e' will be far more common than 'z', that the combination 'qu' will be much more common than any other combination with a 'q' in it, and that the combination 'th' will be more common than 'z', 'q', or 'qu'. After the first few letters one can often guess the rest of the word. English text has between 0.6 and 1.3 bits of entropy per character of the message.Schneier, B: Applied Cryptography, Second edition, page 234. John Wiley and Sons.\n\nIf a compression scheme is lossless—that is, you can always recover the entire original message by decompressing—then a compressed message has the same quantity of information as the original, but communicated in fewer characters. That is, it has more information, or a higher entropy, per character. This means a compressed message has less redundancy. Roughly speaking, Shannon's source coding theorem says that a lossless compression scheme cannot compress messages, on average, to have more than one bit of information per bit of message, but that any value less than one bit of information per bit of message can be attained by employing a suitable coding scheme. The entropy of a message per bit multiplied by the length of that message is a measure of how much total information the message contains.\n\nIntuitively, imagine that we wish to transmit sequences comprising the 4 characters 'A', 'B', 'C', and 'D'. Thus, a message to be transmitted might be 'ABADDCAB'. Information theory gives a way of calculating the smallest possible amount of information that will convey this. If all 4 letters are equally likely (25%), we can do no better (over a binary channel) than to have 2 bits encode (in binary) each letter: 'A' might code as '00', 'B' as '01', 'C' as '10', and 'D' as '11'. Now suppose 'A' occurs with 70% probability, 'B' with 26%, and 'C' and 'D' with 2% each. We could assign variable length codes, so that receiving a '1' tells us to look at another bit unless we have already received 2 bits of sequential 1s. In this case, 'A' would be coded as '0' (one bit), 'B' as '10', and 'C' and 'D' as '110' and '111'. It is easy to see that 70% of the time only one bit needs to be sent, 26% of the time two bits, and only 4% of the time 3 bits. On average, then, fewer than 2 bits are required since the entropy is lower (owing to the high prevalence of 'A' followed by 'B' – together 96% of characters). The calculation of the sum of probability-weighted log probabilities measures and captures this effect.\n\nShannon's theorem also implies that no lossless compression scheme can shorten all messages. If some messages come out shorter, at least one must come out longer due to the pigeonhole principle. In practical use, this is generally not a problem, because we are usually only interested in compressing certain types of messages, for example English documents as opposed to gibberish text, or digital photographs rather than noise, and it is unimportant if a compression algorithm makes some unlikely or uninteresting sequences larger. However, the problem can still arise even in everyday use when applying a compression algorithm to already compressed data: for example, making a ZIP file of music, pictures or videos that are already in a compressed format such as FLAC, MP3, WebM, AAC, PNG or JPEG will generally result in a ZIP file that is slightly larger than the source file(s).\n\nDefinition\n\nNamed after Boltzmann's Η-theorem, Shannon defined the entropy  (Greek capital letter eta) of a discrete random variable  with possible values } and probability mass function  as:\n\n\\Eta(X) \\mathrm{E}[\\mathrm{I}(X)] \n \\mathrm{E}[-\\ln(\\mathrm{P}(X))].\n\nHere  is the expected value operator, and  is the information content of .\n is itself a random variable.\n\nThe entropy can explicitly be written as\n\\Eta(X) \\sum_{i\n1}^n {\\mathrm{P}(x_i)\\,\\mathrm{I}(x_i)} -\\sum_{i\n1}^n {\\mathrm{P}(x_i) \\log_b \\mathrm{P}(x_i)},\n\nwhere  is the base of the logarithm used. Common values of  are 2, Euler's number , and 10, and the corresponding units of entropy are the bits for , nats for , and bans for .Schneider, T.D, [http://alum.mit.edu/www/toms/paper/primer/primer.pdf Information theory primer with an appendix on logarithms], National Cancer Institute, 14 April 2007.\n\nIn the case of  for some , the value of the corresponding summand  is taken to be , which is consistent with the limit:\n\n\\lim_{p\\to0+}p\\log (p) = 0.\n\nOne may also define the conditional entropy of two events  and  taking values  and  respectively, as\n\n \\Eta(X|Y)=-\\sum_{i,j}p(x_{i},y_{j})\\log\\frac{p(x_{i},y_{j})}{p(y_{j})}\n\nwhere  is the probability that  and . This quantity should be understood as the amount of randomness in the random variable  given the event .\n\nExample\n\nConsider tossing a coin with known, not necessarily fair, probabilities of coming up heads or tails; this can be modelled as a Bernoulli process.\n\nThe entropy of the unknown result of the next toss of the coin is maximized if the coin is fair (that is, if heads and tails both have equal probability 1/2). This is the situation of maximum uncertainty as it is most difficult to predict the outcome of the next toss; the result of each toss of the coin delivers one full bit of information. This is because\n\\Eta(X) -\\sum_{i\n1}^n {\\mathrm{P}(x_i) \\log_b \\mathrm{P}(x_i)} -\\sum_{i\n1}^2 {(1 / 2) \\log_2 (1 / 2)} -\\sum_{i\n1}^2 {(1 / 2) \\times (-1)} = 1\n\nHowever, if we know the coin is not fair, but comes up heads or tails with probabilities  and , where , then there is less uncertainty. Every time it is tossed, one side is more likely to come up than the other. The reduced uncertainty is quantified in a lower entropy: on average each toss of the coin delivers less than one full bit of information. For example, if =0.7, then\n\\Eta(X)  - p \\log_2 (p) - q \\log_2 (q) \n - 0.7 \\log_2 (0.7) - 0.3 \\log_2 (0.3) \\approx - 0.7 \\times (-0.515) - 0.3 \\times (-1.737) \\approx 0.881 \n\nThe extreme case is that of a double-headed coin that never comes up tails, or a double-tailed coin that never results in a head. Then there is no uncertainty. The entropy is zero: each toss of the coin delivers no new information as the outcome of each coin toss is always certain.\n\nEntropy can be normalized by dividing it by information length. This ratio is called metric entropy and is a measure of the randomness of the information.\n\nRationale\n\nTo understand the meaning of , at first, try to define an information function, , in terms of an event  with probability . How much information is acquired due to the observation of event ? Shannon's solution follows from the fundamental properties of information:\n#  is anti-monotonic in  – an increase in the probability of an event decreases the information from an observed event, and vice versa\n#  – information is a non-negative quantity\n#  – events that always occur do not communicate information\n#  – information due to independent events is additive\n\nThe last is a crucial property. It states that joint probability of independent sources of information communicates as much information as the two individual events separately. Particularly, if the first event can yield one of  equiprobable outcomes and another has one of  equiprobable outcomes then there are  possible outcomes of the joint event. This means that if  bits are needed to encode the first value and  to encode the second, one needs  to encode both. Shannon discovered that the proper choice of function to quantify information, preserving this additivity, is logarithmic, i.e.,\n\n\\mathrm{I}(p) \\log(1/p) \n -\\log(p):\n\nlet I be the information function which one assumes to be twice continuously differentiable, one has:\n\n\\begin{array}{lcl}\nI(p_1 p_2) &=& I(p_1) +  I(p_2) \\\\\np_2 I'(p_1 p_2) &=& I'(p_1) \\\\\nI'(p_1 p_2) + p_1 p_2 I(p_1 p_2) &=& 0 \\\\\nI'(u) + u I(u) &=& 0 \\\\\n(u \\mapsto u I'(u))' &=& 0\n\\end{array}\n\nThis differential equation leads to the solution I(u) k \\log u for any k \\in \\mathbb{R}. Condition 2. leads to k  and especially, k  can be chosen on the form k \n - 1/\\log x with x > 1, which is equivalent to choosing a specific base for the logarithm. The different units of information (bits for , nats for the natural logarithm , bans for  and so on) are just constant multiples of each other. For instance, in case of a fair coin toss, heads provides  bit of information, which is approximately 0.693 nats or 0.301 decimal digits. Because of additivity,  tosses provide  bits of information, which is approximately  nats or  decimal digits.\n\nNow, suppose we have a distribution where event  can happen with probability . Suppose we have sampled it  times and outcome  was, accordingly, seen  times. The total amount of information we have received is \n\\sum_i {n_i \\mathrm{I}(p_i)} = -\\sum_i {N p_i \\log{p_i}}. \nThe average amount of information that we receive per event is therefore\n-\\sum_i {p_i \\log {p_i}}.\n\nAspects\n\nRelationship to thermodynamic entropy\n\nThe inspiration for adopting the word entropy in information theory came from the close resemblance between Shannon's formula and very similar known formulae from statistical mechanics.\n\nIn statistical thermodynamics the most general formula for the thermodynamic entropy  of a thermodynamic system is the Gibbs entropy,\nS = - k_\\text{B} \\sum p_i \\ln p_i \\,\nwhere  is the Boltzmann constant, and  is the probability of a microstate. The Gibbs entropy was defined by J. Willard Gibbs in 1878 after earlier work by Boltzmann (1872).Compare: Boltzmann, Ludwig (1896, 1898). Vorlesungen über Gastheorie : 2 Volumes – Leipzig 1895/98 UB: O 5262-6. English version: Lectures on gas theory. Translated by Stephen G. Brush (1964) Berkeley: University of California Press; (1995) New York: Dover \n\nThe Gibbs entropy translates over almost unchanged into the world of quantum physics to give the von Neumann entropy, introduced by John von Neumann in 1927,\nS = - k_\\text{B} \\,{\\rm Tr}(\\rho \\ln \\rho) \\,\nwhere ρ is the density matrix of the quantum mechanical system and Tr is the trace.\n\nAt an everyday practical level the links between information entropy and thermodynamic entropy are not evident. Physicists and chemists are apt to be more interested in changes in entropy as a system spontaneously evolves away from its initial conditions, in accordance with the second law of thermodynamics, rather than an unchanging probability distribution. And, as the minuteness of Boltzmann's constant  indicates, the changes in  for even tiny amounts of substances in chemical and physical processes represent amounts of entropy that are extremely large compared to anything in data compression or signal processing. Furthermore, in classical thermodynamics the entropy is defined in terms of macroscopic measurements and makes no reference to any probability distribution, which is central to the definition of information entropy.\n\nThe connection between thermodynamics and what is now known as information theory was first made by Ludwig Boltzmann and expressed by his famous equation:\n\nS=k_\\text{B} \\ln(W)\n\nwhere S is the thermodynamic entropy of a particular macrostate (defined by thermodynamic parameters such as temperature, volume, energy, etc.), W is the number of microstates (various combinations of particles in various energy states) that can yield the given macrostate, and kB is Boltzmann's constant. It is assumed that each microstate is equally likely, so that the probability of a given microstate is pi = 1/W. When these probabilities are substituted into the above expression for the Gibbs entropy (or equivalently kB times the Shannon entropy), Boltzmann's equation results. In information theoretic terms, the information entropy of a system is the amount of \"missing\" information needed to determine a microstate, given the macrostate.\n\nIn the view of Jaynes (1957), thermodynamic entropy, as explained by statistical mechanics, should be seen as an application of Shannon's information theory: the thermodynamic entropy is interpreted as being proportional to the amount of further Shannon information needed to define the detailed microscopic state of the system, that remains uncommunicated by a description solely in terms of the macroscopic variables of classical thermodynamics, with the constant of proportionality being just the Boltzmann constant. For example, adding heat to a system increases its thermodynamic entropy because it increases the number of possible microscopic states of the system that are consistent with the measurable values of its macroscopic variables, thus making any complete state description longer. (See article: maximum entropy thermodynamics). Maxwell's demon can (hypothetically) reduce the thermodynamic entropy of a system by using information about the states of individual molecules; but, as Landauer (from 1961) and co-workers have shown, to function the demon himself must increase thermodynamic entropy in the process, by at least the amount of Shannon information he proposes to first acquire and store; and so the total thermodynamic entropy does not decrease (which resolves the paradox). Landauer's principle imposes a lower bound on the amount of heat a computer must generate to process a given amount of information, though modern computers are far less efficient.\n\nEntropy as information content\n\nEntropy is defined in the context of a probabilistic model. Independent fair coin flips have an entropy of 1 bit per flip. A source that always generates a long string of B's has an entropy of 0, since the next character will always be a 'B'.\n\nThe entropy rate of a data source means the average number of bits per symbol needed to encode it. Shannon's experiments with human predictors show an information rate between 0.6 and 1.3 bits per character in English; the PPM compression algorithm can achieve a compression ratio of 1.5 bits per character in English text.\n\nFrom the preceding example, note the following points:\n\n# The amount of entropy is not always an integer number of bits.\n# Many data bits may not convey information. For example, data structures often store information redundantly, or have identical sections regardless of the information in the data structure.\n\nShannon's definition of entropy, when applied to an information source, can determine the minimum channel capacity required to reliably transmit the source as encoded binary digits (see caveat below in italics). The formula can be derived by calculating the mathematical expectation of the amount of information contained in a digit from the information source.  See also Shannon–Hartley theorem.\n\nShannon's entropy measures the information contained in a message as opposed to the portion of the message that is determined (or predictable). Examples of the latter include redundancy in language structure or statistical properties relating to the occurrence frequencies of letter or word pairs, triplets etc. See Markov chain.\n\nEntropy as a measure of diversity\n\nEntropy is one of several ways to measure diversity.  Specifically, Shannon entropy is the logarithm of , the true diversity index with parameter equal to 1.\n\nData compression\n\nEntropy effectively bounds the performance of the strongest lossless compression possible, which can be realized in theory by using the typical set or in practice using Huffman, Lempel–Ziv or arithmetic coding. See also Kolmogorov complexity. In practice, compression algorithms deliberately include some judicious redundancy in the form of checksums to protect against errors.\n\nWorld's technological capacity to store and communicate information \n\nA 2011 study in Science estimates the world's technological capacity to store and communicate optimally compressed information normalized on the most effective compression algorithms available in the year 2007, therefore estimating the entropy of the technologically available sources.[http://www.sciencemag.org/content/332/6025/60 \"The World's Technological Capacity to Store, Communicate, and Compute Information\"], Martin Hilbert and Priscila López (2011), Science, 332(6025), 60–65; free access to the article through here: martinhilbert.net/WorldInfoCapacity.html \n\nThe authors estimate humankind technological capacity to store information (fully entropically compressed) in 1986 and again in 2007. They break the information into three categories—to store information on a medium, to receive information through a one-way broadcast networks, or to exchange information through two-way telecommunication networks.\n\nLimitations of entropy as information content\n\nThere are a number of entropy-related concepts that mathematically quantify information content in some way:\n* the self-information of an individual message or symbol taken from a given probability distribution,\n* the entropy of a given probability distribution of messages or symbols, and\n* the entropy rate of a stochastic process.\n(The \"rate of self-information\" can also be defined for a particular sequence of messages or symbols generated by a given stochastic process: this will always be equal to the entropy rate in the case of a stationary process.) Other quantities of information are also used to compare or relate different sources of information.\n\nIt is important not to confuse the above concepts. Often it is only clear from context which one is meant. For example, when someone says that the \"entropy\" of the English language is about 1 bit per character, they are actually modeling the English language as a stochastic process and talking about its entropy rate. Shannon himself used the term in this way.\n\nAlthough entropy is often used as a characterization of the information content of a data source, this information content is not absolute: it depends crucially on the probabilistic model. A source that always generates the same symbol has an entropy rate of 0, but the definition of what a symbol is depends on the alphabet. Consider a source that produces the string ABABABABAB… in which A is always followed by B and vice versa. If the probabilistic model considers individual letters as independent, the entropy rate of the sequence is 1 bit per character. But if the sequence is considered as \"AB AB AB AB AB …\" with symbols as two-character blocks, then the entropy rate is 0 bits per character.\n\nHowever, if we use very large blocks, then the estimate of per-character entropy rate may become artificially low. This is because in reality, the probability distribution of the sequence is not knowable exactly; it is only an estimate. For example, suppose one considers the text of every book ever published as a sequence, with each symbol being the text of a complete book. If there are  published books, and each book is only published once, the estimate of the probability of each book is , and the entropy (in bits) is . As a practical code, this corresponds to assigning each book a unique identifier and using it in place of the text of the book whenever one wants to refer to the book. This is enormously useful for talking about books, but it is not so useful for characterizing the information content of an individual book, or of language in general: it is not possible to reconstruct the book from its identifier without knowing the probability distribution, that is, the complete text of all the books. The key idea is that the complexity of the probabilistic model must be considered. Kolmogorov complexity is a theoretical generalization of this idea that allows the consideration of the information content of a sequence independent of any particular probability model; it considers the shortest program for a universal computer that outputs the sequence. A code that achieves the entropy rate of a sequence for a given model, plus the codebook (i.e. the probabilistic model), is one such program, but it may not be the shortest.\n\nFor example, the Fibonacci sequence is 1, 1, 2, 3, 5, 8, 13, …. Treating the sequence as a message and each number as a symbol, there are almost as many symbols as there are characters in the message, giving an entropy of approximately . So the first 128 symbols of the Fibonacci sequence has an entropy of approximately 7 bits/symbol. However, the sequence can be expressed using a formula [ for , , ] and this formula has a much lower entropy and applies to any length of the Fibonacci sequence.\n\nLimitations of entropy in cryptography\n\nIn cryptanalysis, entropy is often roughly used as a measure of the unpredictability of a cryptographic key, though its real uncertainty is unmeasurable. For example, a 128-bit key that is uniformly randomly generated has 128 bits of entropy. It also takes (on average) 2^{128-1} guesses to break by brute force. However, entropy fails to capture the number of guesses required if the possible keys are not chosen uniformly. Instead, a measure called guesswork can be used to measure the effort required for a brute force attack.\n\nOther problems may arise from non-uniform distributions used in cryptography. For example, consider a 1000000-digit binary one-time pad using exclusive or. If the pad has 1000000 bits of entropy, it is perfect. If the pad has 999999 bits of entropy, evenly distributed (each individual bit of the pad having 0.999999 bits of entropy) it may provide good security. But if the pad has 999999 bits of entropy, where the first bit is fixed and the remaining 999999 bits are perfectly random, then the first bit of the ciphertext will not be encrypted at all.\n\nData as a Markov process\n\nA common way to define entropy for text is based on the Markov model of text. For an order-0 source (each character is selected independent of the last characters), the binary entropy is:\n\n\\Eta(\\mathcal{S}) = - \\sum p_i \\log_2 p_i ,\n\nwhere  is the probability of . For a first-order Markov source (one in which the probability of selecting a character is dependent only on the immediately preceding character), the entropy rate is:\n\n\\Eta(\\mathcal{S}) = - \\sum_i p_i \\sum_j  \\  p_i (j) \\log_2 p_i (j) , \n\nwhere  is a state (certain preceding characters) and p_i(j) is the probability of  given  as the previous character.\n\nFor a second order Markov source, the entropy rate is\n\n\\Eta(\\mathcal{S}) = -\\sum_i p_i \\sum_j p_i(j) \\sum_k p_{i,j}(k)\\ \\log_2 \\  p_{i,j}(k) .\n\n-ary entropy\n\nIn general the -ary entropy of a source \\mathcal{S}  with source alphabet } and discrete probability distribution } where  is the probability of  (say  is defined by:\n\n \\Eta_b(\\mathcal{S}) - \\sum_{i\n1}^n p_i \\log_b p_i ,\n\nNote: the  in \"-ary entropy\" is the number of different symbols of the ideal alphabet used as a standard yardstick to measure source alphabets. In information theory, two symbols are necessary and sufficient for an alphabet to encode information. Therefore, the default is to let  (\"binary entropy\"). Thus, the entropy of the source alphabet, with its given empiric probability distribution, is a number equal to the number (possibly fractional) of symbols of the \"ideal alphabet\", with an optimal probability distribution, necessary to encode for each symbol of the source alphabet. Also note that \"optimal probability distribution\" here means a uniform distribution: a source alphabet with  symbols has the highest possible entropy (for an alphabet with  symbols) when the probability distribution of the alphabet is uniform. This optimal entropy turns out to be .\n\nEfficiency\n\nA source alphabet with non-uniform distribution will have less entropy than if those symbols had uniform distribution (i.e. the \"optimized alphabet\"). This deficiency in entropy can be expressed as a ratio called efficiency:\n\n\\eta(X) -\\sum_{i\n1}^n \\frac{p(x_i) \\log_b (p(x_i))}{\\log_b (n)}\n\nEfficiency has utility in quantifying the effective use of a communications channel. This formulation is also referred to as the normalized entropy, as the entropy is divided by the maximum entropy {\\log_b (n)}.\n\nCharacterization\n\nShannon entropy is characterized by a small number of criteria, listed below. Any definition of entropy satisfying these assumptions has the form\n-K\\sum_{i=1}^np_i\\log (p_i)\nwhere  is a constant corresponding to a choice of measurement units.\n\nIn the following,  and .\n\nContinuity\n\nThe measure should be continuous, so that changing the values of the probabilities by a very small amount should only change the entropy by a small amount.\n\nSymmetry\n\nThe measure should be unchanged if the outcomes  are re-ordered.\n\\Eta_n\\left(p_1, p_2, \\ldots \\right) = \\Eta_n\\left(p_2, p_1, \\ldots \\right) etc.\n\nMaximum\n\nThe measure should be maximal if all the outcomes are equally likely (uncertainty is highest when all possible events are equiprobable).\n \\Eta_n(p_1,\\ldots,p_n) \\le \\Eta_n\\left(\\frac{1}{n}, \\ldots, \\frac{1}{n}\\right) = \\log_b (n).\n\nFor equiprobable events the entropy should increase with the number of outcomes.\n\\Eta_n\\bigg(\\underbrace{\\frac{1}{n}, \\ldots, \\frac{1}{n}}_{n}\\bigg) \\log_b(n) \n\nFor continuous random variables, the multivariate Gaussian is the distribution with maximum differential entropy.\n\nAdditivity\n\nThe amount of entropy should be independent of how the process is regarded as being divided into parts.\n\nThis last functional relationship characterizes the entropy of a system with sub-systems. It demands that the entropy of a system can be calculated from the entropies of its sub-systems if the interactions between the sub-systems are known.\n\nGiven an ensemble of  uniformly distributed elements that are divided into  boxes (sub-systems) with  elements each, the entropy of the whole ensemble should be equal to the sum of the entropy of the system of boxes and the individual entropies of the boxes, each weighted with the probability of being in that particular box.\n\nFor positive integers  where ,\n\\Eta_n\\left(\\frac{1}{n}, \\ldots, \\frac{1}{n}\\right) \\Eta_k\\left(\\frac{b_1}{n}, \\ldots, \\frac{b_k}{n}\\right) + \\sum_{i\n1}^k \\frac{b_i}{n} \\, \\Eta_{b_i}\\left(\\frac{1}{b_i}, \\ldots, \\frac{1}{b_i}\\right).\n\nChoosing ,  this implies that the entropy of a certain outcome is zero: . This implies that the efficiency of a source alphabet with  symbols can be defined simply as being equal to its -ary entropy. See also Redundancy (information theory).\n\nFurther properties\n\nThe Shannon entropy satisfies the following properties, for some of which it is useful to interpret entropy as the amount of information learned (or uncertainty eliminated) by revealing the value of a random variable :\n\n* Adding or removing an event with probability zero does not contribute to the entropy:\n:\\Eta_{n+1}(p_1,\\ldots,p_n,0) = \\Eta_n(p_1,\\ldots,p_n).\n* The entropy of a discrete random variable is a nonnegative number:\n:\\Eta(X) \\ge 0.\n* It can be confirmed using the Jensen inequality that\n:\\Eta(X) \\operatorname{E}\\left[\\log_b \\left( \\frac{1}{p(X)}\\right) \\right] \\leq \\log_b \\left( \\operatorname{E}\\left[ \\frac{1}{p(X)} \\right] \\right) \n \\log_b(n).\nThis maximal entropy of  is effectively attained by a source alphabet having a uniform probability distribution: uncertainty is maximal when all possible events are equiprobable.\n* The entropy or the amount of information revealed by evaluating  (that is, evaluating  and  simultaneously) is equal to the information revealed by conducting two consecutive experiments: first evaluating the value of , then revealing the value of  given that you know the value of . This may be written as\n: \\Eta(X,Y)\\Eta(X|Y)+\\Eta(Y)\n\\Eta(Y|X)+\\Eta(X).\n* If  where  is a function, then . Applying the previous formula to  yields\n: \\Eta(X)+\\Eta(f(X)|X)=\\Eta(f(X))+\\Eta(X|f(X)), \nso , thus the entropy of a variable can only decrease when the latter is passed through a function.\n* If  and  are two independent random variables, then knowing the value of  doesn't influence our knowledge of the value of  (since the two don't influence each other by independence):\n: \\Eta(X|Y)=\\Eta(X).\n* The entropy of two simultaneous events is no more than the sum of the entropies of each individual event, and are equal if the two events are independent. More specifically, if  and  are two random variables on the same probability space, and  denotes their Cartesian product, then\n: \\Eta(X,Y)\\leq \\Eta(X)+\\Eta(Y).\nProving this mathematically follows easily from the previous two properties of entropy.\n* The entropy \\Eta(p) is concave in the probability mass function p, i.e.\n:\\Eta(\\lambda p_1 + (1-\\lambda) p_2) \\ge \\lambda \\Eta(p_1) + (1-\\lambda) \\Eta(p_2)\nfor all probability mass functions p_1,p_2 and  0 \\le \\lambda \\le 1.\n\nExtending discrete entropy to the continuous case\n\nDifferential entropy\n\nThe Shannon entropy is restricted to random variables taking discrete values. The corresponding formula for a continuous random variable with probability density function  with finite or infinite support \\mathbb X on the real line is defined by analogy, using the above form of the entropy as an expectation:\n\nh[f] \\operatorname{E}[-\\ln (f(x))] \n -\\int_\\mathbb X f(x) \\ln (f(x))\\, dx.\n\nThis formula is usually referred to as the continuous entropy, or differential entropy. A precursor of the continuous entropy  is the expression for the functional  in the H-theorem of Boltzmann.\n\nAlthough the analogy between both functions is suggestive, the following question must be set: is the differential entropy a valid extension of the Shannon discrete entropy? Differential entropy lacks a number of properties that the Shannon discrete entropy has – it can even be negative – and thus corrections have been suggested, notably limiting density of discrete points.\n\nTo answer this question, we must establish a connection between the two functions:\n\nWe wish to obtain a generally finite measure as the bin size goes to zero. In the discrete case, the bin size is the (implicit) width of each of the  (finite or infinite) bins whose probabilities are denoted by . As we generalize to the continuous domain, we must make this width explicit.\n\nTo do this, start with a continuous function  discretized into bins of size \\Delta.\n\nBy the mean-value theorem there exists a value  in each bin such that\n\nf(x_i) \\Delta = \\int_{i\\Delta}^{(i+1)\\Delta} f(x)\\, dx\n\nand thus the integral of the function  can be approximated (in the Riemannian sense) by\n\n\\int_{-\\infty}^{\\infty} f(x)\\, dx \\lim_{\\Delta \\to 0} \\sum_{i \n -\\infty}^{\\infty} f(x_i) \\Delta\n\nwhere this limit and \"bin size goes to zero\" are equivalent.\n\nWe will denote\n\n\\Eta^{\\Delta} :- \\sum_{i\n-\\infty}^{\\infty} f(x_i)  \\Delta \\log \\left(  f(x_i)  \\Delta \\right)\n\nand expanding the logarithm, we have\n\n\\Eta^{\\Delta} - \\sum_{i\n-\\infty}^{\\infty}  f(x_i)  \\Delta \\log (f(x_i)) -\\sum_{i=-\\infty}^{\\infty} f(x_i) \\Delta \\log (\\Delta).\n\nAs Δ → 0, we have\n\n\\begin{align}\n\\sum_{i-\\infty}^{\\infty} f(x_i) \\Delta &\\to \\int_{-\\infty}^{\\infty} f(x)\\, dx \n 1 \\\\\n\\sum_{i=-\\infty}^{\\infty} f(x_i) \\Delta \\log (f(x_i)) &\\to \\int_{-\\infty}^{\\infty} f(x) \\log f(x)\\, dx.\n\\end{align}\n\nBut note that  as , therefore we need a special definition of the differential or continuous entropy:\n\nh[f] \\lim_{\\Delta \\to 0} \\left(\\Eta^{\\Delta} + \\log \\Delta\\right) \n -\\int_{-\\infty}^{\\infty} f(x) \\log f(x)\\,dx,\n\nwhich is, as said before, referred to as the differential entropy. This means that the differential entropy is not a limit of the Shannon entropy for . Rather, it differs from the limit of the Shannon entropy by an infinite offset (see also the article on information dimension)\n\nLimiting density of discrete points\n\nIt turns out as a result that, unlike the Shannon entropy, the differential entropy is not in general a good measure of uncertainty or information. For example, the differential entropy can be negative; also it is not invariant under continuous co-ordinate transformations. This problem may be illustrated by a change of units when x is a dimensioned variable. f(x) will then have the units of 1/x. The argument of the logarithm must be dimensionless, otherwise it is improper, so that the differential entropy as given above  will be improper. If Δ is some \"standard\" value of x (i.e. \"bin size\") and therefore has the same units, then a modified differential entropy may be written in proper form as:\n\nH=\\int_{-\\infty}^\\infty f(x) \\log(f(x)\\,\\Delta)\\,dx\n\nand the result will be the same for any choice of units for x. In fact, the limit of discrete entropy as  N \\rightarrow \\infty  would also include a term of  \\log(N), which would in general be infinite. This is expected, continuous variables would typically have infinite entropy when discretized. The limiting density of discrete points is really a measure of how much easier a distribution is to describe than a distribution that is uniform over its quantization scheme.\n\nRelative entropy\n\nAnother useful measure of entropy that works equally well in the discrete and the continuous case is the relative entropy of a distribution. It is defined as the Kullback–Leibler divergence from the distribution to a reference measure  as follows. Assume that a probability distribution  is absolutely continuous with respect to a measure , i.e. is of the form  for some non-negative -integrable function  with -integral 1, then the relative entropy can be defined as\nD_{\\mathrm{KL}}(p \\| m ) \\int \\log (f(x)) p(dx) \n \\int f(x)\\log (f(x)) m(dx) .\n\nIn this form the relative entropy generalises (up to change in sign) both the discrete entropy, where the measure  is the counting measure, and the differential entropy, where the measure  is the Lebesgue measure. If the measure  is itself a probability distribution, the relative entropy is non-negative, and zero if  as measures. It is defined for any measure space, hence coordinate independent and invariant under co-ordinate reparameterizations if one properly takes into account the transformation of the measure . The relative entropy, and implicitly entropy and differential entropy, do depend on the \"reference\" measure .\n\nUse in combinatorics\n\nEntropy has become a useful quantity in combinatorics.\n\nLoomis–Whitney inequality\n\nA simple example of this is an alternate proof of the Loomis–Whitney inequality: for every subset , we have\n |A|^{d-1}\\leq \\prod_{i=1}^{d} |P_{i}(A)|\nwhere  is the orthogonal projection in the th coordinate:\n P_{i}(A)=\\{(x_{1}, \\ldots, x_{i-1}, x_{i+1}, \\ldots, x_{d}) : (x_{1}, \\ldots, x_{d})\\in A\\}.\n\nThe proof follows as a simple corollary of Shearer's inequality: if  are random variables and  are subsets of } such that every integer between 1 and  lies in exactly  of these subsets, then\n \\Eta[(X_{1}, \\ldots ,X_{d})]\\leq \\frac{1}{r}\\sum_{i=1}^{n}\\Eta[(X_{j})_{j\\in S_{i}}]\nwhere  (X_{j})_{j\\in S_{i}} is the Cartesian product of random variables  with indexes  in  (so the dimension of this vector is equal to the size of ).\n\nWe sketch how Loomis–Whitney follows from this: Indeed, let  be a uniformly distributed random variable with values in  and so that each point in  occurs with equal probability. Then (by the further properties of entropy mentioned above) , where  denotes the cardinality of . Let }. The range of (X_{j})_{j\\in S_{i}} is contained in  and hence  \\Eta[(X_{j})_{j\\in S_{i}}]\\leq \\log |P_{i}(A)|. Now use this to bound the right side of Shearer's inequality and exponentiate the opposite sides of the resulting inequality you obtain.\n\nApproximation to binomial coefficient\n\nFor integers  let . Then\n\\frac{2^{n\\Eta(q)}}{n+1} \\leq \\tbinom nk \\leq 2^{n\\Eta(q)},\nwhere \n\\Eta(q) = -q \\log_2(q) - (1-q) \\log_2(1-q).Aoki, New Approaches to Macroeconomic Modeling. page 43.\n\nHere is a sketch proof. Note that \\tbinom nk q^{qn}(1-q)^{n-nq} is one term of the expression\n\\sum_{i0}^n \\tbinom ni q^i(1-q)^{n-i} \n (q + (1-q))^n = 1. \nRearranging gives the upper bound. For the lower bound one first shows, using some algebra, that it is the largest term in the summation. But then,\n\\tbinom nk q^{qn}(1-q)^{n-nq} \\geq \\tfrac{1}{n+1}\nsince there are  terms in the summation. Rearranging gives the lower bound.\n\nA nice interpretation of this is that the number of binary strings of length  with exactly  many 1's is approximately 2^{n\\Eta(k/n)}.Probability and Computing, M. Mitzenmacher and E. Upfal, Cambridge University Press. Entropy (information theory). http://en.wikipedia.org/?curid=15445."
  }
}
