{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=18153",
  "eid" : "312d0350-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778591749,
  "textBody" : "In logic, a logical connective (also called a logical operator, sentential connective, or sentential operator) is a symbol or word used to connect two or more sentences (of either a formal or a natural language) in a grammatically valid way, such that the value of the compound sentence produced depends only on that of the original sentences and on the meaning of the connective.\n\nThe most common logical connectives are binary connectives (also called dyadic connectives) which join two sentences which can be thought of as the function's operands. Also commonly, negation is considered to be a unary connective.\n\nLogical connectives along with quantifiers are the two main types of logical constants used in formal systems such as propositional logic and predicate logic. Semantics of a logical connective is often, but not always, presented as a truth function.\n\nA logical connective is similar to but not equivalent to a conditional operator.\n\nIn language\n\nNatural language\n\nIn the grammar of natural languages two sentences may be joined by a grammatical conjunction to form a grammatically compound sentence. Some but not all such grammatical conjunctions are truth functions. For example, consider the following sentences:\n\nA: Jack went up the hill.\nB: Jill went up the hill.\nC: Jack went up the hill and Jill went up the hill.\nD: Jack went up the hill so Jill went up the hill.\n\nThe words and and so are grammatical conjunctions joining the sentences (A) and (B)  to form the compound sentences (C) and (D). The and in (C) is a logical connective, since the truth of (C) is completely determined by (A) and (B): it would make no sense to affirm (A) and (B) but deny (C). However, so in (D) is not a logical connective, since it would be quite reasonable to affirm (A) and (B) but deny (D): perhaps, after all, Jill went up the hill to fetch a pail of water, not because Jack had gone up the hill at all.\n\nVarious English words and word pairs express logical connectives, and some of them are synonymous. Examples are:\n\nFormal languages\n\nIn formal languages, truth functions are represented by unambiguous symbols. These symbols are called \"logical connectives\", \"logical operators\", \"propositional operators\", or, in classical logic, \"truth-functional connectives\". See well-formed formula for the rules which allow new well-formed formulas to be constructed by joining other well-formed formulas using truth-functional connectives.\n\nLogical connectives can be used to link more than two statements, so one can speak about \"-ary logical connective\".\n\nCommon logical connectives \n\nList of common logical connectives \n\nCommonly used logical connectives include\n*Negation (not): ¬ , N (prefix), ~\n*Conjunction (and): ∧ , K (prefix), & , ∙\n*Disjunction (or): ∨, A (prefix)\n*Material implication (if...then): → , C (prefix), ⇒ , ⊃\n*Biconditional (if and only if): ↔ , E (prefix), ≡ , =\nAlternative names for biconditional are \"iff\", \"xnor\" and \"bi-implication\".\n\nFor example, the meaning of the statements it is raining and I am indoors is transformed when the two are combined with logical connectives. For statement P It is raining and Q \n I am indoors:\n\n* It is not raining (P)\n* It is raining and  I am indoors (P \\wedge Q)\n* It is raining or I am indoors (P \\or Q)\n* If it is raining, then I am indoors (P \\rightarrow Q)\n* If I am indoors, then it is raining (Q \\rightarrow P)\n* I am indoors if and only if it is raining (P \\leftrightarrow Q)\n\nIt is also common to consider the always true formula and the always false formula to be connective:\n* True formula (⊤, 1, V [prefix], or T)\n* False formula (⊥, 0, O [prefix], or F)\n\nHistory of notations \n\n* Negation: the symbol ¬ appeared in Heyting in 1929.Heyting (1929) Die formalen Regeln der intuitionistischen Logik.Denis Roegel (2002), [http://www.loria.fr/~roegel/cours/symboles-logiques.pdf Petit panorama des notations logiques du 20e siècle] (see chart on page 2). (compare to Frege's symbol  in his Begriffsschrift); the symbol ~ appeared in Russell in 1908;Russell (1908) Mathematical logic as based on the theory of types (American Journal of Mathematics 30, p222–262, also in From Frege to Gödel edited by van Heijenoort). an alternative notation is to add an horizontal line on top of the formula, as in \\overline{P}; another alternative notation is to use a prime symbol as in P'.\n* Conjunction: the symbol ∧ appeared in Heyting in 1929 (compare to Peano's use of the set-theoretic notation of intersection ∩Peano (1889) Arithmetices principia, nova methodo exposita.); & appeared at least in Schönfinkel in 1924;Schönfinkel (1924)  Über die Bausteine der mathematischen Logik, translated as On the building blocks of mathematical logic in From Frege to Gödel edited by van Heijenoort. . comes from Boole's interpretation of logic as an elementary algebra.\n* Disjunction: the symbol ∨ appeared in Russell in 1908 (compare to Peano's use of the set-theoretic notation of union ∪); the symbol + is also used, in spite of the ambiguity coming from the fact that the + of ordinary elementary algebra is an exclusive or when interpreted logically in a two-element ring; punctually in the history a + together with a dot in the lower right corner has been used by Peirce,Peirce (1867) On an improvement in Boole's calculus of logic.\n* Implication: the symbol → can be seen in Hilbert in 1917;Hilbert (1917/1918) Prinzipien der Mathematik (Bernays' course notes). ⊃ was used by Russell in 1908 (compare to Peano's inverted C notation); ⇒ was used in Vax.Vax (1982) Lexique logique, Presses Universitaires de France.\n* Biconditional: the symbol ≡ was used at least by Russell in 1908; ↔ was used at least by Tarski in 1940;Tarski (1940) Introduction to logic and to the methodology of deductive sciences. ⇔ was used in Vax; other symbols appeared punctually in the history such as ⊃⊂ in Gentzen,Gentzen (1934) Untersuchungen über das logische Schließen. ~ in Schönfinkel or ⊂⊃ in Chazal.Chazal (1996) : Éléments de logique formelle.\n* True: the symbol 1 comes from Boole's interpretation of logic as an elementary algebra over the two-element Boolean algebra; other notations include \\bigwedge to be found in Peano.\n* False: the symbol 0 comes also from Boole's interpretation of logic as a ring; other notations include \\bigvee to be found in Peano.\n\nSome authors used letters for connectives at some time of the history: u. for conjunction (German's \"und\" for \"and\") and o. for disjunction (German's \"oder\" for \"or\") in earlier works by Hilbert (1904); Np for negation, Kpq for conjunction, Dpq for alternative denial, Apq for disjunction, Xpq for joint denial, Cpq for implication, Epq for biconditional in Łukasiewicz (1929);See Roegel cf. Polish notation.\n\nRedundancy \n\nSuch a logical connective as converse implication \"←\" is actually the same as material conditional with swapped arguments; thus, the symbol for converse implication is redundant. In some logical calculi (notably, in classical logic) certain essentially different compound statements are logically equivalent. A less trivial example of a redundancy is the classical equivalence between  and . Therefore, a classical-based logical system does not need the conditional operator \"→\" if \"¬\" (not) and \"∨\" (or) are already in use, or may use the \"→\" only as a syntactic sugar for a compound having one negation and one disjunction.\n\nThere are sixteen Boolean functions associating the input truth values  and  with four-digit binary outputs.Bocheński (1959), A Précis of Mathematical Logic, passim. These correspond to possible choices of binary logical connectives for classical logic. Different implementations of classical logic can choose different functionally complete subsets of connectives.\n\nOne approach is to choose a minimal set, and define other connectives by some logical form, as in the example with the material conditional above.\nThe following are the minimal functionally complete sets of operators in classical logic whose arities do not exceed 2:\n;One element: {↑}, {↓}.\n;Two elements: \\{\\vee, \\neg\\}, \\{\\wedge, \\neg\\}, \\{\\to, \\neg\\}, \\{\\gets, \\neg\\}, \\{\\to, \\bot\\}, \\{\\gets, \\bot\\}, \\{\\to, \\nleftrightarrow\\}, \\{\\gets, \\nleftrightarrow\\}, \\{\\to, \\nrightarrow\\}, \\{\\to, \\nleftarrow\\}, \\{\\gets, \\nrightarrow\\}, \\{\\gets, \\nleftarrow\\}, \\{\\nrightarrow, \\neg\\}, \\{\\nleftarrow, \\neg\\}, \\{\\nrightarrow, \\top\\}, \\{\\nleftarrow, \\top\\}, \\{\\nrightarrow, \\leftrightarrow\\}, \\{\\nleftarrow, \\leftrightarrow\\}.\n;Three elements: \\{\\lor, \\leftrightarrow, \\bot\\}, \\{\\lor, \\leftrightarrow, \\nleftrightarrow\\}, \\{\\lor, \\nleftrightarrow, \\top\\}, \\{\\land, \\leftrightarrow, \\bot\\}, \\{\\land, \\leftrightarrow, \\nleftrightarrow\\}, \\{\\land, \\nleftrightarrow, \\top\\}.\nSee more details about functional completeness in classical logic at Functional completeness in truth function.\n\nAnother approach is to use with equal rights connectives of a certain convenient and functionally complete, but not minimal set. This approach requires more propositional axioms, and each equivalence between logical forms must be either an axiom or provable as a theorem.\n\nThe situation, however, is more complicated in intuitionistic logic.   Of its five connectives, {∧, ∨, →, ¬, ⊥}, only negation \"¬\" can be reduced to other connectives (see details). Neither conjunction, disjunction, nor material conditional has an equivalent form constructed of the other four logical connectives.\n\nProperties\n\nSome logical connectives possess properties which may be expressed in the theorems containing the connective. Some of those properties that a logical connective may have are:\n\n*Associativity: Within an expression containing two or more of the same associative connectives in a row, the order of the operations does not matter as long as the sequence of the operands is not changed.\n*Commutativity: The operands of the connective may be swapped preserving logical equivalence to the original expression.\n*Distributivity: A connective denoted by · distributes over another connective denoted by +, if  for all operands , , .\n*Idempotence: Whenever the operands of the operation are the same, the compound is logically equivalent to the operand.\n*Absorption: A pair of connectives ∧, ∨ satisfies the absorption law if a\\land(a\\lor b)=a for all operands , .\n*Monotonicity: If f(a1, ..., an) ≤ f(b1, ..., bn) for all a1, ..., an, b1, ..., bn ∈ {0,1} such that a1 ≤ b1, a2 ≤ b2, ..., an ≤ bn. E.g., ∨, ∧, ⊤, ⊥.\n*Affinity: Each variable always makes a difference in the truth-value of the operation or it never makes a difference. E.g., ¬, ↔,  \\nleftrightarrow, ⊤, ⊥.\n*Duality: To read the truth-value assignments for the operation from top to bottom on its truth table is the same as taking the complement of reading the table of the same or another connective from bottom to top. Without resorting to truth tables it may be formulated as . E.g., ¬.\n*Truth-preserving: The compound all those argument are tautologies is a tautology itself. E.g., ∨, ∧, ⊤, →, ↔, ⊂. (see validity)\n*Falsehood-preserving: The compound all those argument are contradictions is a contradiction itself. E.g., ∨, ∧, \\nleftrightarrow, ⊥, ⊄, ⊅. (see validity)\n*Involutivity (for unary connectives): . E.g. negation in classical logic.\n\nFor classical and intuitionistic logic, the \"=\" symbol means that corresponding implications \"…→…\" and \"…←…\" for logical compounds can be both proved as theorems, and the \"≤\" symbol means that \"…→…\" for logical compounds is a consequence of corresponding \"…→…\" connectives for propositional variables. Some many-valued logics may have incompatible definitions of equivalence and order (entailment).\n\nBoth conjunction and disjunction are associative, commutative and idempotent in classical logic, most varieties of many-valued logic and intuitionistic logic. The same is true about distributivity of conjunction over disjunction and disjunction over conjunction, as well as for the absorption law.\n\nIn classical logic and some varieties of many-valued logic, conjunction and disjunction are dual, and negation is self-dual, the latter is also self-dual in intuitionistic logic. \n\nOrder of precedence\n\nAs a way of reducing the number of necessary parentheses, one may introduce precedence rules: ¬ has higher precedence than ∧, ∧ higher than ∨, and ∨ higher than →. So for example, P \\vee Q \\wedge{\\neg R} \\rightarrow S is short for (P \\vee (Q \\wedge (\\neg R))) \\rightarrow S.\n\nHere is a table that shows a commonly used precedence of logical operators..\n\n\\begin{array}{c|c}\n\\text{Operator} & \\text{Precedence} \\\\\n\\hline\n\\neg & 1\n\\\\\n\\and & 2\n\\\\\n\\vee & 3\n\\\\\n\\to & 4\n\\\\\n\\leftrightarrow & 5\n\\end{array}\n\nHowever, not all compilers use the same order; for instance, an ordering in which disjunction is lower precedence than implication or bi-implication has also been used.. Sometimes precedence between conjunction and disjunction is unspecified requiring to provide it explicitly in given formula with parentheses. The order of precedence determines which connective is the \"main connective\" when interpreting a non-atomic formula.\n\nComputer science\n\nA truth-functional approach to logical operators is implemented as logic gates in digital circuits. Practically all digital circuits (the major exception is DRAM) are built up from NAND, NOR, NOT, and transmission gates; see more details in Truth function in computer science. Logical operators over bit vectors (corresponding to finite Boolean algebras) are bitwise operations.\n\nBut not every usage of a logical connective in computer programming has a Boolean semantic. For example, lazy evaluation is sometimes implemented for  and , so these connectives are not commutative if some of expressions ,  has side effects. Also, a conditional, which in some sense corresponds to the material conditional connective, is essentially non-Boolean because for if (P) then Q; the consequent Q is not executed if the antecedent P is false (although a compound as a whole is successful ≈ \"true\" in such case). This is closer to intuitionist and constructivist views on the material conditional, rather than to classical logic's ones.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Logical connective" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=18153" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "In logic, a logical connective (also called a logical operator, sentential connective, or sentential operator) is a symbol or word used to connect two or more sentences (of either a formal or a natural language) in a grammatically valid way, such that the value of the compound sentence produced depends only on that of the original sentences and on the meaning of the connective.\n\nThe most common logical connectives are binary connectives (also called dyadic connectives) which join two sentences which can be thought of as the function's operands. Also commonly, negation is considered to be a unary connective.\n\nLogical connectives along with quantifiers are the two main types of logical constants used in formal systems such as propositional logic and predicate logic. Semantics of a logical connective is often, but not always, presented as a truth function.\n\nA logical connective is similar to but not equivalent to a conditional operator.\n\nIn language\n\nNatural language\n\nIn the grammar of natural languages two sentences may be joined by a grammatical conjunction to form a grammatically compound sentence. Some but not all such grammatical conjunctions are truth functions. For example, consider the following sentences:\n\nA: Jack went up the hill.\nB: Jill went up the hill.\nC: Jack went up the hill and Jill went up the hill.\nD: Jack went up the hill so Jill went up the hill.\n\nThe words and and so are grammatical conjunctions joining the sentences (A) and (B)  to form the compound sentences (C) and (D). The and in (C) is a logical connective, since the truth of (C) is completely determined by (A) and (B): it would make no sense to affirm (A) and (B) but deny (C). However, so in (D) is not a logical connective, since it would be quite reasonable to affirm (A) and (B) but deny (D): perhaps, after all, Jill went up the hill to fetch a pail of water, not because Jack had gone up the hill at all.\n\nVarious English words and word pairs express logical connectives, and some of them are synonymous. Examples are:\n\nFormal languages\n\nIn formal languages, truth functions are represented by unambiguous symbols. These symbols are called \"logical connectives\", \"logical operators\", \"propositional operators\", or, in classical logic, \"truth-functional connectives\". See well-formed formula for the rules which allow new well-formed formulas to be constructed by joining other well-formed formulas using truth-functional connectives.\n\nLogical connectives can be used to link more than two statements, so one can speak about \"-ary logical connective\".\n\nCommon logical connectives \n\nList of common logical connectives \n\nCommonly used logical connectives include\n*Negation (not): ¬ , N (prefix), ~\n*Conjunction (and): ∧ , K (prefix), & , ∙\n*Disjunction (or): ∨, A (prefix)\n*Material implication (if...then): → , C (prefix), ⇒ , ⊃\n*Biconditional (if and only if): ↔ , E (prefix), ≡ , =\nAlternative names for biconditional are \"iff\", \"xnor\" and \"bi-implication\".\n\nFor example, the meaning of the statements it is raining and I am indoors is transformed when the two are combined with logical connectives. For statement P It is raining and Q \n I am indoors:\n\n* It is not raining (P)\n* It is raining and  I am indoors (P \\wedge Q)\n* It is raining or I am indoors (P \\or Q)\n* If it is raining, then I am indoors (P \\rightarrow Q)\n* If I am indoors, then it is raining (Q \\rightarrow P)\n* I am indoors if and only if it is raining (P \\leftrightarrow Q)\n\nIt is also common to consider the always true formula and the always false formula to be connective:\n* True formula (⊤, 1, V [prefix], or T)\n* False formula (⊥, 0, O [prefix], or F)\n\nHistory of notations \n\n* Negation: the symbol ¬ appeared in Heyting in 1929.Heyting (1929) Die formalen Regeln der intuitionistischen Logik.Denis Roegel (2002), [http://www.loria.fr/~roegel/cours/symboles-logiques.pdf Petit panorama des notations logiques du 20e siècle] (see chart on page 2). (compare to Frege's symbol  in his Begriffsschrift); the symbol ~ appeared in Russell in 1908;Russell (1908) Mathematical logic as based on the theory of types (American Journal of Mathematics 30, p222–262, also in From Frege to Gödel edited by van Heijenoort). an alternative notation is to add an horizontal line on top of the formula, as in \\overline{P}; another alternative notation is to use a prime symbol as in P'.\n* Conjunction: the symbol ∧ appeared in Heyting in 1929 (compare to Peano's use of the set-theoretic notation of intersection ∩Peano (1889) Arithmetices principia, nova methodo exposita.); & appeared at least in Schönfinkel in 1924;Schönfinkel (1924)  Über die Bausteine der mathematischen Logik, translated as On the building blocks of mathematical logic in From Frege to Gödel edited by van Heijenoort. . comes from Boole's interpretation of logic as an elementary algebra.\n* Disjunction: the symbol ∨ appeared in Russell in 1908 (compare to Peano's use of the set-theoretic notation of union ∪); the symbol + is also used, in spite of the ambiguity coming from the fact that the + of ordinary elementary algebra is an exclusive or when interpreted logically in a two-element ring; punctually in the history a + together with a dot in the lower right corner has been used by Peirce,Peirce (1867) On an improvement in Boole's calculus of logic.\n* Implication: the symbol → can be seen in Hilbert in 1917;Hilbert (1917/1918) Prinzipien der Mathematik (Bernays' course notes). ⊃ was used by Russell in 1908 (compare to Peano's inverted C notation); ⇒ was used in Vax.Vax (1982) Lexique logique, Presses Universitaires de France.\n* Biconditional: the symbol ≡ was used at least by Russell in 1908; ↔ was used at least by Tarski in 1940;Tarski (1940) Introduction to logic and to the methodology of deductive sciences. ⇔ was used in Vax; other symbols appeared punctually in the history such as ⊃⊂ in Gentzen,Gentzen (1934) Untersuchungen über das logische Schließen. ~ in Schönfinkel or ⊂⊃ in Chazal.Chazal (1996) : Éléments de logique formelle.\n* True: the symbol 1 comes from Boole's interpretation of logic as an elementary algebra over the two-element Boolean algebra; other notations include \\bigwedge to be found in Peano.\n* False: the symbol 0 comes also from Boole's interpretation of logic as a ring; other notations include \\bigvee to be found in Peano.\n\nSome authors used letters for connectives at some time of the history: u. for conjunction (German's \"und\" for \"and\") and o. for disjunction (German's \"oder\" for \"or\") in earlier works by Hilbert (1904); Np for negation, Kpq for conjunction, Dpq for alternative denial, Apq for disjunction, Xpq for joint denial, Cpq for implication, Epq for biconditional in Łukasiewicz (1929);See Roegel cf. Polish notation.\n\nRedundancy \n\nSuch a logical connective as converse implication \"←\" is actually the same as material conditional with swapped arguments; thus, the symbol for converse implication is redundant. In some logical calculi (notably, in classical logic) certain essentially different compound statements are logically equivalent. A less trivial example of a redundancy is the classical equivalence between  and . Therefore, a classical-based logical system does not need the conditional operator \"→\" if \"¬\" (not) and \"∨\" (or) are already in use, or may use the \"→\" only as a syntactic sugar for a compound having one negation and one disjunction.\n\nThere are sixteen Boolean functions associating the input truth values  and  with four-digit binary outputs.Bocheński (1959), A Précis of Mathematical Logic, passim. These correspond to possible choices of binary logical connectives for classical logic. Different implementations of classical logic can choose different functionally complete subsets of connectives.\n\nOne approach is to choose a minimal set, and define other connectives by some logical form, as in the example with the material conditional above.\nThe following are the minimal functionally complete sets of operators in classical logic whose arities do not exceed 2:\n;One element: {↑}, {↓}.\n;Two elements: \\{\\vee, \\neg\\}, \\{\\wedge, \\neg\\}, \\{\\to, \\neg\\}, \\{\\gets, \\neg\\}, \\{\\to, \\bot\\}, \\{\\gets, \\bot\\}, \\{\\to, \\nleftrightarrow\\}, \\{\\gets, \\nleftrightarrow\\}, \\{\\to, \\nrightarrow\\}, \\{\\to, \\nleftarrow\\}, \\{\\gets, \\nrightarrow\\}, \\{\\gets, \\nleftarrow\\}, \\{\\nrightarrow, \\neg\\}, \\{\\nleftarrow, \\neg\\}, \\{\\nrightarrow, \\top\\}, \\{\\nleftarrow, \\top\\}, \\{\\nrightarrow, \\leftrightarrow\\}, \\{\\nleftarrow, \\leftrightarrow\\}.\n;Three elements: \\{\\lor, \\leftrightarrow, \\bot\\}, \\{\\lor, \\leftrightarrow, \\nleftrightarrow\\}, \\{\\lor, \\nleftrightarrow, \\top\\}, \\{\\land, \\leftrightarrow, \\bot\\}, \\{\\land, \\leftrightarrow, \\nleftrightarrow\\}, \\{\\land, \\nleftrightarrow, \\top\\}.\nSee more details about functional completeness in classical logic at Functional completeness in truth function.\n\nAnother approach is to use with equal rights connectives of a certain convenient and functionally complete, but not minimal set. This approach requires more propositional axioms, and each equivalence between logical forms must be either an axiom or provable as a theorem.\n\nThe situation, however, is more complicated in intuitionistic logic.   Of its five connectives, {∧, ∨, →, ¬, ⊥}, only negation \"¬\" can be reduced to other connectives (see details). Neither conjunction, disjunction, nor material conditional has an equivalent form constructed of the other four logical connectives.\n\nProperties\n\nSome logical connectives possess properties which may be expressed in the theorems containing the connective. Some of those properties that a logical connective may have are:\n\n*Associativity: Within an expression containing two or more of the same associative connectives in a row, the order of the operations does not matter as long as the sequence of the operands is not changed.\n*Commutativity: The operands of the connective may be swapped preserving logical equivalence to the original expression.\n*Distributivity: A connective denoted by · distributes over another connective denoted by +, if  for all operands , , .\n*Idempotence: Whenever the operands of the operation are the same, the compound is logically equivalent to the operand.\n*Absorption: A pair of connectives ∧, ∨ satisfies the absorption law if a\\land(a\\lor b)=a for all operands , .\n*Monotonicity: If f(a1, ..., an) ≤ f(b1, ..., bn) for all a1, ..., an, b1, ..., bn ∈ {0,1} such that a1 ≤ b1, a2 ≤ b2, ..., an ≤ bn. E.g., ∨, ∧, ⊤, ⊥.\n*Affinity: Each variable always makes a difference in the truth-value of the operation or it never makes a difference. E.g., ¬, ↔,  \\nleftrightarrow, ⊤, ⊥.\n*Duality: To read the truth-value assignments for the operation from top to bottom on its truth table is the same as taking the complement of reading the table of the same or another connective from bottom to top. Without resorting to truth tables it may be formulated as . E.g., ¬.\n*Truth-preserving: The compound all those argument are tautologies is a tautology itself. E.g., ∨, ∧, ⊤, →, ↔, ⊂. (see validity)\n*Falsehood-preserving: The compound all those argument are contradictions is a contradiction itself. E.g., ∨, ∧, \\nleftrightarrow, ⊥, ⊄, ⊅. (see validity)\n*Involutivity (for unary connectives): . E.g. negation in classical logic.\n\nFor classical and intuitionistic logic, the \"=\" symbol means that corresponding implications \"…→…\" and \"…←…\" for logical compounds can be both proved as theorems, and the \"≤\" symbol means that \"…→…\" for logical compounds is a consequence of corresponding \"…→…\" connectives for propositional variables. Some many-valued logics may have incompatible definitions of equivalence and order (entailment).\n\nBoth conjunction and disjunction are associative, commutative and idempotent in classical logic, most varieties of many-valued logic and intuitionistic logic. The same is true about distributivity of conjunction over disjunction and disjunction over conjunction, as well as for the absorption law.\n\nIn classical logic and some varieties of many-valued logic, conjunction and disjunction are dual, and negation is self-dual, the latter is also self-dual in intuitionistic logic. \n\nOrder of precedence\n\nAs a way of reducing the number of necessary parentheses, one may introduce precedence rules: ¬ has higher precedence than ∧, ∧ higher than ∨, and ∨ higher than →. So for example, P \\vee Q \\wedge{\\neg R} \\rightarrow S is short for (P \\vee (Q \\wedge (\\neg R))) \\rightarrow S.\n\nHere is a table that shows a commonly used precedence of logical operators..\n\n\\begin{array}{c|c}\n\\text{Operator} & \\text{Precedence} \\\\\n\\hline\n\\neg & 1\n\\\\\n\\and & 2\n\\\\\n\\vee & 3\n\\\\\n\\to & 4\n\\\\\n\\leftrightarrow & 5\n\\end{array}\n\nHowever, not all compilers use the same order; for instance, an ordering in which disjunction is lower precedence than implication or bi-implication has also been used.. Sometimes precedence between conjunction and disjunction is unspecified requiring to provide it explicitly in given formula with parentheses. The order of precedence determines which connective is the \"main connective\" when interpreting a non-atomic formula.\n\nComputer science\n\nA truth-functional approach to logical operators is implemented as logic gates in digital circuits. Practically all digital circuits (the major exception is DRAM) are built up from NAND, NOR, NOT, and transmission gates; see more details in Truth function in computer science. Logical operators over bit vectors (corresponding to finite Boolean algebras) are bitwise operations.\n\nBut not every usage of a logical connective in computer programming has a Boolean semantic. For example, lazy evaluation is sometimes implemented for  and , so these connectives are not commutative if some of expressions ,  has side effects. Also, a conditional, which in some sense corresponds to the material conditional connective, is essentially non-Boolean because for if (P) then Q; the consequent Q is not executed if the antecedent P is false (although a compound as a whole is successful ≈ \"true\" in such case). This is closer to intuitionist and constructivist views on the material conditional, rather than to classical logic's ones. Logical connective. http://en.wikipedia.org/?curid=18153."
  }
}
