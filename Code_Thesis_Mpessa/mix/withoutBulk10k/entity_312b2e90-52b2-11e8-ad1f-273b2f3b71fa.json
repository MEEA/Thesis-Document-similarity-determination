{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=18152",
  "eid" : "312b2e90-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778591737,
  "textBody" : "In logic, mathematics and linguistics, And (∧) is the truth-functional operator of logical conjunction; the and of a set of operands is true if and only if all of its operands are true. The logical connective that represents this operator is typically written as  or . \n\n\"A and B\" is true only if A is true and B is true. \n\nAn operand of a conjunction is a conjunct.\n\nThe term \"logical conjunction\" is also used for the greatest lower bound in lattice theory.\n\nRelated concepts in other fields are:\n\n* In natural language, the coordinating conjunction \"and\".\n* In programming languages, the short-circuit and control structure.\n* In set theory, intersection.\n* In predicate logic, universal quantification.\n\nNotation\n\nAnd is usually denoted by an infix operator: in mathematics and logic,  or ; in electronics, ; and in programming languages, &, &&, or and.   In Jan Łukasiewicz's prefix notation for logic, the operator is K, for Polish koniunkcja.Józef Maria Bocheński (1959), A Précis of Mathematical Logic, translated by Otto Bird from the French and German editions, Dordrecht, North Holland:  D. Reidel, passim.\n\nDefinition\n\nLogical conjunction is an operation on two logical values, typically the values of two propositions, that produces a value of true if and only if both of its operands are true.\n\nThe conjunctive identity is 1, which is to say that AND-ing an expression with 1 will never change the value of the expression. In keeping with the concept of vacuous truth, when conjunction is defined as an operator or function of arbitrary arity, the empty conjunction (AND-ing over an empty set of operands) is often defined as having the result 1.\n\nTruth table\n\nThe truth table of ~A \\and B:\n\nDefined by other operators\n\nIn systems where logical connective is not a primitive, it may be defined as\nA \\land B = \\neg(A \\to \\neg B) \n\nIntroduction and elimination rules\n\nAs a rule of inference, conjunction introduction is a classically valid, simple argument form. The argument form has two premises, A and B. Intuitively, it permits the inference of their conjunction.\n\nA,\nB.\nTherefore, A and B.\n\nor in logical operator notation:\n A, \n B \n \\vdash A \\and B \n\nHere is an example of an argument that fits the form conjunction introduction:\n\nBob likes apples.\nBob likes oranges.\nTherefore, Bob likes apples and oranges.\n\nConjunction elimination is another classically valid, simple argument form. Intuitively, it permits the inference from any conjunction of  either element of that conjunction.\n\nA and B.\nTherefore, A.\n\n...or alternately,\n\nA and B.\nTherefore, B.\n\nIn logical operator notation:\n A \\and B \n \\vdash A \n\n...or alternately,\n\n A \\and B \n \\vdash B \n\nProperties\n\ncommutativity: yes\n\nassociativity: yes\n\ndistributivity: with various operations, especially with or\n\nidempotency: yes\n\nmonotonicity: yes\n\ntruth-preserving: yes\nWhen all inputs are true, the output is true.\n\nfalsehood-preserving: yes\nWhen all inputs are false, the output is false.\n\nWalsh spectrum: (1,-1,-1,1)\n\nNonlinearity: 1 (the function is bent)\n\nIf using binary values for true (1) and false (0), then logical conjunction works exactly like normal arithmetic multiplication.\n\nApplications in computer engineering\n\nIn high-level computer programming and digital electronics, logical conjunction is commonly represented by an infix operator, usually as a keyword such as \"AND\", an algebraic multiplication, or the ampersand symbol \"&\". Many languages also provide short-circuit control structures corresponding to logical conjunction.\n\nLogical conjunction is often used for bitwise operations, where 0 corresponds to false and 1 to true:\n\n* 0 AND 0  =  0,\n* 0 AND 1  =  0,\n* 1 AND 0  =  0,\n* 1 AND 1  =  1.\n\nThe operation can also be applied to two binary words viewed as bitstrings of equal length, by taking the bitwise AND of each pair of bits at corresponding positions. For example:\n\n* 11000110 AND 10100011  =  10000010.\n\nThis can be used to select part of a bitstring using a bit mask.  For example, 10011101 AND 00001000  =  00001000 extracts the fifth bit of an 8-bit bitstring.\n\nIn computer networking, bit masks are used to derive the network address of a subnet within an existing network from a given IP address, by ANDing the IP address and the subnet mask.\n\nLogical conjunction \"AND\" is also used in SQL operations to form database queries.\n\nThe Curry–Howard correspondence relates logical conjunction to product types.\n\nSet-theoretic correspondence\n\nThe  membership of an element of an intersection set in set theory is defined in terms of a logical conjunction: x ∈ A ∩ B if and only if (x ∈ A) ∧ (x ∈ B). Through this correspondence, set-theoretic intersection shares several properties with logical conjunction, such as associativity, commutativity, and idempotence.\n\nNatural language\n\nAs with other notions formalized in mathematical logic, the logical conjunction and is related to, but not the same as, the grammatical conjunction and in natural languages.\n\nEnglish \"and\" has properties not captured by logical conjunction.  For example, \"and\" sometimes implies order.  For example, \"They got married and had a child\" in common discourse means that the marriage came before the child.  The word \"and\" can also imply a partition of a thing into parts, as \"The American flag is red, white, and blue.\"   Here it is not meant that the flag is at once red, white, and blue, but rather that it has a part of each color.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Logical conjunction" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=18152" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "In logic, mathematics and linguistics, And (∧) is the truth-functional operator of logical conjunction; the and of a set of operands is true if and only if all of its operands are true. The logical connective that represents this operator is typically written as  or . \n\n\"A and B\" is true only if A is true and B is true. \n\nAn operand of a conjunction is a conjunct.\n\nThe term \"logical conjunction\" is also used for the greatest lower bound in lattice theory.\n\nRelated concepts in other fields are:\n\n* In natural language, the coordinating conjunction \"and\".\n* In programming languages, the short-circuit and control structure.\n* In set theory, intersection.\n* In predicate logic, universal quantification.\n\nNotation\n\nAnd is usually denoted by an infix operator: in mathematics and logic,  or ; in electronics, ; and in programming languages, &, &&, or and.   In Jan Łukasiewicz's prefix notation for logic, the operator is K, for Polish koniunkcja.Józef Maria Bocheński (1959), A Précis of Mathematical Logic, translated by Otto Bird from the French and German editions, Dordrecht, North Holland:  D. Reidel, passim.\n\nDefinition\n\nLogical conjunction is an operation on two logical values, typically the values of two propositions, that produces a value of true if and only if both of its operands are true.\n\nThe conjunctive identity is 1, which is to say that AND-ing an expression with 1 will never change the value of the expression. In keeping with the concept of vacuous truth, when conjunction is defined as an operator or function of arbitrary arity, the empty conjunction (AND-ing over an empty set of operands) is often defined as having the result 1.\n\nTruth table\n\nThe truth table of ~A \\and B:\n\nDefined by other operators\n\nIn systems where logical connective is not a primitive, it may be defined as\nA \\land B = \\neg(A \\to \\neg B) \n\nIntroduction and elimination rules\n\nAs a rule of inference, conjunction introduction is a classically valid, simple argument form. The argument form has two premises, A and B. Intuitively, it permits the inference of their conjunction.\n\nA,\nB.\nTherefore, A and B.\n\nor in logical operator notation:\n A, \n B \n \\vdash A \\and B \n\nHere is an example of an argument that fits the form conjunction introduction:\n\nBob likes apples.\nBob likes oranges.\nTherefore, Bob likes apples and oranges.\n\nConjunction elimination is another classically valid, simple argument form. Intuitively, it permits the inference from any conjunction of  either element of that conjunction.\n\nA and B.\nTherefore, A.\n\n...or alternately,\n\nA and B.\nTherefore, B.\n\nIn logical operator notation:\n A \\and B \n \\vdash A \n\n...or alternately,\n\n A \\and B \n \\vdash B \n\nProperties\n\ncommutativity: yes\n\nassociativity: yes\n\ndistributivity: with various operations, especially with or\n\nidempotency: yes\n\nmonotonicity: yes\n\ntruth-preserving: yes\nWhen all inputs are true, the output is true.\n\nfalsehood-preserving: yes\nWhen all inputs are false, the output is false.\n\nWalsh spectrum: (1,-1,-1,1)\n\nNonlinearity: 1 (the function is bent)\n\nIf using binary values for true (1) and false (0), then logical conjunction works exactly like normal arithmetic multiplication.\n\nApplications in computer engineering\n\nIn high-level computer programming and digital electronics, logical conjunction is commonly represented by an infix operator, usually as a keyword such as \"AND\", an algebraic multiplication, or the ampersand symbol \"&\". Many languages also provide short-circuit control structures corresponding to logical conjunction.\n\nLogical conjunction is often used for bitwise operations, where 0 corresponds to false and 1 to true:\n\n* 0 AND 0  =  0,\n* 0 AND 1  =  0,\n* 1 AND 0  =  0,\n* 1 AND 1  =  1.\n\nThe operation can also be applied to two binary words viewed as bitstrings of equal length, by taking the bitwise AND of each pair of bits at corresponding positions. For example:\n\n* 11000110 AND 10100011  =  10000010.\n\nThis can be used to select part of a bitstring using a bit mask.  For example, 10011101 AND 00001000  =  00001000 extracts the fifth bit of an 8-bit bitstring.\n\nIn computer networking, bit masks are used to derive the network address of a subnet within an existing network from a given IP address, by ANDing the IP address and the subnet mask.\n\nLogical conjunction \"AND\" is also used in SQL operations to form database queries.\n\nThe Curry–Howard correspondence relates logical conjunction to product types.\n\nSet-theoretic correspondence\n\nThe  membership of an element of an intersection set in set theory is defined in terms of a logical conjunction: x ∈ A ∩ B if and only if (x ∈ A) ∧ (x ∈ B). Through this correspondence, set-theoretic intersection shares several properties with logical conjunction, such as associativity, commutativity, and idempotence.\n\nNatural language\n\nAs with other notions formalized in mathematical logic, the logical conjunction and is related to, but not the same as, the grammatical conjunction and in natural languages.\n\nEnglish \"and\" has properties not captured by logical conjunction.  For example, \"and\" sometimes implies order.  For example, \"They got married and had a child\" in common discourse means that the marriage came before the child.  The word \"and\" can also imply a partition of a thing into parts, as \"The American flag is red, white, and blue.\"   Here it is not meant that the flag is at once red, white, and blue, but rather that it has a part of each color. Logical conjunction. http://en.wikipedia.org/?curid=18152."
  }
}
