{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=15107",
  "eid" : "1a082d80-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778552920,
  "textBody" : "The Internet Control Message Protocol (ICMP) is a supporting protocol in the Internet protocol suite. It is used by network devices, including routers, to send error messages and operational information indicating, for example, that a requested service is not available or that a host or router could not be reached. ICMP differs from transport protocols such as TCP and UDP in that it is not typically used to exchange data between systems, nor is it regularly employed by end-user network applications (with the exception of some diagnostic tools like ping and traceroute).\n\nICMP for IPv4 is defined in RFC 792.\n\nTechnical details \n\nThe Internet Control Message Protocol is part of the Internet Protocol Suite, as defined in RFC 792. ICMP messages are typically used for diagnostic or control purposes or generated in response to errors in IP operations (as specified in RFC 1122). ICMP errors are directed to the source IP address of the originating packet.\n\nFor example, every device (such as an intermediate router) forwarding an IP datagram first decrements the time to live (TTL) field in the IP header by one. If the resulting TTL is 0, the packet is discarded and an ICMP time exceeded in transit message is sent to the datagram's source address.\n\nICMP uses the basic support of IP as if it were a higher level protocol, however, ICMP is actually an integral part of IP. Although ICMP messages are contained within standard IP packets, ICMP messages are usually processed as a special case, distinguished from normal IP processing. In many cases, it is necessary to inspect the contents of the ICMP message and deliver the appropriate error message to the application responsible for transmission of the IP packet that prompted the sending of the ICMP message.\n\nMany commonly used network utilities are based on ICMP messages. The traceroute command can be implemented by transmitting IP datagrams with specially set IP TTL header fields, and looking for ICMP time exceeded in transit and Destination unreachable messages generated in response. The related ping utility is implemented using the ICMP echo request and echo reply messages.\n\nICMP datagram structure\n\nThe ICMP packet is encapsulated in an IPv4 packet. The packet consists of header and data sections.\n\nHeader\n\nThe ICMP header starts after the IPv4 header and is identified by IP protocol number '1'. All ICMP packets have an 8-byte header and variable-sized data section. The first 4 bytes of the header have fixed format, while the last 4 bytes depend on the type/code of that ICMP packet.\n\n; Type : ICMP type, see Control messages.\n; Code : ICMP subtype, see Control messages.\n; Checksum : Error checking data, calculated from the ICMP header and data, with value 0 substituted for this field. The Internet Checksum is used, specified in RFC 1071.\n; Rest of Header : Four-bytes field, contents vary based on the ICMP type and code.\n\nData\n\nICMP error messages contain a data section that includes a copy of the entire IPv4 header, plus at least the first eight bytes of data from the IPv4 packet that caused the error message. The maximum length of ICMP error messages is 576 bytes. This data is used by the host to match the message to the appropriate process.  If a higher level protocol uses port numbers, they are assumed to be in the first eight bytes of the original datagram's data.\n\nThe variable size of the ICMP packet data section has been exploited. In the \"Ping of death\", large or fragmented ping packets are used for denial-of-service attacks. ICMP data can also be used to create covert channels for communication. These channels are known as ICMP tunnels.\n\nControl messages\n\nSource quench\n\nSource Quench requests that the sender decrease the rate of messages sent to a router or host. This message may be generated if a router or host does not have sufficient buffer space to process the request, or may occur if the router or host buffer is approaching its limit.\n\nData is sent at a very high speed from a host or from several hosts at the same time to a particular router on a network. Although a router has buffering capabilities, the buffering is limited to within a specified range. The router cannot queue any more data than the capacity of the limited buffering space. Thus if the queue gets filled up, incoming data is discarded until the queue is no longer full. But as no acknowledgement mechanism is present in the network layer, the client does not know whether the data has reached the destination successfully. Hence some remedial measures should be taken by the network layer to avoid these kind of situations. These measures are referred to as source quench. In a source quench mechanism, the router sees that the incoming data rate is much faster than the outgoing data rate, and sends an ICMP message to the clients, informing them that they should slow down their data transfer speeds or wait for a certain amount of time before attempting to send more data. When a client receives this message, it will automatically slow down the outgoing data rate or wait for a sufficient amount of time, which enables the router to empty the queue. Thus the source quench ICMP message acts as flow control in the network layer.\n\nSince research suggested that \"ICMP Source Quench [was] an ineffective (and unfair) antidote for congestion\", routers' creation of source quench messages was deprecated in 1995 by RFC 1812. Furthermore, forwarding of and any kind of reaction to (flow control actions) source quench messages was deprecated from 2012 by RFC 6633.\n\nWhere:\nType must be set to 4\nCode must be set to 0\nIP header and additional data is used by the sender to match the reply with the associated request\n\nRedirect\n\nRedirect requests data packets be sent on an alternative route. ICMP Redirect is a mechanism for routers to convey routing information to hosts. The message informs a host to update its routing information (to send packets on an alternative route). If a host tries to send data through a router (R1) and R1 sends the data on another router (R2) and a direct path from the host to R2 is available (that is, the host and R2 are on the same Ethernet segment), then R1 will send a redirect message to inform the host that the best route for the destination is via R2. The host should then send packets for the destination directly to R2. The router will still send the original datagram to the intended destination. However, if the datagram contains routing information, this message will not be sent even if a better route is available. RFC 1122 states that redirects should only be sent by gateways and should not be sent by Internet hosts.\n\nWhere:\nType must be set to 5.\nCode specifies the reason for the redirection, may be one of the following:\n:\nIP address is the 32-bit address of the gateway to which the redirection should be sent.\nIP header and additional data is included to allow the host to match the reply with the request that caused the redirection reply.\n\nTime exceeded\n\nTime Exceeded is generated by a gateway to inform the source of a discarded datagram due to the time to live field reaching zero.  A time exceeded message may also be sent by a host if it fails to reassemble a fragmented datagram within its time limit.\n\nTime exceeded messages are used by the traceroute utility to identify gateways on the path between two hosts.\n\nWhere:\nType must be set to 11\nCode specifies the reason for the time exceeded message, include the following:\n:\nIP header and first 64 bits of the original payload are used by the source host to match the time exceeded message to the discarded datagram. For higher level protocols such as UDP and TCP the 64 bit payload will include the source and destination ports of the discarded packet.\n\nTimestamp\n\nTimestamp is used for time synchronization.  The originating timestamp is set to the time (in milliseconds since midnight) the sender last touched the packet. The receive and transmit timestamps are not used.\n\nWhere:\nType must be set to 13\nCode must be set to 0\nIdentifier and Sequence Number can be used by the client to match the timestamp reply with the timestamp request.\nOriginate timestamp is the number of milliseconds since midnight Universal Time (UT). If a UT reference is not available the most-significant bit can be set to indicate a non-standard time value.\n\nTimestamp reply\n\nTimestamp Reply replies to a Timestamp message.  It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp indicating when the Timestamp was received and a transmit timestamp indicating when the Timestamp reply was sent.\n\nWhere:\nType must be set to 14\nCode must be set to 0\nIdentifier and Sequence number can be used by the client to match the reply with the request that caused the reply.\nOriginate timestamp is the time the sender last touched the message before sending it.\nReceive timestamp is the time the echoer first touched it on receipt.\nTransmit timestamp is the time the echoer last touched the message on sending it.\n\nAll timestamps are in units of milliseconds since midnight UT. If the time is not available in milliseconds or cannot be provided with respect to midnight UT then any time can be inserted in a timestamp provided the high order bit of the timestamp is also set to indicate this non-standard value.\n\nAddress mask request\n\nAddress mask request is normally sent by a host to a router in order to obtain an appropriate subnet mask.\n\nRecipients should reply to this message with an Address mask reply message.\n\nWhere:\nType must be set to 17\nCode must be set to 0\nAddress mask can be set to 0\n\nICMP Address Mask Request may be used as a part of reconnaissance attack to gather information on the target network, therefore ICMP Address Mask Reply is disabled by default on Cisco IOS.\n\nAddress mask reply\n\nAddress mask reply is used to reply to an address mask request message with an appropriate subnet mask.\n\nWhere:\nType must be set to 18\nCode must be set to 0\nAddress mask should be set to the subnet mask\n\nDestination unreachable\n\nDestination unreachable is generated by the host or its inbound gateway to inform the client that the destination is unreachable for some reason.  A Destination Unreachable message may be generated as a result of a TCP or UDP.  Unreachable TCP ports notably respond with TCP RST rather than a Destination Unreachable type 3 as might be expected.\n\nThe error will not be generated if the original datagram has a multicast destination address. Reasons for this message may include: the physical connection to the host does not exist (distance is infinite); the indicated protocol or port is not active; the data must be fragmented but the 'don't fragment' flag is on.\n\nWhere:\nType field (bits 0-7) must be set to 3\nCode field (bits 8-15) is used to specify the type of error, and can be any of the following:\n:\nNext-hop MTU field (bits 48-63) contains the MTU of the next-hop network if a code 4 error occurs.\nIP header and additional data is included to allow the client to match the reply with the request that caused the destination unreachable reply.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Internet Control Message Protocol" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=15107" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "The Internet Control Message Protocol (ICMP) is a supporting protocol in the Internet protocol suite. It is used by network devices, including routers, to send error messages and operational information indicating, for example, that a requested service is not available or that a host or router could not be reached. ICMP differs from transport protocols such as TCP and UDP in that it is not typically used to exchange data between systems, nor is it regularly employed by end-user network applications (with the exception of some diagnostic tools like ping and traceroute).\n\nICMP for IPv4 is defined in RFC 792.\n\nTechnical details \n\nThe Internet Control Message Protocol is part of the Internet Protocol Suite, as defined in RFC 792. ICMP messages are typically used for diagnostic or control purposes or generated in response to errors in IP operations (as specified in RFC 1122). ICMP errors are directed to the source IP address of the originating packet.\n\nFor example, every device (such as an intermediate router) forwarding an IP datagram first decrements the time to live (TTL) field in the IP header by one. If the resulting TTL is 0, the packet is discarded and an ICMP time exceeded in transit message is sent to the datagram's source address.\n\nICMP uses the basic support of IP as if it were a higher level protocol, however, ICMP is actually an integral part of IP. Although ICMP messages are contained within standard IP packets, ICMP messages are usually processed as a special case, distinguished from normal IP processing. In many cases, it is necessary to inspect the contents of the ICMP message and deliver the appropriate error message to the application responsible for transmission of the IP packet that prompted the sending of the ICMP message.\n\nMany commonly used network utilities are based on ICMP messages. The traceroute command can be implemented by transmitting IP datagrams with specially set IP TTL header fields, and looking for ICMP time exceeded in transit and Destination unreachable messages generated in response. The related ping utility is implemented using the ICMP echo request and echo reply messages.\n\nICMP datagram structure\n\nThe ICMP packet is encapsulated in an IPv4 packet. The packet consists of header and data sections.\n\nHeader\n\nThe ICMP header starts after the IPv4 header and is identified by IP protocol number '1'. All ICMP packets have an 8-byte header and variable-sized data section. The first 4 bytes of the header have fixed format, while the last 4 bytes depend on the type/code of that ICMP packet.\n\n; Type : ICMP type, see Control messages.\n; Code : ICMP subtype, see Control messages.\n; Checksum : Error checking data, calculated from the ICMP header and data, with value 0 substituted for this field. The Internet Checksum is used, specified in RFC 1071.\n; Rest of Header : Four-bytes field, contents vary based on the ICMP type and code.\n\nData\n\nICMP error messages contain a data section that includes a copy of the entire IPv4 header, plus at least the first eight bytes of data from the IPv4 packet that caused the error message. The maximum length of ICMP error messages is 576 bytes. This data is used by the host to match the message to the appropriate process.  If a higher level protocol uses port numbers, they are assumed to be in the first eight bytes of the original datagram's data.\n\nThe variable size of the ICMP packet data section has been exploited. In the \"Ping of death\", large or fragmented ping packets are used for denial-of-service attacks. ICMP data can also be used to create covert channels for communication. These channels are known as ICMP tunnels.\n\nControl messages\n\nSource quench\n\nSource Quench requests that the sender decrease the rate of messages sent to a router or host. This message may be generated if a router or host does not have sufficient buffer space to process the request, or may occur if the router or host buffer is approaching its limit.\n\nData is sent at a very high speed from a host or from several hosts at the same time to a particular router on a network. Although a router has buffering capabilities, the buffering is limited to within a specified range. The router cannot queue any more data than the capacity of the limited buffering space. Thus if the queue gets filled up, incoming data is discarded until the queue is no longer full. But as no acknowledgement mechanism is present in the network layer, the client does not know whether the data has reached the destination successfully. Hence some remedial measures should be taken by the network layer to avoid these kind of situations. These measures are referred to as source quench. In a source quench mechanism, the router sees that the incoming data rate is much faster than the outgoing data rate, and sends an ICMP message to the clients, informing them that they should slow down their data transfer speeds or wait for a certain amount of time before attempting to send more data. When a client receives this message, it will automatically slow down the outgoing data rate or wait for a sufficient amount of time, which enables the router to empty the queue. Thus the source quench ICMP message acts as flow control in the network layer.\n\nSince research suggested that \"ICMP Source Quench [was] an ineffective (and unfair) antidote for congestion\", routers' creation of source quench messages was deprecated in 1995 by RFC 1812. Furthermore, forwarding of and any kind of reaction to (flow control actions) source quench messages was deprecated from 2012 by RFC 6633.\n\nWhere:\nType must be set to 4\nCode must be set to 0\nIP header and additional data is used by the sender to match the reply with the associated request\n\nRedirect\n\nRedirect requests data packets be sent on an alternative route. ICMP Redirect is a mechanism for routers to convey routing information to hosts. The message informs a host to update its routing information (to send packets on an alternative route). If a host tries to send data through a router (R1) and R1 sends the data on another router (R2) and a direct path from the host to R2 is available (that is, the host and R2 are on the same Ethernet segment), then R1 will send a redirect message to inform the host that the best route for the destination is via R2. The host should then send packets for the destination directly to R2. The router will still send the original datagram to the intended destination. However, if the datagram contains routing information, this message will not be sent even if a better route is available. RFC 1122 states that redirects should only be sent by gateways and should not be sent by Internet hosts.\n\nWhere:\nType must be set to 5.\nCode specifies the reason for the redirection, may be one of the following:\n:\nIP address is the 32-bit address of the gateway to which the redirection should be sent.\nIP header and additional data is included to allow the host to match the reply with the request that caused the redirection reply.\n\nTime exceeded\n\nTime Exceeded is generated by a gateway to inform the source of a discarded datagram due to the time to live field reaching zero.  A time exceeded message may also be sent by a host if it fails to reassemble a fragmented datagram within its time limit.\n\nTime exceeded messages are used by the traceroute utility to identify gateways on the path between two hosts.\n\nWhere:\nType must be set to 11\nCode specifies the reason for the time exceeded message, include the following:\n:\nIP header and first 64 bits of the original payload are used by the source host to match the time exceeded message to the discarded datagram. For higher level protocols such as UDP and TCP the 64 bit payload will include the source and destination ports of the discarded packet.\n\nTimestamp\n\nTimestamp is used for time synchronization.  The originating timestamp is set to the time (in milliseconds since midnight) the sender last touched the packet. The receive and transmit timestamps are not used.\n\nWhere:\nType must be set to 13\nCode must be set to 0\nIdentifier and Sequence Number can be used by the client to match the timestamp reply with the timestamp request.\nOriginate timestamp is the number of milliseconds since midnight Universal Time (UT). If a UT reference is not available the most-significant bit can be set to indicate a non-standard time value.\n\nTimestamp reply\n\nTimestamp Reply replies to a Timestamp message.  It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp indicating when the Timestamp was received and a transmit timestamp indicating when the Timestamp reply was sent.\n\nWhere:\nType must be set to 14\nCode must be set to 0\nIdentifier and Sequence number can be used by the client to match the reply with the request that caused the reply.\nOriginate timestamp is the time the sender last touched the message before sending it.\nReceive timestamp is the time the echoer first touched it on receipt.\nTransmit timestamp is the time the echoer last touched the message on sending it.\n\nAll timestamps are in units of milliseconds since midnight UT. If the time is not available in milliseconds or cannot be provided with respect to midnight UT then any time can be inserted in a timestamp provided the high order bit of the timestamp is also set to indicate this non-standard value.\n\nAddress mask request\n\nAddress mask request is normally sent by a host to a router in order to obtain an appropriate subnet mask.\n\nRecipients should reply to this message with an Address mask reply message.\n\nWhere:\nType must be set to 17\nCode must be set to 0\nAddress mask can be set to 0\n\nICMP Address Mask Request may be used as a part of reconnaissance attack to gather information on the target network, therefore ICMP Address Mask Reply is disabled by default on Cisco IOS.\n\nAddress mask reply\n\nAddress mask reply is used to reply to an address mask request message with an appropriate subnet mask.\n\nWhere:\nType must be set to 18\nCode must be set to 0\nAddress mask should be set to the subnet mask\n\nDestination unreachable\n\nDestination unreachable is generated by the host or its inbound gateway to inform the client that the destination is unreachable for some reason.  A Destination Unreachable message may be generated as a result of a TCP or UDP.  Unreachable TCP ports notably respond with TCP RST rather than a Destination Unreachable type 3 as might be expected.\n\nThe error will not be generated if the original datagram has a multicast destination address. Reasons for this message may include: the physical connection to the host does not exist (distance is infinite); the indicated protocol or port is not active; the data must be fragmented but the 'don't fragment' flag is on.\n\nWhere:\nType field (bits 0-7) must be set to 3\nCode field (bits 8-15) is used to specify the type of error, and can be any of the following:\n:\nNext-hop MTU field (bits 48-63) contains the MTU of the next-hop network if a code 4 error occurs.\nIP header and additional data is included to allow the client to match the reply with the request that caused the destination unreachable reply. Internet Control Message Protocol. http://en.wikipedia.org/?curid=15107."
  }
}
