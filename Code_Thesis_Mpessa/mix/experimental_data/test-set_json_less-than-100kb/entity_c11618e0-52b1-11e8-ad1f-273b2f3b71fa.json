{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=2581",
  "eid" : "c11618e0-52b1-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778403694,
  "textBody" : "The Apache HTTP Server, colloquially called Apache ( ), is free and open-source cross-platform web server software, released under the terms of Apache License 2.0. Apache is developed and maintained by an open community of developers under the auspices of the Apache Software Foundation.\n\nThe Apache HTTP Server is cross-platform;  92% of Apache HTTPS Server copies run on Linux distributions. Version 2.0 improved support for non-Unix operating systems such as Windows and OS/2. Old versions of Apache were ported to run on OpenVMS and NetWare.\n\nOriginally based on the NCSA HTTPd server, development of Apache began in early 1995 after work on the NCSA code stalled. Apache played a key role in the initial growth of the World Wide Web,[http://news.netcraft.com/archives/web_server_survey.html Netcraft Market Share] for Top Servers Across All Domains August 1995 - today (monthly updated) quickly overtaking NCSA HTTPd as the dominant HTTP server, and has remained most popular since April 1996. In 2009, it became the first web server software to serve more than 100 million websites. , it was estimated to serve 46% of all active websites and 43% of the top million websites.\n\nName\n\nAccording to the FAQ in the Apache project website, the name Apache was chosen out of respect to the Native American tribe Apache and their superior skills in warfare and strategy. The name was widely believed to be a pun on 'A Patchy Server' (since it was a set of software patches). Official documentation used to give this explanation of the name, but in a 2000 interview, Brian Behlendorf, one of the creators of Apache, set the record straight:\n\nWhen Apache is running, its process name is sometimes httpd, which is short for \"HTTP daemon\".\n\nFeature overview\n\nApache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Some common language interfaces support Perl, Python, Tcl and PHP. Popular authentication modules include mod_access, mod_auth, mod_digest, and mod_auth_digest, the successor to mod_digest. A sample of other features include Secure Sockets Layer and Transport Layer Security support (mod_ssl), a proxy module (mod_proxy), a URL rewriting module (mod_rewrite), custom log files (mod_log_config), and filtering support (mod_include and mod_ext_filter).\n\nPopular compression methods on Apache include the external extension module, mod_gzip, implemented to help with reduction of the size (weight) of Web pages served over HTTP. ModSecurity is an open source intrusion detection and prevention engine for Web applications. Apache logs can be analyzed through a Web browser using free scripts, such as AWStats/W3Perl or Visitors.\n\nVirtual hosting allows one Apache installation to serve many different Web sites. For example, one machine with one Apache installation could simultaneously serve www.example.com, www.example.org, test47.test-server.example.edu, etc.\n\nApache features configurable error messages, DBMS-based authentication databases, and content negotiation. It is also supported by several graphical user interfaces (GUIs).\n\nIt supports password authentication and digital certificate authentication. Because the source code is freely available, anyone can adapt the server for specific needs, and there is a large public library of Apache add-ons.\n\nHTTP  server and proxy features\n\n* Loadable Dynamic Modules\n* Multiple Request Processing modes (MPMs) including Event-based/Async, Threaded and Prefork.\n* Highly scalable (easily handles more than 10,000 simultaneous connections)\n* Handling of static files, index files, auto-indexing and content negotiation\n* .htaccess support\n* Reverse proxy with caching\n** Load balancing with in-band health checks\n** Multiple load balancing mechanisms\n** Fault tolerance and Failover with automatic recovery\n** WebSocket, FastCGI, SCGI, AJP and uWSGI support with caching\n** Dynamic configuration\n* TLS/SSL with SNI and OCSP stapling support, via OpenSSL.\n* Name- and IP address-based virtual servers\n* IPv6-compatible\n* HTTP/2  protocol support\n* Fine-grained authentication and authorization access control\n* gzip compression and decompression\n* URL rewriting\n* Headers and content rewriting\n* Custom logging with rotation\n* Concurrent connection limiting\n* Request processing rate limiting\n* Bandwidth throttling\n* Server Side Includes\n* IP address-based geolocation\n* User and Session tracking\n* WebDAV\n* Embedded Perl, PHP and Lua scripting\n* CGI support\n* public_html per-user web-pages\n* Generic expression parser\n* Real-time status views\n* XML support\n* FTP support (by a separate module)   \n\nPerformance\n\nInstead of implementing a single architecture, Apache provides a variety of MultiProcessing Modules (MPMs), which allow Apache to run in a process-based, hybrid (process and thread) or event-hybrid mode, to better match the demands of each particular infrastructure. This implies that the choice of correct MPM and the correct configuration is important. Where compromises in performance need to be made, the design of Apache is to reduce latency and increase throughput, relative to simply handling more requests, thus ensuring consistent and reliable processing of requests within reasonable time-frames.\n\nFor delivery of static pages, Apache 2.2 series was considered significantly slower than nginx and varnish. To address this issue, the Apache developers created the Event MPM, which mixes the use of several processes and several threads per process in an asynchronous event-based loop. This architecture, and the way it was implemented in the Apache 2.4 series, provides for performance equivalent or slightly better than event-based web servers, as is cited by Jim Jagielski and other independent sources.[http://people.apache.org/~jim/presos/ACNA11/Apache_httpd_cloud.pdf Apache httpd 2.4] However, some independent, but significantly outdated, benchmarks show that it still is half as fast as nginx, e.g. \n\nLicensing\n\nThe Apache HTTP Server codebase was relicensed to the Apache 2.0 License (from the previous 1.1 license) in January 2004, and Apache HTTP Server 1.3.31 and 2.0.49 were the first releases using the new license.\n\nThe OpenBSD project did not like the change and continued the use of pre-2.0 Apache versions, effectively forking Apache 1.3.x for its purposes. They initially replaced it with Nginx, and soon after made their own replacement, OpenBSD Httpd, based on the relayd project.\n\nVersions\n\nVersion 1.1:\nThe Apache License 1.1 was approved by the ASF in 2000: The primary change from the 1.0 license is in the 'advertising clause' (section 3 of the 1.0 license); derived products are no longer required to include attribution in their advertising materials, but only in their documentation.\n\nVersion 2.0:\nThe ASF adopted the Apache License 2.0 in January 2004. The stated goals of the license included making the license easier for non-ASF projects to use, improving compatibility with GPL-based software, allowing the license to be included by reference instead of listed in every file, clarifying the license on contributions, and requiring a patent license on contributions that necessarily infringe a contributor's own patents.\n\nDevelopment\n\nThe Apache HTTP Server Project is a collaborative software development effort aimed at creating a robust, commercial-grade, feature-rich and freely available source code implementation of an HTTP (Web) server. The project is jointly managed by a group of volunteers located around the world, using the Internet and the Web to communicate, plan, and develop the server and its related documentation. This project is part of the Apache Software Foundation. In addition, hundreds of users have contributed ideas, code, and documentation to the project.[http://www.ohloh.net/p/apache The Apache HTTP Server Open Source Project on Ohloh. (n.d.). Ohloh, the open source network. Retrieved November 12, 2012]\n\nApache 2.4 dropped support for BeOS, TPF and even older platforms.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Apache HTTP Server" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=2581" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "The Apache HTTP Server, colloquially called Apache ( ), is free and open-source cross-platform web server software, released under the terms of Apache License 2.0. Apache is developed and maintained by an open community of developers under the auspices of the Apache Software Foundation.\n\nThe Apache HTTP Server is cross-platform;  92% of Apache HTTPS Server copies run on Linux distributions. Version 2.0 improved support for non-Unix operating systems such as Windows and OS/2. Old versions of Apache were ported to run on OpenVMS and NetWare.\n\nOriginally based on the NCSA HTTPd server, development of Apache began in early 1995 after work on the NCSA code stalled. Apache played a key role in the initial growth of the World Wide Web,[http://news.netcraft.com/archives/web_server_survey.html Netcraft Market Share] for Top Servers Across All Domains August 1995 - today (monthly updated) quickly overtaking NCSA HTTPd as the dominant HTTP server, and has remained most popular since April 1996. In 2009, it became the first web server software to serve more than 100 million websites. , it was estimated to serve 46% of all active websites and 43% of the top million websites.\n\nName\n\nAccording to the FAQ in the Apache project website, the name Apache was chosen out of respect to the Native American tribe Apache and their superior skills in warfare and strategy. The name was widely believed to be a pun on 'A Patchy Server' (since it was a set of software patches). Official documentation used to give this explanation of the name, but in a 2000 interview, Brian Behlendorf, one of the creators of Apache, set the record straight:\n\nWhen Apache is running, its process name is sometimes httpd, which is short for \"HTTP daemon\".\n\nFeature overview\n\nApache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Some common language interfaces support Perl, Python, Tcl and PHP. Popular authentication modules include mod_access, mod_auth, mod_digest, and mod_auth_digest, the successor to mod_digest. A sample of other features include Secure Sockets Layer and Transport Layer Security support (mod_ssl), a proxy module (mod_proxy), a URL rewriting module (mod_rewrite), custom log files (mod_log_config), and filtering support (mod_include and mod_ext_filter).\n\nPopular compression methods on Apache include the external extension module, mod_gzip, implemented to help with reduction of the size (weight) of Web pages served over HTTP. ModSecurity is an open source intrusion detection and prevention engine for Web applications. Apache logs can be analyzed through a Web browser using free scripts, such as AWStats/W3Perl or Visitors.\n\nVirtual hosting allows one Apache installation to serve many different Web sites. For example, one machine with one Apache installation could simultaneously serve www.example.com, www.example.org, test47.test-server.example.edu, etc.\n\nApache features configurable error messages, DBMS-based authentication databases, and content negotiation. It is also supported by several graphical user interfaces (GUIs).\n\nIt supports password authentication and digital certificate authentication. Because the source code is freely available, anyone can adapt the server for specific needs, and there is a large public library of Apache add-ons.\n\nHTTP  server and proxy features\n\n* Loadable Dynamic Modules\n* Multiple Request Processing modes (MPMs) including Event-based/Async, Threaded and Prefork.\n* Highly scalable (easily handles more than 10,000 simultaneous connections)\n* Handling of static files, index files, auto-indexing and content negotiation\n* .htaccess support\n* Reverse proxy with caching\n** Load balancing with in-band health checks\n** Multiple load balancing mechanisms\n** Fault tolerance and Failover with automatic recovery\n** WebSocket, FastCGI, SCGI, AJP and uWSGI support with caching\n** Dynamic configuration\n* TLS/SSL with SNI and OCSP stapling support, via OpenSSL.\n* Name- and IP address-based virtual servers\n* IPv6-compatible\n* HTTP/2  protocol support\n* Fine-grained authentication and authorization access control\n* gzip compression and decompression\n* URL rewriting\n* Headers and content rewriting\n* Custom logging with rotation\n* Concurrent connection limiting\n* Request processing rate limiting\n* Bandwidth throttling\n* Server Side Includes\n* IP address-based geolocation\n* User and Session tracking\n* WebDAV\n* Embedded Perl, PHP and Lua scripting\n* CGI support\n* public_html per-user web-pages\n* Generic expression parser\n* Real-time status views\n* XML support\n* FTP support (by a separate module)   \n\nPerformance\n\nInstead of implementing a single architecture, Apache provides a variety of MultiProcessing Modules (MPMs), which allow Apache to run in a process-based, hybrid (process and thread) or event-hybrid mode, to better match the demands of each particular infrastructure. This implies that the choice of correct MPM and the correct configuration is important. Where compromises in performance need to be made, the design of Apache is to reduce latency and increase throughput, relative to simply handling more requests, thus ensuring consistent and reliable processing of requests within reasonable time-frames.\n\nFor delivery of static pages, Apache 2.2 series was considered significantly slower than nginx and varnish. To address this issue, the Apache developers created the Event MPM, which mixes the use of several processes and several threads per process in an asynchronous event-based loop. This architecture, and the way it was implemented in the Apache 2.4 series, provides for performance equivalent or slightly better than event-based web servers, as is cited by Jim Jagielski and other independent sources.[http://people.apache.org/~jim/presos/ACNA11/Apache_httpd_cloud.pdf Apache httpd 2.4] However, some independent, but significantly outdated, benchmarks show that it still is half as fast as nginx, e.g. \n\nLicensing\n\nThe Apache HTTP Server codebase was relicensed to the Apache 2.0 License (from the previous 1.1 license) in January 2004, and Apache HTTP Server 1.3.31 and 2.0.49 were the first releases using the new license.\n\nThe OpenBSD project did not like the change and continued the use of pre-2.0 Apache versions, effectively forking Apache 1.3.x for its purposes. They initially replaced it with Nginx, and soon after made their own replacement, OpenBSD Httpd, based on the relayd project.\n\nVersions\n\nVersion 1.1:\nThe Apache License 1.1 was approved by the ASF in 2000: The primary change from the 1.0 license is in the 'advertising clause' (section 3 of the 1.0 license); derived products are no longer required to include attribution in their advertising materials, but only in their documentation.\n\nVersion 2.0:\nThe ASF adopted the Apache License 2.0 in January 2004. The stated goals of the license included making the license easier for non-ASF projects to use, improving compatibility with GPL-based software, allowing the license to be included by reference instead of listed in every file, clarifying the license on contributions, and requiring a patent license on contributions that necessarily infringe a contributor's own patents.\n\nDevelopment\n\nThe Apache HTTP Server Project is a collaborative software development effort aimed at creating a robust, commercial-grade, feature-rich and freely available source code implementation of an HTTP (Web) server. The project is jointly managed by a group of volunteers located around the world, using the Internet and the Web to communicate, plan, and develop the server and its related documentation. This project is part of the Apache Software Foundation. In addition, hundreds of users have contributed ideas, code, and documentation to the project.[http://www.ohloh.net/p/apache The Apache HTTP Server Open Source Project on Ohloh. (n.d.). Ohloh, the open source network. Retrieved November 12, 2012]\n\nApache 2.4 dropped support for BeOS, TPF and even older platforms. Apache HTTP Server. http://en.wikipedia.org/?curid=2581."
  }
}
