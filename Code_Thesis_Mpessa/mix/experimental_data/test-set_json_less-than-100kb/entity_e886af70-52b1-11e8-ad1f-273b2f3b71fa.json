{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=8525",
  "eid" : "e886af70-52b1-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778469863,
  "textBody" : "Digital signal processing (DSP) is the use of digital processing, such as by computers or more specialized digital signal processors, to perform a wide variety of signal processing operations.  The signals processed in this manner are a sequence of numbers that represent samples of a continuous variable in a domain such as time, space, or frequency.\n\nDigital signal processing and analog signal processing are subfields of signal processing. DSP applications include audio and speech processing, sonar, radar and other sensor array processing, spectral density estimation, statistical signal processing, digital image processing, signal processing for telecommunications, control systems, biomedical engineering, seismology, among others.\n\nDSP can involve linear or nonlinear operations. Nonlinear signal processing is closely related to nonlinear system identification  and can be implemented in the time, frequency, and spatio-temporal domains.\n\nThe application of digital computation to signal processing allows for many advantages over analog processing in many applications, such as error detection and correction in transmission as well as data compression. DSP is applicable to both streaming data and static (stored) data.\n\nSignal sampling \n\nTo digitally analyze and manipulate an analog signal, it must be digitized with an analog-to-digital converter (ADC). Sampling is usually carried out in two stages, discretization and quantization. Discretization means that the signal is divided into equal intervals of time, and each interval is represented by a single measurement of amplitude.  Quantization means each amplitude measurement is approximated by a value from a finite set.  Rounding real numbers to integers is an example.\n\nThe Nyquistâ€“Shannon sampling theorem states that a signal can be exactly reconstructed from its samples if the sampling frequency is greater than twice the highest frequency component in the signal. In practice, the sampling frequency is often significantly higher than twice the Nyquist frequency.\n\nTheoretical DSP analyses and derivations are typically performed on discrete-time signal models with no amplitude inaccuracies (quantization error), \"created\" by the abstract process of sampling. Numerical methods require a quantized signal, such as those produced by an ADC.  The processed result might be a frequency spectrum or a set of statistics.  But often it is another quantized signal that is converted back to analog form by a digital-to-analog converter (DAC).\n\nDomains \n\nIn DSP, engineers usually study digital signals in one of the following domains: time domain (one-dimensional signals), spatial domain (multidimensional signals), frequency domain, and wavelet domains. They choose the domain in which to process a signal by making an informed assumption (or by trying different possibilities) as to which domain best represents the essential characteristics of the signal and the processing to be appied to it. A sequence of samples from a measuring device produces a temporal or spatial domain representation, whereas a discrete Fourier transform produces the frequency domain representation.\n\nTime and space domains \n\nThe most common processing approach in the time or space domain is enhancement of the input signal through a method called filtering. Digital filtering generally consists of some linear transformation of a number of surrounding samples around the current sample of the input or output signal. There are various ways to characterize filters; for example:\n\n* A linear filter is a linear transformation of input samples; other filters are nonlinear. Linear filters satisfy the superposition principle, i.e. if an input is a weighted linear combination of different signals, the output is a similarly weighted linear combination of the corresponding output signals.\n* A causal filter uses only previous samples of the input or output signals; while a non-causal filter uses future input samples. A non-causal filter can usually be changed into a causal filter by adding a delay to it.\n* A time-invariant filter has constant properties over time; other filters such as adaptive filters change in time.\n* A stable filter produces an output that converges to a constant value with time, or remains bounded within a finite interval. An unstable filter can produce an output that grows without bounds, with bounded or even zero input.\n* A finite impulse response (FIR) filter uses only the input signals, while an infinite impulse response (IIR) filter uses both the input signal and previous samples of the output signal. FIR filters are always stable, while IIR filters may be unstable.\n\nA filter can be represented by a block diagram, which can then be used to derive a sample processing algorithm to implement the filter with hardware instructions. A filter may also be described as a difference equation, a collection of zeros and poles or an impulse response or step response.\n\nThe output of a linear digital filter to any given input may be calculated by convolving the input signal with the impulse response.\n\nFrequency domain \n\nSignals are converted from time or space domain to the frequency domain usually through the Fourier transform. The Fourier transform converts the signal information to a magnitude and phase component of each frequency. Often the Fourier transform is converted to the power spectrum, which is the magnitude of each frequency component squared.\n\nThe most common purpose for analysis of signals in the frequency domain is analysis of signal properties. The engineer can study the spectrum to determine which frequencies are present in the input signal and which are missing.\n\nIn addition to frequency information, phase information is often needed. This can be obtained from the Fourier transform. With some applications, how the phase varies with frequency can be a significant consideration.\n\nFiltering, particularly in non-realtime work can also be achieved by converting to the frequency domain, applying the filter and then converting back to the time domain. This is a fast, O(n log n) operation, and can give essentially any filter shape including excellent approximations to brickwall filters.\n\nThere are some commonly used frequency domain transformations. For example, the cepstrum converts a signal to the frequency domain through Fourier transform, takes the logarithm, then applies another Fourier transform. This emphasizes the harmonic structure of the original spectrum.\n\nFrequency domain analysis is also called spectrum- or spectral analysis.\n\nZ-plane analysis\n\nDigital filters come in both IIR and FIR types.  FIR filters have many advantages, but are computationally more demanding.  Whereas FIR filters are always stable, IIR filters have feedback loops that may resonate when stimulated with certain input signals.  The Z-transform provides a tool for analyzing potential stability issues of digital IIR filters.  It is analogous to the Laplace transform, which is used to design analog IIR filters.\n\nWavelet\n\nIn numerical analysis and functional analysis, a discrete wavelet transform (DWT) is any wavelet transform for which the wavelets are discretely sampled. As with other wavelet transforms, a key advantage it has over Fourier transforms is temporal resolution: it captures both frequency and location information.The accuracy of the joint time-frequency resolution is limited by the uncertainty principle of time-frequency.\n\nApplications \n\nThe main applications of DSP are audio signal processing, audio compression, digital image processing, video compression, speech processing, speech recognition, digital communications, digital synthesizers, radar, sonar, financial signal processing, seismology and biomedicine. Specific examples are speech compression and transmission in digital mobile phones, room correction of sound in hi-fi and sound reinforcement applications, weather forecasting, economic forecasting, seismic data processing, analysis and control of industrial processes, medical imaging such as CAT scans and MRI, MP3 compression, computer graphics, image manipulation, hi-fi loudspeaker crossovers and equalization, and audio effects for use with electric guitar amplifiers.\n\nImplementation \n\nDSP algorithms have long been run on general-purpose computers and digital signal processors. DSP algorithms are also implemented on purpose-built hardware such as application-specific integrated circuit (ASICs). Additional technologies for digital signal processing include more powerful general purpose microprocessors, field-programmable gate arrays (FPGAs), digital signal controllers (mostly for industrial applications such as motor control), and stream processors.\n\nDepending on the requirements of the application, digital signal processing tasks can be implemented on general purpose computers.\n\nOften when the processing requirement is not real-time, processing is economically done with an existing general-purpose computer and the signal data (either input or output) exists in data files.  This is essentially no different from any other data processing, except DSP mathematical techniques (such as the FFT) are used, and the sampled data is usually assumed to be uniformly sampled in time or space.  For example: processing digital photographs with software such as Photoshop.\n\nHowever, when the application requirement is real-time, DSP is often implemented using specialized microprocessors such as the DSP56000, the TMS320, or the SHARC. These often process data using fixed-point arithmetic, though some more powerful versions use floating point. For faster applications FPGAs might be used.\nBeginning in 2007, multicore implementations of DSPs have started to emerge from companies including Freescale and Stream Processors, Inc. For faster applications with vast usage, ASICs might be designed specifically. For slow applications, a traditional slower processor such as a microcontroller may be adequate. Also a growing number of DSP applications are now being implemented on embedded systems using powerful PCs with multi-core processors.\n\nTechniques \n\n* Bilinear transform\n* Discrete Fourier transform\n* Discrete-time Fourier transform\n* Filter design\n* LTI system theory\n* Minimum phase\n* Transfer function\n* Z-transform\n* Goertzel algorithm\n* s-plane\n\nRelated fields \n\n* Analog signal processing\n* Automatic control\n* Computer Engineering\n* Computer science\n* Data compression\n* Dataflow programming\n* Electrical engineering\n* Fourier analysis\n* Information theory\n* Machine learning\n* Real-time computing\n* Stream processing\n* Telecommunication\n* Time series\n* Wavelet\n\nNotes",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Digital signal processing" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=8525" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "Digital signal processing (DSP) is the use of digital processing, such as by computers or more specialized digital signal processors, to perform a wide variety of signal processing operations.  The signals processed in this manner are a sequence of numbers that represent samples of a continuous variable in a domain such as time, space, or frequency.\n\nDigital signal processing and analog signal processing are subfields of signal processing. DSP applications include audio and speech processing, sonar, radar and other sensor array processing, spectral density estimation, statistical signal processing, digital image processing, signal processing for telecommunications, control systems, biomedical engineering, seismology, among others.\n\nDSP can involve linear or nonlinear operations. Nonlinear signal processing is closely related to nonlinear system identification  and can be implemented in the time, frequency, and spatio-temporal domains.\n\nThe application of digital computation to signal processing allows for many advantages over analog processing in many applications, such as error detection and correction in transmission as well as data compression. DSP is applicable to both streaming data and static (stored) data.\n\nSignal sampling \n\nTo digitally analyze and manipulate an analog signal, it must be digitized with an analog-to-digital converter (ADC). Sampling is usually carried out in two stages, discretization and quantization. Discretization means that the signal is divided into equal intervals of time, and each interval is represented by a single measurement of amplitude.  Quantization means each amplitude measurement is approximated by a value from a finite set.  Rounding real numbers to integers is an example.\n\nThe Nyquistâ€“Shannon sampling theorem states that a signal can be exactly reconstructed from its samples if the sampling frequency is greater than twice the highest frequency component in the signal. In practice, the sampling frequency is often significantly higher than twice the Nyquist frequency.\n\nTheoretical DSP analyses and derivations are typically performed on discrete-time signal models with no amplitude inaccuracies (quantization error), \"created\" by the abstract process of sampling. Numerical methods require a quantized signal, such as those produced by an ADC.  The processed result might be a frequency spectrum or a set of statistics.  But often it is another quantized signal that is converted back to analog form by a digital-to-analog converter (DAC).\n\nDomains \n\nIn DSP, engineers usually study digital signals in one of the following domains: time domain (one-dimensional signals), spatial domain (multidimensional signals), frequency domain, and wavelet domains. They choose the domain in which to process a signal by making an informed assumption (or by trying different possibilities) as to which domain best represents the essential characteristics of the signal and the processing to be appied to it. A sequence of samples from a measuring device produces a temporal or spatial domain representation, whereas a discrete Fourier transform produces the frequency domain representation.\n\nTime and space domains \n\nThe most common processing approach in the time or space domain is enhancement of the input signal through a method called filtering. Digital filtering generally consists of some linear transformation of a number of surrounding samples around the current sample of the input or output signal. There are various ways to characterize filters; for example:\n\n* A linear filter is a linear transformation of input samples; other filters are nonlinear. Linear filters satisfy the superposition principle, i.e. if an input is a weighted linear combination of different signals, the output is a similarly weighted linear combination of the corresponding output signals.\n* A causal filter uses only previous samples of the input or output signals; while a non-causal filter uses future input samples. A non-causal filter can usually be changed into a causal filter by adding a delay to it.\n* A time-invariant filter has constant properties over time; other filters such as adaptive filters change in time.\n* A stable filter produces an output that converges to a constant value with time, or remains bounded within a finite interval. An unstable filter can produce an output that grows without bounds, with bounded or even zero input.\n* A finite impulse response (FIR) filter uses only the input signals, while an infinite impulse response (IIR) filter uses both the input signal and previous samples of the output signal. FIR filters are always stable, while IIR filters may be unstable.\n\nA filter can be represented by a block diagram, which can then be used to derive a sample processing algorithm to implement the filter with hardware instructions. A filter may also be described as a difference equation, a collection of zeros and poles or an impulse response or step response.\n\nThe output of a linear digital filter to any given input may be calculated by convolving the input signal with the impulse response.\n\nFrequency domain \n\nSignals are converted from time or space domain to the frequency domain usually through the Fourier transform. The Fourier transform converts the signal information to a magnitude and phase component of each frequency. Often the Fourier transform is converted to the power spectrum, which is the magnitude of each frequency component squared.\n\nThe most common purpose for analysis of signals in the frequency domain is analysis of signal properties. The engineer can study the spectrum to determine which frequencies are present in the input signal and which are missing.\n\nIn addition to frequency information, phase information is often needed. This can be obtained from the Fourier transform. With some applications, how the phase varies with frequency can be a significant consideration.\n\nFiltering, particularly in non-realtime work can also be achieved by converting to the frequency domain, applying the filter and then converting back to the time domain. This is a fast, O(n log n) operation, and can give essentially any filter shape including excellent approximations to brickwall filters.\n\nThere are some commonly used frequency domain transformations. For example, the cepstrum converts a signal to the frequency domain through Fourier transform, takes the logarithm, then applies another Fourier transform. This emphasizes the harmonic structure of the original spectrum.\n\nFrequency domain analysis is also called spectrum- or spectral analysis.\n\nZ-plane analysis\n\nDigital filters come in both IIR and FIR types.  FIR filters have many advantages, but are computationally more demanding.  Whereas FIR filters are always stable, IIR filters have feedback loops that may resonate when stimulated with certain input signals.  The Z-transform provides a tool for analyzing potential stability issues of digital IIR filters.  It is analogous to the Laplace transform, which is used to design analog IIR filters.\n\nWavelet\n\nIn numerical analysis and functional analysis, a discrete wavelet transform (DWT) is any wavelet transform for which the wavelets are discretely sampled. As with other wavelet transforms, a key advantage it has over Fourier transforms is temporal resolution: it captures both frequency and location information.The accuracy of the joint time-frequency resolution is limited by the uncertainty principle of time-frequency.\n\nApplications \n\nThe main applications of DSP are audio signal processing, audio compression, digital image processing, video compression, speech processing, speech recognition, digital communications, digital synthesizers, radar, sonar, financial signal processing, seismology and biomedicine. Specific examples are speech compression and transmission in digital mobile phones, room correction of sound in hi-fi and sound reinforcement applications, weather forecasting, economic forecasting, seismic data processing, analysis and control of industrial processes, medical imaging such as CAT scans and MRI, MP3 compression, computer graphics, image manipulation, hi-fi loudspeaker crossovers and equalization, and audio effects for use with electric guitar amplifiers.\n\nImplementation \n\nDSP algorithms have long been run on general-purpose computers and digital signal processors. DSP algorithms are also implemented on purpose-built hardware such as application-specific integrated circuit (ASICs). Additional technologies for digital signal processing include more powerful general purpose microprocessors, field-programmable gate arrays (FPGAs), digital signal controllers (mostly for industrial applications such as motor control), and stream processors.\n\nDepending on the requirements of the application, digital signal processing tasks can be implemented on general purpose computers.\n\nOften when the processing requirement is not real-time, processing is economically done with an existing general-purpose computer and the signal data (either input or output) exists in data files.  This is essentially no different from any other data processing, except DSP mathematical techniques (such as the FFT) are used, and the sampled data is usually assumed to be uniformly sampled in time or space.  For example: processing digital photographs with software such as Photoshop.\n\nHowever, when the application requirement is real-time, DSP is often implemented using specialized microprocessors such as the DSP56000, the TMS320, or the SHARC. These often process data using fixed-point arithmetic, though some more powerful versions use floating point. For faster applications FPGAs might be used.\nBeginning in 2007, multicore implementations of DSPs have started to emerge from companies including Freescale and Stream Processors, Inc. For faster applications with vast usage, ASICs might be designed specifically. For slow applications, a traditional slower processor such as a microcontroller may be adequate. Also a growing number of DSP applications are now being implemented on embedded systems using powerful PCs with multi-core processors.\n\nTechniques \n\n* Bilinear transform\n* Discrete Fourier transform\n* Discrete-time Fourier transform\n* Filter design\n* LTI system theory\n* Minimum phase\n* Transfer function\n* Z-transform\n* Goertzel algorithm\n* s-plane\n\nRelated fields \n\n* Analog signal processing\n* Automatic control\n* Computer Engineering\n* Computer science\n* Data compression\n* Dataflow programming\n* Electrical engineering\n* Fourier analysis\n* Information theory\n* Machine learning\n* Real-time computing\n* Stream processing\n* Telecommunication\n* Time series\n* Wavelet\n\nNotes. Digital signal processing. http://en.wikipedia.org/?curid=8525."
  }
}
