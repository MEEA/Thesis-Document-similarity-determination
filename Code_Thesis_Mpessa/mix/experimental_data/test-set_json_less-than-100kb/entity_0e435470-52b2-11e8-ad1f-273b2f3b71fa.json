{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=13834",
  "eid" : "0e435470-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778533175,
  "textBody" : "A \"Hello, World!\" program is a computer program that outputs or displays \"Hello, World!\" to a user. Being a very simple program in most programming languages, it is often used to illustrate the basic syntax of a programming language for a working program. It is often the very first program people write when they are new to a language.\n\nPurpose\n\nA \"Hello, World!\" program is traditionally used to introduce novice programmers to a programming language.\n\n\"Hello, world!\" is also traditionally used in a sanity test to make sure that a computer language is correctly installed, and that the operator understands how to use it.\n\nThe phrase is also used by computer hackers as a proof of concept that arbitrary code can be executed through an exploit where the system designers did not intend code to be executed.\n\nHistory\n\nWhile small test programs have existed since the development of programmable computers, the tradition of using the phrase \"Hello, world!\" as a test message was influenced by an example program in the seminal book The C Programming Language. The example program from that book prints \"hello, world\" (without capital letters or exclamation mark), and was inherited from a 1974 Bell Laboratories internal memorandum by Brian Kernighan, Programming in C.A Tutorial:\n\n#include \n\nmain( )\n{\n        printf(\"hello, world\\n\");\n}\n\nThe C version was preceded by Kernighan's own 1972 A Tutorial Introduction to the Language B,\n where the first known version of the program is found in an example used to illustrate external variables:\n\nmain(){\n  extrn a,b,c;\n  putchar(a); putchar(b); putchar(c); putchar('!*n');\n  }\n\na 'hell';\nb 'o, w';\nc 'orld';\n\nThe program prints hello, world! on the terminal, including a newline character. The phrase is divided into multiple variables because in B, a character constant is limited to four ASCII characters. The previous example in the tutorial printed hi! on the terminal, and the phrase hello, world! was introduced as a slightly longer greeting that required several character constants for its expression.\n\nIt is also claimed that hello, world originated instead with BCPL (1967).[http://www.catb.org/jargon/html/B/BCPL.html BCPL], Jargon FileThis claim is supported by the archived notes of the inventors of BCPL, Prof. Brian Kernighan at Princeton and Martin Richards at Cambridge.\n\nFor modern languages, hello, world programs vary in sophistication. For example, the Go programming language introduced a multilingual program,[http://golang.org/doc/go_tutorial.html#tmp_20 A Tutorial for the Go Programming Language.]  The Go Programming Language. Retrieved July 26, 2011. Sun demonstrated a Java hello, world based on scalable vector graphics, and the XL programming language features a spinning Earth hello, world using 3D graphics. While some languages such as Perl, Python or Ruby may need only a single statement to print \"hello, world\", a low-level assembly language may require dozens of commands. Mark Guzdial and Elliot Soloway have suggested that the \"hello, world\" test message may be outdated now that graphics and sound can be manipulated as easily as text.[http://www.bfoit.org/itp/Soloway/CACM_Nintendo_Generation.pdf Teaching the Nintendo Generation to Program]\n\nVariations\n\nThere are many variations on the punctuation and casing of the phrase. Variations include the presence or absence of the comma and exclamation mark, and the capitalization of the 'H', both the 'H' and the 'W', or neither. Some languages are forced to implement different forms, such as \"HELLO WORLD\", on systems that support only capital letters, while many \"hello, world\" programs in esoteric languages print out a slightly modified string. For example, the first non-trivial Malbolge program printed \"HEllO WORld\", this having been determined to be good enough.\n\nThere are variations in spirit, as well. Functional programming languages, like Lisp, ML and Haskell, tend to substitute a factorial program for Hello, World, as functional programming emphasizes recursive techniques, whereas the original examples emphasize I/O, which violates the spirit of pure functional programming by producing side effects. Languages otherwise capable of Hello, World (Assembly, C, VHDL) may also be used in embedded systems, where text output is either difficult (requiring additional components or communication with another computer) or nonexistent. For devices such as microcontrollers, field-programmable gate arrays, and CPLD's, \"Hello, World\" may thus be substituted with a blinking LED, which demonstrates timing and interaction between components.\n\nThe Debian and Ubuntu Linux distributions provide the \"hello, world\" program through the apt packaging system; this allows users to simply type \"apt-get install hello\" for the program to be installed, along with any software dependencies. While of itself useless, it serves as a sanity check and a simple example to newcomers of how to install a package. It is significantly more useful for developers, however, as it provides an example of how to create a .deb package, either traditionally or using debhelper, and the version of hello used, GNU Hello, serves as an example of how to write a GNU program.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "\"Hello, World!\" program" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=13834" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "A \"Hello, World!\" program is a computer program that outputs or displays \"Hello, World!\" to a user. Being a very simple program in most programming languages, it is often used to illustrate the basic syntax of a programming language for a working program. It is often the very first program people write when they are new to a language.\n\nPurpose\n\nA \"Hello, World!\" program is traditionally used to introduce novice programmers to a programming language.\n\n\"Hello, world!\" is also traditionally used in a sanity test to make sure that a computer language is correctly installed, and that the operator understands how to use it.\n\nThe phrase is also used by computer hackers as a proof of concept that arbitrary code can be executed through an exploit where the system designers did not intend code to be executed.\n\nHistory\n\nWhile small test programs have existed since the development of programmable computers, the tradition of using the phrase \"Hello, world!\" as a test message was influenced by an example program in the seminal book The C Programming Language. The example program from that book prints \"hello, world\" (without capital letters or exclamation mark), and was inherited from a 1974 Bell Laboratories internal memorandum by Brian Kernighan, Programming in C.A Tutorial:\n\n#include \n\nmain( )\n{\n        printf(\"hello, world\\n\");\n}\n\nThe C version was preceded by Kernighan's own 1972 A Tutorial Introduction to the Language B,\n where the first known version of the program is found in an example used to illustrate external variables:\n\nmain(){\n  extrn a,b,c;\n  putchar(a); putchar(b); putchar(c); putchar('!*n');\n  }\n\na 'hell';\nb 'o, w';\nc 'orld';\n\nThe program prints hello, world! on the terminal, including a newline character. The phrase is divided into multiple variables because in B, a character constant is limited to four ASCII characters. The previous example in the tutorial printed hi! on the terminal, and the phrase hello, world! was introduced as a slightly longer greeting that required several character constants for its expression.\n\nIt is also claimed that hello, world originated instead with BCPL (1967).[http://www.catb.org/jargon/html/B/BCPL.html BCPL], Jargon FileThis claim is supported by the archived notes of the inventors of BCPL, Prof. Brian Kernighan at Princeton and Martin Richards at Cambridge.\n\nFor modern languages, hello, world programs vary in sophistication. For example, the Go programming language introduced a multilingual program,[http://golang.org/doc/go_tutorial.html#tmp_20 A Tutorial for the Go Programming Language.]  The Go Programming Language. Retrieved July 26, 2011. Sun demonstrated a Java hello, world based on scalable vector graphics, and the XL programming language features a spinning Earth hello, world using 3D graphics. While some languages such as Perl, Python or Ruby may need only a single statement to print \"hello, world\", a low-level assembly language may require dozens of commands. Mark Guzdial and Elliot Soloway have suggested that the \"hello, world\" test message may be outdated now that graphics and sound can be manipulated as easily as text.[http://www.bfoit.org/itp/Soloway/CACM_Nintendo_Generation.pdf Teaching the Nintendo Generation to Program]\n\nVariations\n\nThere are many variations on the punctuation and casing of the phrase. Variations include the presence or absence of the comma and exclamation mark, and the capitalization of the 'H', both the 'H' and the 'W', or neither. Some languages are forced to implement different forms, such as \"HELLO WORLD\", on systems that support only capital letters, while many \"hello, world\" programs in esoteric languages print out a slightly modified string. For example, the first non-trivial Malbolge program printed \"HEllO WORld\", this having been determined to be good enough.\n\nThere are variations in spirit, as well. Functional programming languages, like Lisp, ML and Haskell, tend to substitute a factorial program for Hello, World, as functional programming emphasizes recursive techniques, whereas the original examples emphasize I/O, which violates the spirit of pure functional programming by producing side effects. Languages otherwise capable of Hello, World (Assembly, C, VHDL) may also be used in embedded systems, where text output is either difficult (requiring additional components or communication with another computer) or nonexistent. For devices such as microcontrollers, field-programmable gate arrays, and CPLD's, \"Hello, World\" may thus be substituted with a blinking LED, which demonstrates timing and interaction between components.\n\nThe Debian and Ubuntu Linux distributions provide the \"hello, world\" program through the apt packaging system; this allows users to simply type \"apt-get install hello\" for the program to be installed, along with any software dependencies. While of itself useless, it serves as a sanity check and a simple example to newcomers of how to install a package. It is significantly more useful for developers, however, as it provides an example of how to create a .deb package, either traditionally or using debhelper, and the version of hello used, GNU Hello, serves as an example of how to write a GNU program. \"Hello, World!\" program. http://en.wikipedia.org/?curid=13834."
  }
}
