{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=4080",
  "eid" : "cb377b20-52b1-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778420690,
  "textBody" : "In computational complexity theory, BQP (bounded-error quantum polynomial time) is the class of decision problems solvable by a quantum computer in polynomial time, with an error probability of at most 1/3 for all instances. It is the quantum analogue of the complexity class BPP.\n\nA decision problem is a member of  BQP if there exists an algorithm for a quantum computer (a quantum algorithm) that solves the decision problem with high probability and is guaranteed to run in polynomial time. A run of the algorithm will correctly solve the decision problem with  a probability of at least 2/3.\n\nSimilarly to other \"bounded error\" probabilistic classes the choice of 1/3 in the definition is arbitrary. We can run the algorithm a constant number of times and take a majority vote to achieve any desired probability of correctness less than 1, using the Chernoff bound. Detailed analysis shows that the complexity class is unchanged by allowing error as high as 1/2 − n−c on the one hand, or requiring error as small as 2−nc on the other hand, where c is any positive constant, and n is the length of input.\n\nDefinition\n\nBQP can also be viewed as the languages associated with certain bounded-error uniform families of quantum circuits. A language L is in BQP if and only if there exists a polynomial-time uniform family of quantum circuits \\{Q_n:n \\in \\mathbb{N}\\}, such that\n* For all n \\in \\mathbb{N}, Qn takes n qubits as input and outputs 1 bit\n* For all x in L, \\mathrm{Pr}(Q_(x)=1)\\geq \\tfrac{2}{3}\n* For all x not in L, \\mathrm{Pr}(Q_(x)=0)\\geq  \\tfrac{2}{3}\n\nQuantum computation \n\nThe number of qubits in the computer is allowed to be a polynomial function of the instance size. For example, algorithms are known for factoring an n-bit integer using just over 2n qubits (Shor's algorithm).\n\nUsually, computation on a quantum computer ends with a measurement. This leads to a collapse of quantum state to one of the basis states. It can be said that the quantum state is measured to be in the correct state with high probability.\n\nQuantum computers have gained widespread interest because some problems of practical interest are known to be in BQP, but suspected to be outside P. Some prominent examples are:\n*Integer factorization (see Shor's algorithm)[http://www.arxiv.org/abs/quant-ph/9508027 arXiv:quant-ph/9508027v2 Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer, Peter W. Shor]\n*Discrete logarithm\n*Simulation of quantum systems (see universal quantum simulator)\n*Approximating the Jones polynomial at certain roots of unity\n\nRelationship to other complexity classes \n\nThis class is defined for a quantum computer and its natural corresponding class for an ordinary computer (or a Turing machine plus a source of randomness) is . Just like  and ,  is low for itself, which means  = . Informally, this is true because polynomial time algorithms are closed under composition. If a polynomial time algorithm calls as a subroutine polynomially many polynomial time algorithms, the resulting algorithm is still polynomial time.\n\n contains  and  and is contained in , L. Adleman, J. DeMarrais, and M.-D. Huang. Quantum computability. SIAM J. Comput.,\n26(5):1524–1540, 1997. and .Bernstein and Vazirani, Quantum complexity theory, SIAM Journal on Computing, 26(5):1411-1473, 1997. [http://www.cs.berkeley.edu/~vazirani/bv.ps]\nIn fact,  is low for , meaning that a  machine achieves no benefit from being able to solve  problems instantly, an indication of the possible difference in power between these similar classes.\n\\mathsf{P \\subseteq BPP \\subseteq BQP\\subseteq AWPP \\subseteq PP \\subseteq PSPACE}\n\nAs the problem of  has not yet been solved, the proof of inequality between  and classes mentioned above is supposed to be difficult. The relation between  and  is not known.\n\nAdding postselection to  results in the complexity class  which is equal to ..  Preprint available at [https://arxiv.org/abs/quant-ph/0412187]",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "BQP" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=4080" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "In computational complexity theory, BQP (bounded-error quantum polynomial time) is the class of decision problems solvable by a quantum computer in polynomial time, with an error probability of at most 1/3 for all instances. It is the quantum analogue of the complexity class BPP.\n\nA decision problem is a member of  BQP if there exists an algorithm for a quantum computer (a quantum algorithm) that solves the decision problem with high probability and is guaranteed to run in polynomial time. A run of the algorithm will correctly solve the decision problem with  a probability of at least 2/3.\n\nSimilarly to other \"bounded error\" probabilistic classes the choice of 1/3 in the definition is arbitrary. We can run the algorithm a constant number of times and take a majority vote to achieve any desired probability of correctness less than 1, using the Chernoff bound. Detailed analysis shows that the complexity class is unchanged by allowing error as high as 1/2 − n−c on the one hand, or requiring error as small as 2−nc on the other hand, where c is any positive constant, and n is the length of input.\n\nDefinition\n\nBQP can also be viewed as the languages associated with certain bounded-error uniform families of quantum circuits. A language L is in BQP if and only if there exists a polynomial-time uniform family of quantum circuits \\{Q_n:n \\in \\mathbb{N}\\}, such that\n* For all n \\in \\mathbb{N}, Qn takes n qubits as input and outputs 1 bit\n* For all x in L, \\mathrm{Pr}(Q_(x)=1)\\geq \\tfrac{2}{3}\n* For all x not in L, \\mathrm{Pr}(Q_(x)=0)\\geq  \\tfrac{2}{3}\n\nQuantum computation \n\nThe number of qubits in the computer is allowed to be a polynomial function of the instance size. For example, algorithms are known for factoring an n-bit integer using just over 2n qubits (Shor's algorithm).\n\nUsually, computation on a quantum computer ends with a measurement. This leads to a collapse of quantum state to one of the basis states. It can be said that the quantum state is measured to be in the correct state with high probability.\n\nQuantum computers have gained widespread interest because some problems of practical interest are known to be in BQP, but suspected to be outside P. Some prominent examples are:\n*Integer factorization (see Shor's algorithm)[http://www.arxiv.org/abs/quant-ph/9508027 arXiv:quant-ph/9508027v2 Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer, Peter W. Shor]\n*Discrete logarithm\n*Simulation of quantum systems (see universal quantum simulator)\n*Approximating the Jones polynomial at certain roots of unity\n\nRelationship to other complexity classes \n\nThis class is defined for a quantum computer and its natural corresponding class for an ordinary computer (or a Turing machine plus a source of randomness) is . Just like  and ,  is low for itself, which means  = . Informally, this is true because polynomial time algorithms are closed under composition. If a polynomial time algorithm calls as a subroutine polynomially many polynomial time algorithms, the resulting algorithm is still polynomial time.\n\n contains  and  and is contained in , L. Adleman, J. DeMarrais, and M.-D. Huang. Quantum computability. SIAM J. Comput.,\n26(5):1524–1540, 1997. and .Bernstein and Vazirani, Quantum complexity theory, SIAM Journal on Computing, 26(5):1411-1473, 1997. [http://www.cs.berkeley.edu/~vazirani/bv.ps]\nIn fact,  is low for , meaning that a  machine achieves no benefit from being able to solve  problems instantly, an indication of the possible difference in power between these similar classes.\n\\mathsf{P \\subseteq BPP \\subseteq BQP\\subseteq AWPP \\subseteq PP \\subseteq PSPACE}\n\nAs the problem of  has not yet been solved, the proof of inequality between  and classes mentioned above is supposed to be difficult. The relation between  and  is not known.\n\nAdding postselection to  results in the complexity class  which is equal to ..  Preprint available at [https://arxiv.org/abs/quant-ph/0412187]. BQP. http://en.wikipedia.org/?curid=4080."
  }
}
