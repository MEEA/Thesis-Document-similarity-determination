{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=16708",
  "eid" : "27bf87c0-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778575932,
  "textBody" : "Kent Beck (born 1961) is an American software engineer and the creator of extreme programming, a software development methodology that eschews rigid formal specification for a collaborative and iterative design process. Beck was one of the 17 original signatories of the Agile Manifesto,\"Extreme Programming\", Computerworld (online), 2005, webpage: [http://www.computerworld.com/softwaretopics/software/appdev/story/0,10801,66192,00.html Computerworld-appdev-92]. the founding document for agile software development. Extreme and Agile methods are closely associated with Test-Driven Development (TDD), of which Beck is perhaps the leading proponent.\n\nBeck pioneered software design patterns, as well as the commercial application of Smalltalk. He wrote the SUnit unit testing framework for Smalltalk, which spawned the xUnit series of frameworks, notably JUnit for Java, which Beck wrote with Erich Gamma. Beck popularized CRC cards with Ward Cunningham, the inventor of the wiki.\n\nHe lives in San Francisco, California and worked at social media company Facebook.[http://www.quora.com/What-is-the-difference-between-unit-testing-functional-testing-and-integration-testing/answer/Kent-Beck \"Where I worked (Facebook)...\"]\n\nHistory \n\nBeck attended the University of Oregon between 1979 and 1987, receiving B.S. and M.S. degrees in computer and information science.\n\nIn 1996 Beck was hired to work on the Chrysler Comprehensive Compensation System. Beck in turn brought in Ron Jeffries. In March 1996 the development team estimated the system would be ready to go into production around one year later.  In 1997 the development team adopted a way of working which is now formalized as extreme programming. The one-year delivery target was nearly achieved, with actual delivery being only a couple of months late.\n\nPublications \n\nBooks \n\n* 1996. Kent Beck's Guide to Better Smalltalk : A Sorted Collection. Cambridge University Press. ()\n* 1997. Smalltalk Best Practice Patterns. Prentice Hall.  ()\n* 1999. Extreme Programming Explained: Embrace Change. Addison-Wesley. Winner of the Jolt Productivity Award. ()\n* 2000. Planning Extreme Programming. With Martin Fowler. Addison-Wesley. ()\n* 2002. Test-Driven Development: By Example. Addison-Wesley.  Winner of the Jolt Productivity Award. ()\n*: Beck's concept of test-driven development centers on two basic rules:\n*:# Never write a single line of code unless you have a failing automated test.\n*:# Eliminate duplication.\nThe book illustrates the use of unit testing as part of the methodology, including examples in Java and Python. One section includes using test-driven development to develop a unit testing framework.\n* 2003. Contributing to Eclipse: Principles, Patterns, and Plugins. With Erich Gamma. Addison-Wesley. ()\n* 2004. JUnit Pocket Guide. O'Reilly. ()\n* 2004. Extreme Programming Explained: Embrace Change, 2nd Edition. With Cynthia Andres. Addison-Wesley. Completely rewritten. ()\n* 2008. Implementation Patterns. Addison-Wesley.  ()\n\nSelected papers \n\n* 1987. \"[http://c2.com/doc/oopsla87.html Using Pattern Languages for Object-Oriented Programs]\". With Ward Cunningham. OOPSLA'87.\n* 1989. \"[http://c2.com/doc/oopsla89/paper.html A Laboratory For Teaching Object-Oriented Thinking]\". With Ward Cunningham. OOPSLA'89.\n* 1989. \"[https://web.archive.org/web/20150315073817/http://www.xprogramming.com/testfram.htm Simple Smalltalk Testing: With Patterns]\". SUnit framework, origin of xUnit frameworks.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Kent Beck" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=16708" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "Kent Beck (born 1961) is an American software engineer and the creator of extreme programming, a software development methodology that eschews rigid formal specification for a collaborative and iterative design process. Beck was one of the 17 original signatories of the Agile Manifesto,\"Extreme Programming\", Computerworld (online), 2005, webpage: [http://www.computerworld.com/softwaretopics/software/appdev/story/0,10801,66192,00.html Computerworld-appdev-92]. the founding document for agile software development. Extreme and Agile methods are closely associated with Test-Driven Development (TDD), of which Beck is perhaps the leading proponent.\n\nBeck pioneered software design patterns, as well as the commercial application of Smalltalk. He wrote the SUnit unit testing framework for Smalltalk, which spawned the xUnit series of frameworks, notably JUnit for Java, which Beck wrote with Erich Gamma. Beck popularized CRC cards with Ward Cunningham, the inventor of the wiki.\n\nHe lives in San Francisco, California and worked at social media company Facebook.[http://www.quora.com/What-is-the-difference-between-unit-testing-functional-testing-and-integration-testing/answer/Kent-Beck \"Where I worked (Facebook)...\"]\n\nHistory \n\nBeck attended the University of Oregon between 1979 and 1987, receiving B.S. and M.S. degrees in computer and information science.\n\nIn 1996 Beck was hired to work on the Chrysler Comprehensive Compensation System. Beck in turn brought in Ron Jeffries. In March 1996 the development team estimated the system would be ready to go into production around one year later.  In 1997 the development team adopted a way of working which is now formalized as extreme programming. The one-year delivery target was nearly achieved, with actual delivery being only a couple of months late.\n\nPublications \n\nBooks \n\n* 1996. Kent Beck's Guide to Better Smalltalk : A Sorted Collection. Cambridge University Press. ()\n* 1997. Smalltalk Best Practice Patterns. Prentice Hall.  ()\n* 1999. Extreme Programming Explained: Embrace Change. Addison-Wesley. Winner of the Jolt Productivity Award. ()\n* 2000. Planning Extreme Programming. With Martin Fowler. Addison-Wesley. ()\n* 2002. Test-Driven Development: By Example. Addison-Wesley.  Winner of the Jolt Productivity Award. ()\n*: Beck's concept of test-driven development centers on two basic rules:\n*:# Never write a single line of code unless you have a failing automated test.\n*:# Eliminate duplication.\nThe book illustrates the use of unit testing as part of the methodology, including examples in Java and Python. One section includes using test-driven development to develop a unit testing framework.\n* 2003. Contributing to Eclipse: Principles, Patterns, and Plugins. With Erich Gamma. Addison-Wesley. ()\n* 2004. JUnit Pocket Guide. O'Reilly. ()\n* 2004. Extreme Programming Explained: Embrace Change, 2nd Edition. With Cynthia Andres. Addison-Wesley. Completely rewritten. ()\n* 2008. Implementation Patterns. Addison-Wesley.  ()\n\nSelected papers \n\n* 1987. \"[http://c2.com/doc/oopsla87.html Using Pattern Languages for Object-Oriented Programs]\". With Ward Cunningham. OOPSLA'87.\n* 1989. \"[http://c2.com/doc/oopsla89/paper.html A Laboratory For Teaching Object-Oriented Thinking]\". With Ward Cunningham. OOPSLA'89.\n* 1989. \"[https://web.archive.org/web/20150315073817/http://www.xprogramming.com/testfram.htm Simple Smalltalk Testing: With Patterns]\". SUnit framework, origin of xUnit frameworks. Kent Beck. http://en.wikipedia.org/?curid=16708."
  }
}
