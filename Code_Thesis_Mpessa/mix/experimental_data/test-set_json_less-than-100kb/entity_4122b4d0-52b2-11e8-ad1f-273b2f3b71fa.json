{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=20286",
  "eid" : "4122b4d0-52b2-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778618525,
  "textBody" : "Martin Fowler (born 1963) is a British software developer, author and international public speaker on software development, specializing in object-oriented analysis and design, UML, patterns, and agile software development methodologies, including extreme programming.\n\nHis 1999 book Refactoring popularized the practice of code refactoring.Stephane Faroult; Pascal L'Hermite (2008). Refactoring SQL Applications. O'Reilly Media. p. 8. . In 2004 he introduced Presentation Model (PM), an architectural pattern.Stephen Chin; Dean Iverson; Oswald Campesato; Paul Trani (2011). Pro Android Flash. Apress. p. 300. .\n\nBiography \n\nFowler was born and grew up in Walsall, England, where he went to Queen Mary's Grammar School for his secondary education. He graduated at University College London in 1986. In 1994 he moved to the United States, where he lives near Boston, Massachusetts in the suburb of Melrose.[http://martinfowler.com/aboutMe.html Martin Fowler] at martinfowler.com. Retrieved 2012-11-15.\n\nFowler started working with software in the early 1980s. Out of university in 1986 he started working in software development for Coopers & Lybrand until 1991.James A. Highsmith (2002). Agile Software Development Ecosystems. Addison-Wesley Professional. p. 133. . In 2000 he joined ThoughtWorks, a systems integration and consulting company, where he serves as Chief Scientist.[http://www.thoughtworks.com/profiles/martin-fowler Martin Fowler | ThoughtWorks]. Retrieved 2015-03-30.\n\nFowler has written eight books on the topic of software development (see Publications). He is a member of the Agile Alliance and helped create the Manifesto for Agile Software Development in 2001, along with 16 fellow signatories.[http://agilemanifesto.org/ Manifesto for Agile Software Development]. Retrieved 2012-12-10. He maintains a bliki, a mix of blog and wiki. He popularized the term Dependency Injection as a form of Inversion of Control.Kamil Piętak; Marek Kisiel-Dorohinicki (2013). \"Agent-Based Framework Facilitating Component-Based Implementation of Distributed Computational Intelligence Systems\". In Ngoc-Thanh Nguyen; Joanna Kołodziej; Tadeusz Burczyński et al. [https://books.google.com/books?idEJS6BQAAQBAJ&pg\nPA38 Transactions on Computational Collective Intelligence X]. Springer. p. 38. .Martin Fowler (2004) \"[http://martinfowler.com/articles/injection.html Inversion of Control Containers and the Dependency Injection pattern]\". Retrieved 2012-11-15.\n\nPublications \n\n* 1996. Analysis Patterns: Reusable Object Models. Addison-Wesley. .\n* 1997. UML Distilled: A Brief Guide to the Standard Object Modeling Language. Addison-Wesley. .\n* 1999. Refactoring: Improving the Design of Existing Code, With Kent Beck, John Brant, William Opdyke, and Don Roberts (June 1999). Addison-Wesley. .\n* 2000. Planning Extreme Programming. With Kent Beck. Addison-Wesley. .\n* 2002. Patterns of Enterprise Application Architecture. With David Rice, Matthew Foemmel, Edward Hieatt, Robert Mee, and Randy Stafford. Addison-Wesley. .\n* 2010. Domain-Specific Languages. With Rebecca Parsons. Addison-Wesley. .\n* 2012. NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence. With Pramod Sadalage. Addison-Wesley. .\n* 2013. Refactoring: Ruby Edition. With Kent Beck, Shane Harvie, and Jay Fields. Addison-Wesley. .",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Martin Fowler" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=20286" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "Martin Fowler (born 1963) is a British software developer, author and international public speaker on software development, specializing in object-oriented analysis and design, UML, patterns, and agile software development methodologies, including extreme programming.\n\nHis 1999 book Refactoring popularized the practice of code refactoring.Stephane Faroult; Pascal L'Hermite (2008). Refactoring SQL Applications. O'Reilly Media. p. 8. . In 2004 he introduced Presentation Model (PM), an architectural pattern.Stephen Chin; Dean Iverson; Oswald Campesato; Paul Trani (2011). Pro Android Flash. Apress. p. 300. .\n\nBiography \n\nFowler was born and grew up in Walsall, England, where he went to Queen Mary's Grammar School for his secondary education. He graduated at University College London in 1986. In 1994 he moved to the United States, where he lives near Boston, Massachusetts in the suburb of Melrose.[http://martinfowler.com/aboutMe.html Martin Fowler] at martinfowler.com. Retrieved 2012-11-15.\n\nFowler started working with software in the early 1980s. Out of university in 1986 he started working in software development for Coopers & Lybrand until 1991.James A. Highsmith (2002). Agile Software Development Ecosystems. Addison-Wesley Professional. p. 133. . In 2000 he joined ThoughtWorks, a systems integration and consulting company, where he serves as Chief Scientist.[http://www.thoughtworks.com/profiles/martin-fowler Martin Fowler | ThoughtWorks]. Retrieved 2015-03-30.\n\nFowler has written eight books on the topic of software development (see Publications). He is a member of the Agile Alliance and helped create the Manifesto for Agile Software Development in 2001, along with 16 fellow signatories.[http://agilemanifesto.org/ Manifesto for Agile Software Development]. Retrieved 2012-12-10. He maintains a bliki, a mix of blog and wiki. He popularized the term Dependency Injection as a form of Inversion of Control.Kamil Piętak; Marek Kisiel-Dorohinicki (2013). \"Agent-Based Framework Facilitating Component-Based Implementation of Distributed Computational Intelligence Systems\". In Ngoc-Thanh Nguyen; Joanna Kołodziej; Tadeusz Burczyński et al. [https://books.google.com/books?idEJS6BQAAQBAJ&pg\nPA38 Transactions on Computational Collective Intelligence X]. Springer. p. 38. .Martin Fowler (2004) \"[http://martinfowler.com/articles/injection.html Inversion of Control Containers and the Dependency Injection pattern]\". Retrieved 2012-11-15.\n\nPublications \n\n* 1996. Analysis Patterns: Reusable Object Models. Addison-Wesley. .\n* 1997. UML Distilled: A Brief Guide to the Standard Object Modeling Language. Addison-Wesley. .\n* 1999. Refactoring: Improving the Design of Existing Code, With Kent Beck, John Brant, William Opdyke, and Don Roberts (June 1999). Addison-Wesley. .\n* 2000. Planning Extreme Programming. With Kent Beck. Addison-Wesley. .\n* 2002. Patterns of Enterprise Application Architecture. With David Rice, Matthew Foemmel, Edward Hieatt, Robert Mee, and Randy Stafford. Addison-Wesley. .\n* 2010. Domain-Specific Languages. With Rebecca Parsons. Addison-Wesley. .\n* 2012. NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence. With Pramod Sadalage. Addison-Wesley. .\n* 2013. Refactoring: Ruby Edition. With Kent Beck, Shane Harvie, and Jay Fields. Addison-Wesley. . Martin Fowler. http://en.wikipedia.org/?curid=20286."
  }
}
