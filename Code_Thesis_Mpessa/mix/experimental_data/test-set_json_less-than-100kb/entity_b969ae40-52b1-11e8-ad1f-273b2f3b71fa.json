{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=1335",
  "eid" : "b969ae40-52b1-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778390820,
  "textBody" : "In mathematics, the associative property\n is a property of some binary operations. In propositional logic, associativity is a valid rule of replacement for expressions in logical proofs.\n\nWithin an expression containing two or more occurrences in a row of the same associative operator, the order in which the operations are performed does not matter as long as the sequence of the operands is not changed. That is, rearranging the parentheses in such an expression will not change its value. Consider the following equations:\n\n(2 + 3) + 4 2 + (3 + 4) \n 9 \\,\n\n2 \\times (3 \\times 4) (2 \\times 3) \\times 4 \n 24 .\n\nEven though the parentheses were rearranged on each line, the values of the expressions were not altered. Since this holds true when performing addition and multiplication on any real numbers, it can be said that \"addition and multiplication of real numbers are associative operations\".\n\nAssociativity is not the same as commutativity, which addresses whether or not the order of two operands changes the result. For example, the order does not matter in the multiplication of real numbers, that is, , so we say that the multiplication of real numbers is a commutative operation.\n\nAssociative operations are abundant in mathematics; in fact, many algebraic structures (such as semigroups and categories) explicitly require their binary operations to be associative.\n\nHowever, many important and interesting operations are non-associative; some examples include subtraction, exponentiation, and the vector cross product.  In contrast to the theoretical properties of real numbers, the addition of floating point numbers in computer science is not associative, and the choice of how to associate an expression can have a significant effect on rounding error.\n\nDefinition \n\nFormally, a binary operation ∗ on a set S is called associative if it satisfies the associative law:\n\n(x ∗ y) ∗ z = x ∗ (y ∗ z) for all x, y, z in S.\n\nHere, ∗ is used to replace the symbol of the operation, which may be any symbol, and even the absence of symbol (juxtaposition) as for multiplication.\n\n(xy)z x(yz) \n xyz for all x, y, z in S.\n\nThe associative law can also be expressed in functional notation thus: .\n\nGeneralized associative law\n\nIf a binary operation is associative, repeated application of the operation produces the same result regardless how valid pairs of parenthesis are inserted in the expression. This is called the generalized associative law. For instance, a product of four elements may be written in five possible ways:\n\n# ((ab)c)d\n# (ab)(cd)\n# (a(bc))d\n# a((bc)d)\n# a(b(cd))\n\nIf the product operation is associative, the generalized associative law says that all these formulas will yield the same result, making the parenthesis unnecessary. Thus \"the\" product can be written unambiguously as\n\nabcd.\n\nAs the number of elements increases, the number of possible ways to insert parentheses grows quickly, but they remain unnecessary for disambiguation.\n\nExamples\n\nSome examples of associative operations include the following.\n* The concatenation of the three strings \"hello\", \" \", \"world\" can be computed by concatenating the first two strings (giving \"hello \") and appending the third string (\"world\"), or by joining the second and third string (giving \" world\") and concatenating the first string (\"hello\") with the result. The two methods produce the same result; string concatenation is associative (but not commutative).\n* In arithmetic, addition and multiplication of real numbers are associative; i.e.,\n: \n\\left.\n\\begin{matrix}\n(x+y)+zx+(y+z)\nx+y+z\\quad\n\\\\\n(x\\,y)zx(y\\,z)\nx\\,y\\,z\\qquad\\qquad\\qquad\\quad\\ \\ \\,\n\\end{matrix}\n\\right\\}\n\\mbox{for all }x,y,z\\in\\mathbb{R}.\n\nBecause of associativity, the grouping parentheses can be omitted without ambiguity.\n* Addition and multiplication of complex numbers and quaternions are associative. Addition of octonions is also associative, but multiplication of octonions is non-associative.\n* The greatest common divisor and least common multiple functions act associatively.\n: \n\n\\left.\n\\begin{matrix}\n\\operatorname{gcd}(\\operatorname{gcd}(x,y),z)\\operatorname{gcd}(x,\\operatorname{gcd}(y,z))\n\n\\operatorname{gcd}(x,y,z)\\ \\quad\n\\\\\n\\operatorname{lcm}(\\operatorname{lcm}(x,y),z)\\operatorname{lcm}(x,\\operatorname{lcm}(y,z))\n\n\\operatorname{lcm}(x,y,z)\\quad\n\\end{matrix}\n\\right\\}\\mbox{ for all }x,y,z\\in\\mathbb{Z}.\n\n* Taking the intersection or the union of sets:\n: \n\n\\left.\n\\begin{matrix}\n(A\\cap B)\\cap CA\\cap(B\\cap C)\nA\\cap B\\cap C\\quad\n\\\\\n(A\\cup B)\\cup CA\\cup(B\\cup C)\nA\\cup B\\cup C\\quad\n\\end{matrix}\n\\right\\}\\mbox{for all sets }A,B,C.\n\n* If M is some set and S denotes the set of all functions from M to M, then the operation of functional composition on S is associative:\n\n: (f\\circ g)\\circ hf\\circ(g\\circ h)\nf\\circ g\\circ h\\qquad\\mbox{for all }f,g,h\\in S.\n* Slightly more generally, given four sets M, N, P and Q, with h: M to N, g: N to P, and f: P to Q, then\n\n: (f\\circ g)\\circ hf\\circ(g\\circ h)\nf\\circ g\\circ h\n\nas before. In short, composition of maps is always associative.\n* Consider a set with three elements, A, B, and C. The following operation:\n\nis associative. Thus, for example, A(BC)(AB)C \n A. This operation is not commutative.\n* Because matrices represent linear transformation functions, with matrix multiplication representing functional composition, one can immediately conclude that matrix multiplication is associative. \n\nPropositional logic \n\nRule of replacement \n\nIn standard truth-functional propositional logic, association,Moore and ParkerCopi and Cohen or associativityHurley are two valid rules of replacement. The rules allow one to move parentheses in logical expressions in logical proofs. The rules are:\n(P \\or (Q \\or R)) \\Leftrightarrow ((P \\or Q) \\or R)\nand\n(P \\and (Q \\and R)) \\Leftrightarrow ((P \\and Q) \\and R),\nwhere \"\\Leftrightarrow\" is a metalogical symbol representing \"can be replaced in a proof with.\"\n\nTruth functional connectives \n\nAssociativity is a property of some logical connectives of truth-functional propositional logic. The following logical equivalences demonstrate that associativity is a property of particular connectives. The following are truth-functional tautologies.\n\nAssociativity of disjunction:\n((P \\or Q) \\or R) \\leftrightarrow (P \\or (Q \\or R))\n(P \\or (Q \\or R)) \\leftrightarrow ((P \\or Q) \\or R)\nAssociativity of conjunction:\n((P \\and Q) \\and R) \\leftrightarrow (P \\and (Q \\and R))\n(P \\and (Q \\and R)) \\leftrightarrow ((P \\and Q) \\and R)\nAssociativity of equivalence:\n((P \\leftrightarrow Q) \\leftrightarrow R) \\leftrightarrow (P \\leftrightarrow (Q \\leftrightarrow R))\n(P \\leftrightarrow (Q \\leftrightarrow R)) \\leftrightarrow ((P \\leftrightarrow Q) \\leftrightarrow R)\n\nNon-associative operation\n\nA binary operation * on a set S that does not satisfy the associative law is called non-associative. Symbolically,\n\n(x*y)*z\\ne x*(y*z)\\qquad\\mbox{for some }x,y,z\\in S.\n\nFor such an operation the order of evaluation does matter. For example:\n* Subtraction\n\n(5-3)-2 \\, \\ne \\, 5-(3-2)\n\n* Division\n\n(4/2)/2 \\, \\ne \\, 4/(2/2)\n\n* Exponentiation\n\n2^{(1^2)} \\, \\ne \\, (2^1)^2\n\nAlso note that infinite sums are not generally associative, for example:\n\n(1+-1)+(1+-1)+(1+-1)+(1+-1)+(1+-1)+(1+-1)+\\dots \\, = \\, 0\n\nwhereas\n\n1+(-1+1)+(-1+1)+(-1+1)+(-1+1)+(-1+1)+(-1+1)+\\dots \\, = \\, 1\n\nThe study of non-associative structures arises from reasons somewhat different from the mainstream of classical algebra. One area within non-associative algebra that has grown very large is that of Lie algebras. There the associative law is replaced by the Jacobi identity. Lie algebras abstract the essential nature of infinitesimal transformations, and have become ubiquitous in mathematics.\n\nThere are other specific types of non-associative structures that have been studied in depth; these tend to come from some specific applications or areas such as combinatorial mathematics. Other examples are Quasigroup, Quasifield, Non-associative ring, Non-associative algebra and Commutative non-associative magmas.\n\nNonassociativity of floating point calculation\n\nIn mathematics, addition and multiplication of real numbers is associative.  By contrast, in computer science, the addition and multiplication of floating point numbers is not associative, as rounding errors are introduced when dissimilar-sized values are joined together.Knuth, Donald, The Art of Computer Programming, Volume 3, section 4.2.2\n\nTo illustrate this, consider a floating point representation with a 4-bit mantissa:\n(1.0002×20 +\n1.0002×20) +\n1.0002×24 =\n1.0002×21 +\n1.0002×24 =\n1.002×24\n1.0002×20 +\n(1.0002×20 +\n1.0002×24) =\n1.0002×20 +\n1.002×24 =\n1.002×24\n\nEven though most computers compute with a 24 or 53 bits of mantissa, this is an important source of rounding error, and approaches such as the Kahan summation algorithm are ways to minimise the errors. It can be especially problematic in parallel computing. ([http://www.validlab.com/goldberg/paper.pdf], [http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html])\n\nNotation for non-associative operations \n\nIn general, parentheses must be used to indicate the order of evaluation if a non-associative operation appears more than once in an expression. However, mathematicians agree on a particular order of evaluation for several common non-associative operations. This is simply a notational convention to avoid parentheses.\n\nA left-associative operation is a non-associative operation that is conventionally evaluated from left to right, i.e.,\n\n\\left.\n\\begin{matrix}\nx*y*z=(x*y)*z\\qquad\\qquad\\quad\\,\n\\\\\nw*x*y*z=((w*x)*y)*z\\quad\n\\\\\n\\mbox{etc.}\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\ \\ \\,\n\\end{matrix}\n\\right\\}\n\\mbox{for all }w,x,y,z\\in S\n\nwhile a right-associative operation is conventionally evaluated from right to left:\n\n\\left.\n\\begin{matrix}\nx*y*z=x*(y*z)\\qquad\\qquad\\quad\\,\n\\\\\nw*x*y*z=w*(x*(y*z))\\quad\n\\\\\n\\mbox{etc.}\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\ \\ \\,\n\\end{matrix}\n\\right\\}\n\\mbox{for all }w,x,y,z\\in S\n\nBoth left-associative and right-associative operations occur. Left-associative operations include the following:\n* Subtraction and division of real numbers:George Mark Bergman: [https://math.berkeley.edu/~gbergman/misc/numbers/ord_ops.html Order of arithmetic operations]Education Place: [http://eduplace.com/math/mathsteps/4/a/index.html The Order of Operations]Khan Academy: [https://www.khanacademy.org/math/pre-algebra/pre-algebra-arith-prop/pre-algebra-order-of-operations/v/introduction-to-order-of-operations The Order of Operations], timestamp [https://www.youtube.com/watch?vClYdw4d4OmA&t\n5m40s 5m40s]Virginia Department of Education: [http://www.doe.virginia.gov/instruction/mathematics/middle/algebra_readiness/curriculum_companion/order-operations.pdf#page3 Using Order of Operations and Exploring Properties], section 9Bronstein: :de:Taschenbuch der Mathematik, pages 115-120, chapter: 2.4.1.1, \n:x-y-z=(x-y)-z\n:x/y/z=(x/y)/z\n* Function application:\n:(f \\, x \\, y) = ((f \\, x) \\, y)\nThis notation can be motivated by the currying isomorphism.\n\nRight-associative operations include the following:\n* Exponentiation of real numbers:\n:x^{y^z}=x^{(y^z)}\n\nOne reason exponentiation is right-associative is that a repeated left-associative exponentiation operation would be less useful. Multiple appearances could (and would) be rewritten with multiplication:\n\n:(x^y)^z=x^{(yz)}\n\nAn additional argument for exponentiation being right-associative is that the superscript inherently behaves as a set of parentheses; e.g. in the expression 2^{x+3} the addition is performed before the exponentiation despite there being no explicit parentheses 2^{(x+3)} wrapped around it. Thus given an expression such as x^{y^z}, it makes sense to require evaluating the full exponent y^z of the base x first.\n* Tetration via the up-arrow operator:\n\n: a \\uparrow \\uparrow b = \\, ^{b}a\n* Function definition\n:\\mathbb{Z} \\rarr \\mathbb{Z} \\rarr \\mathbb{Z} = \\mathbb{Z} \\rarr (\\mathbb{Z} \\rarr \\mathbb{Z})\n:x \\mapsto y \\mapsto x - y = x \\mapsto (y \\mapsto x - y)\n\nUsing right-associative notation for these operations can be motivated by the Curry-Howard correspondence and by the currying isomorphism.\n\nNon-associative operations for which no conventional evaluation order is defined include the following.\n* Taking the cross product of three vectors:\n:\\vec a \\times (\\vec b \\times \\vec c) \\neq (\\vec a \\times \\vec b ) \\times \\vec c \\qquad \\mbox{ for some } \\vec a,\\vec b,\\vec c \\in \\mathbb{R}^3\n* Taking the pairwise average of real numbers:\n:{(x+y)/2+z\\over2}\\ne{x+(y+z)/2\\over2} \\qquad \\mbox{for all }x,y,z\\in\\mathbb{R} \\mbox{ with }x\\ne z.\n* Taking the relative complement of sets (A\\backslash B)\\backslash C is not the same as A\\backslash (B\\backslash C). (Compare material nonimplication in logic.)",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Associative property" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=1335" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "In mathematics, the associative property\n is a property of some binary operations. In propositional logic, associativity is a valid rule of replacement for expressions in logical proofs.\n\nWithin an expression containing two or more occurrences in a row of the same associative operator, the order in which the operations are performed does not matter as long as the sequence of the operands is not changed. That is, rearranging the parentheses in such an expression will not change its value. Consider the following equations:\n\n(2 + 3) + 4 2 + (3 + 4) \n 9 \\,\n\n2 \\times (3 \\times 4) (2 \\times 3) \\times 4 \n 24 .\n\nEven though the parentheses were rearranged on each line, the values of the expressions were not altered. Since this holds true when performing addition and multiplication on any real numbers, it can be said that \"addition and multiplication of real numbers are associative operations\".\n\nAssociativity is not the same as commutativity, which addresses whether or not the order of two operands changes the result. For example, the order does not matter in the multiplication of real numbers, that is, , so we say that the multiplication of real numbers is a commutative operation.\n\nAssociative operations are abundant in mathematics; in fact, many algebraic structures (such as semigroups and categories) explicitly require their binary operations to be associative.\n\nHowever, many important and interesting operations are non-associative; some examples include subtraction, exponentiation, and the vector cross product.  In contrast to the theoretical properties of real numbers, the addition of floating point numbers in computer science is not associative, and the choice of how to associate an expression can have a significant effect on rounding error.\n\nDefinition \n\nFormally, a binary operation ∗ on a set S is called associative if it satisfies the associative law:\n\n(x ∗ y) ∗ z = x ∗ (y ∗ z) for all x, y, z in S.\n\nHere, ∗ is used to replace the symbol of the operation, which may be any symbol, and even the absence of symbol (juxtaposition) as for multiplication.\n\n(xy)z x(yz) \n xyz for all x, y, z in S.\n\nThe associative law can also be expressed in functional notation thus: .\n\nGeneralized associative law\n\nIf a binary operation is associative, repeated application of the operation produces the same result regardless how valid pairs of parenthesis are inserted in the expression. This is called the generalized associative law. For instance, a product of four elements may be written in five possible ways:\n\n# ((ab)c)d\n# (ab)(cd)\n# (a(bc))d\n# a((bc)d)\n# a(b(cd))\n\nIf the product operation is associative, the generalized associative law says that all these formulas will yield the same result, making the parenthesis unnecessary. Thus \"the\" product can be written unambiguously as\n\nabcd.\n\nAs the number of elements increases, the number of possible ways to insert parentheses grows quickly, but they remain unnecessary for disambiguation.\n\nExamples\n\nSome examples of associative operations include the following.\n* The concatenation of the three strings \"hello\", \" \", \"world\" can be computed by concatenating the first two strings (giving \"hello \") and appending the third string (\"world\"), or by joining the second and third string (giving \" world\") and concatenating the first string (\"hello\") with the result. The two methods produce the same result; string concatenation is associative (but not commutative).\n* In arithmetic, addition and multiplication of real numbers are associative; i.e.,\n: \n\\left.\n\\begin{matrix}\n(x+y)+zx+(y+z)\nx+y+z\\quad\n\\\\\n(x\\,y)zx(y\\,z)\nx\\,y\\,z\\qquad\\qquad\\qquad\\quad\\ \\ \\,\n\\end{matrix}\n\\right\\}\n\\mbox{for all }x,y,z\\in\\mathbb{R}.\n\nBecause of associativity, the grouping parentheses can be omitted without ambiguity.\n* Addition and multiplication of complex numbers and quaternions are associative. Addition of octonions is also associative, but multiplication of octonions is non-associative.\n* The greatest common divisor and least common multiple functions act associatively.\n: \n\n\\left.\n\\begin{matrix}\n\\operatorname{gcd}(\\operatorname{gcd}(x,y),z)\\operatorname{gcd}(x,\\operatorname{gcd}(y,z))\n\n\\operatorname{gcd}(x,y,z)\\ \\quad\n\\\\\n\\operatorname{lcm}(\\operatorname{lcm}(x,y),z)\\operatorname{lcm}(x,\\operatorname{lcm}(y,z))\n\n\\operatorname{lcm}(x,y,z)\\quad\n\\end{matrix}\n\\right\\}\\mbox{ for all }x,y,z\\in\\mathbb{Z}.\n\n* Taking the intersection or the union of sets:\n: \n\n\\left.\n\\begin{matrix}\n(A\\cap B)\\cap CA\\cap(B\\cap C)\nA\\cap B\\cap C\\quad\n\\\\\n(A\\cup B)\\cup CA\\cup(B\\cup C)\nA\\cup B\\cup C\\quad\n\\end{matrix}\n\\right\\}\\mbox{for all sets }A,B,C.\n\n* If M is some set and S denotes the set of all functions from M to M, then the operation of functional composition on S is associative:\n\n: (f\\circ g)\\circ hf\\circ(g\\circ h)\nf\\circ g\\circ h\\qquad\\mbox{for all }f,g,h\\in S.\n* Slightly more generally, given four sets M, N, P and Q, with h: M to N, g: N to P, and f: P to Q, then\n\n: (f\\circ g)\\circ hf\\circ(g\\circ h)\nf\\circ g\\circ h\n\nas before. In short, composition of maps is always associative.\n* Consider a set with three elements, A, B, and C. The following operation:\n\nis associative. Thus, for example, A(BC)(AB)C \n A. This operation is not commutative.\n* Because matrices represent linear transformation functions, with matrix multiplication representing functional composition, one can immediately conclude that matrix multiplication is associative. \n\nPropositional logic \n\nRule of replacement \n\nIn standard truth-functional propositional logic, association,Moore and ParkerCopi and Cohen or associativityHurley are two valid rules of replacement. The rules allow one to move parentheses in logical expressions in logical proofs. The rules are:\n(P \\or (Q \\or R)) \\Leftrightarrow ((P \\or Q) \\or R)\nand\n(P \\and (Q \\and R)) \\Leftrightarrow ((P \\and Q) \\and R),\nwhere \"\\Leftrightarrow\" is a metalogical symbol representing \"can be replaced in a proof with.\"\n\nTruth functional connectives \n\nAssociativity is a property of some logical connectives of truth-functional propositional logic. The following logical equivalences demonstrate that associativity is a property of particular connectives. The following are truth-functional tautologies.\n\nAssociativity of disjunction:\n((P \\or Q) \\or R) \\leftrightarrow (P \\or (Q \\or R))\n(P \\or (Q \\or R)) \\leftrightarrow ((P \\or Q) \\or R)\nAssociativity of conjunction:\n((P \\and Q) \\and R) \\leftrightarrow (P \\and (Q \\and R))\n(P \\and (Q \\and R)) \\leftrightarrow ((P \\and Q) \\and R)\nAssociativity of equivalence:\n((P \\leftrightarrow Q) \\leftrightarrow R) \\leftrightarrow (P \\leftrightarrow (Q \\leftrightarrow R))\n(P \\leftrightarrow (Q \\leftrightarrow R)) \\leftrightarrow ((P \\leftrightarrow Q) \\leftrightarrow R)\n\nNon-associative operation\n\nA binary operation * on a set S that does not satisfy the associative law is called non-associative. Symbolically,\n\n(x*y)*z\\ne x*(y*z)\\qquad\\mbox{for some }x,y,z\\in S.\n\nFor such an operation the order of evaluation does matter. For example:\n* Subtraction\n\n(5-3)-2 \\, \\ne \\, 5-(3-2)\n\n* Division\n\n(4/2)/2 \\, \\ne \\, 4/(2/2)\n\n* Exponentiation\n\n2^{(1^2)} \\, \\ne \\, (2^1)^2\n\nAlso note that infinite sums are not generally associative, for example:\n\n(1+-1)+(1+-1)+(1+-1)+(1+-1)+(1+-1)+(1+-1)+\\dots \\, = \\, 0\n\nwhereas\n\n1+(-1+1)+(-1+1)+(-1+1)+(-1+1)+(-1+1)+(-1+1)+\\dots \\, = \\, 1\n\nThe study of non-associative structures arises from reasons somewhat different from the mainstream of classical algebra. One area within non-associative algebra that has grown very large is that of Lie algebras. There the associative law is replaced by the Jacobi identity. Lie algebras abstract the essential nature of infinitesimal transformations, and have become ubiquitous in mathematics.\n\nThere are other specific types of non-associative structures that have been studied in depth; these tend to come from some specific applications or areas such as combinatorial mathematics. Other examples are Quasigroup, Quasifield, Non-associative ring, Non-associative algebra and Commutative non-associative magmas.\n\nNonassociativity of floating point calculation\n\nIn mathematics, addition and multiplication of real numbers is associative.  By contrast, in computer science, the addition and multiplication of floating point numbers is not associative, as rounding errors are introduced when dissimilar-sized values are joined together.Knuth, Donald, The Art of Computer Programming, Volume 3, section 4.2.2\n\nTo illustrate this, consider a floating point representation with a 4-bit mantissa:\n(1.0002×20 +\n1.0002×20) +\n1.0002×24 =\n1.0002×21 +\n1.0002×24 =\n1.002×24\n1.0002×20 +\n(1.0002×20 +\n1.0002×24) =\n1.0002×20 +\n1.002×24 =\n1.002×24\n\nEven though most computers compute with a 24 or 53 bits of mantissa, this is an important source of rounding error, and approaches such as the Kahan summation algorithm are ways to minimise the errors. It can be especially problematic in parallel computing. ([http://www.validlab.com/goldberg/paper.pdf], [http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html])\n\nNotation for non-associative operations \n\nIn general, parentheses must be used to indicate the order of evaluation if a non-associative operation appears more than once in an expression. However, mathematicians agree on a particular order of evaluation for several common non-associative operations. This is simply a notational convention to avoid parentheses.\n\nA left-associative operation is a non-associative operation that is conventionally evaluated from left to right, i.e.,\n\n\\left.\n\\begin{matrix}\nx*y*z=(x*y)*z\\qquad\\qquad\\quad\\,\n\\\\\nw*x*y*z=((w*x)*y)*z\\quad\n\\\\\n\\mbox{etc.}\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\ \\ \\,\n\\end{matrix}\n\\right\\}\n\\mbox{for all }w,x,y,z\\in S\n\nwhile a right-associative operation is conventionally evaluated from right to left:\n\n\\left.\n\\begin{matrix}\nx*y*z=x*(y*z)\\qquad\\qquad\\quad\\,\n\\\\\nw*x*y*z=w*(x*(y*z))\\quad\n\\\\\n\\mbox{etc.}\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\ \\ \\,\n\\end{matrix}\n\\right\\}\n\\mbox{for all }w,x,y,z\\in S\n\nBoth left-associative and right-associative operations occur. Left-associative operations include the following:\n* Subtraction and division of real numbers:George Mark Bergman: [https://math.berkeley.edu/~gbergman/misc/numbers/ord_ops.html Order of arithmetic operations]Education Place: [http://eduplace.com/math/mathsteps/4/a/index.html The Order of Operations]Khan Academy: [https://www.khanacademy.org/math/pre-algebra/pre-algebra-arith-prop/pre-algebra-order-of-operations/v/introduction-to-order-of-operations The Order of Operations], timestamp [https://www.youtube.com/watch?vClYdw4d4OmA&t\n5m40s 5m40s]Virginia Department of Education: [http://www.doe.virginia.gov/instruction/mathematics/middle/algebra_readiness/curriculum_companion/order-operations.pdf#page3 Using Order of Operations and Exploring Properties], section 9Bronstein: :de:Taschenbuch der Mathematik, pages 115-120, chapter: 2.4.1.1, \n:x-y-z=(x-y)-z\n:x/y/z=(x/y)/z\n* Function application:\n:(f \\, x \\, y) = ((f \\, x) \\, y)\nThis notation can be motivated by the currying isomorphism.\n\nRight-associative operations include the following:\n* Exponentiation of real numbers:\n:x^{y^z}=x^{(y^z)}\n\nOne reason exponentiation is right-associative is that a repeated left-associative exponentiation operation would be less useful. Multiple appearances could (and would) be rewritten with multiplication:\n\n:(x^y)^z=x^{(yz)}\n\nAn additional argument for exponentiation being right-associative is that the superscript inherently behaves as a set of parentheses; e.g. in the expression 2^{x+3} the addition is performed before the exponentiation despite there being no explicit parentheses 2^{(x+3)} wrapped around it. Thus given an expression such as x^{y^z}, it makes sense to require evaluating the full exponent y^z of the base x first.\n* Tetration via the up-arrow operator:\n\n: a \\uparrow \\uparrow b = \\, ^{b}a\n* Function definition\n:\\mathbb{Z} \\rarr \\mathbb{Z} \\rarr \\mathbb{Z} = \\mathbb{Z} \\rarr (\\mathbb{Z} \\rarr \\mathbb{Z})\n:x \\mapsto y \\mapsto x - y = x \\mapsto (y \\mapsto x - y)\n\nUsing right-associative notation for these operations can be motivated by the Curry-Howard correspondence and by the currying isomorphism.\n\nNon-associative operations for which no conventional evaluation order is defined include the following.\n* Taking the cross product of three vectors:\n:\\vec a \\times (\\vec b \\times \\vec c) \\neq (\\vec a \\times \\vec b ) \\times \\vec c \\qquad \\mbox{ for some } \\vec a,\\vec b,\\vec c \\in \\mathbb{R}^3\n* Taking the pairwise average of real numbers:\n:{(x+y)/2+z\\over2}\\ne{x+(y+z)/2\\over2} \\qquad \\mbox{for all }x,y,z\\in\\mathbb{R} \\mbox{ with }x\\ne z.\n* Taking the relative complement of sets (A\\backslash B)\\backslash C is not the same as A\\backslash (B\\backslash C). (Compare material nonimplication in logic.). Associative property. http://en.wikipedia.org/?curid=1335."
  }
}
