{
  "datasourceIdentifier" : "awesome wiki export",
  "backlink" : "http://en.wikipedia.org/?curid=10251",
  "eid" : "f49059b0-52b1-11e8-ad1f-273b2f3b71fa",
  "loadTime" : 1525778490059,
  "textBody" : "The electronic delay storage automatic calculator (EDSAC) was an early British computer. Inspired by John von Neumann's seminal First Draft of a Report on the EDVAC, the machine was constructed by Maurice Wilkes and his team at the University of Cambridge Mathematical Laboratory in England.  EDSAC was the second electronic digital stored-program computer to go into regular service.The Manchester Small-Scale Experimental Machine, nicknamed \"Baby\", predated EDSAC as a stored-program computer, but was built as a test bed for the Williams tube and not as a machine for practical use. http://www.cl.cam.ac.uk/conference/EDSAC99/history.html. However, the Manchester Mark 1 of 1949 (not to be confused with the 1948 SSEM prototype) was available for general use by other university departments and Ferranti in April 1949 http://www.computer50.org/mark1/MM1.html despite being still under development.\n\nLater the project was supported by J. Lyons & Co. Ltd., a British firm, who were rewarded with the first commercially applied computer, LEO I, based on the EDSAC design.  Work on EDSAC started during 1947,[http://ieeexplore.ieee.org/xpl/login.jsp?tp&arnumber\n560726&url=http%3A%2F%2Fieeexplore.ieee.org%2Fstamp%2Fstamp.jsp%3Ftp%3D%26arnumber%3D560726]  and it ran its first programs on 6 May 1949, when it calculated a table of square numbers To be precise, EDSAC's first program printed a list of the squares of the integers from 0 to 99 inclusive. and a list of prime numbers. EDSAC 1 was finally shut down on 11 July 1958, having been superseded by EDSAC 2, which remained in use until 1965.\n\nTechnical overview\n\nPhysical components\n\nAs soon as EDSAC was operational, it began serving the University's research needs.  It used mercury delay lines for memory, and derated vacuum tubes for logic.  Cycle time was 1.5 ms for all ordinary instructions, 6 ms for multiplication.  Input was via five-hole punched tape and output was via a teleprinter.\n\nInitially registers were limited to an accumulator and a multiplier register. In 1953, David Wheeler, returning from a stay at the University of Illinois, designed an index register as an extension to the original EDSAC hardware.\n\nA magnetic tape drive was added in 1952 but never worked sufficiently well to be of real use.[http://www.cl.cam.ac.uk/events/EDSAC99/statistics.html Some EDSAC statistics]\n\nUntil 1952, the available main memory (instructions and data) was only 512 18-bit words, and there was no backing store.[http://www.cl.cam.ac.uk/events/EDSAC99/reminiscences/#EDSAC%201%20applications EDSAC 1 and after] The delay lines (or \"tanks\") were arranged in two batteries providing 512 words each. The second battery came into operation in 1952.\n\nThe full 1024-word delay line store was not available until 1955 or early 1956,[http://www.cl.cam.ac.uk/events/EDSAC99/reminiscences/#EDSAC%201%20maintenance EDSAC 1 and after] limiting programs to about 800 words until then.\n\nJohn Lindley (diploma student 1958–1959) mentioned \"the incredible difficulty we had ever to produce a single correct piece of paper tape with the crude and unreliable home-made punching, printing and verifying gear available in the late 50s\".[http://www.cl.cam.ac.uk/events/EDSAC99/reminiscences/#EDSAC%202%20operating EDSAC 1 and after]\n\nMemory and instructions\n\nThe EDSAC's main memory consisted of 1024 locations, though only 512 locations were initially installed. Each contained 18 bits, but the topmost bit was always unavailable due to timing problems, so only 17 bits were used. An instruction consisted of a five-bit instruction code, one spare bit, a ten bit operand (usually a memory address), and a length bit to control whether the instruction used a 17-bit or a 35-bit operand (two consecutive words, little-endian).  All instruction codes were by design represented by one mnemonic letter, so that the Add instruction, for example, used the EDSAC character code for the letter A.\n\nInternally, the EDSAC used two's complement, binary numbers.  Numbers were either 17 bits (one word) or 35 bits (two words) long.  Unusually, the multiplier was designed to treat numbers as fixed-point fractions in the range −1 ≤ x Professor David Barron, Emeritus Professor of the University of Southampton at a Cambridge Computer Lab seminar to mark the 60th anniversary 6 May 2009.\n\nProgramming technique\n\nThe early programmers had to make use of techniques frowned upon today — especially altering the code. As there was no index register until much later, the only way of accessing an array was to alter which memory location a particular instruction was referencing.\n\nDavid Wheeler, who earned the world's first Computer Science PhD working on the project, is credited with inventing the concept of a subroutine. Users wrote programs that called a routine by jumping to the start of the subroutine with the return address (i.e. the location-plus-one of the jump itself) in the accumulator (a Wheeler jump). By convention the subroutine expected this and the first thing it did was to modify its concluding jump instruction to that return address. Multiple and nested subroutines could be called so long as the user knew the length of each one in order to calculate the location to jump to; recursive calls were forbidden. The user then copied the code for the subroutine from a master tape onto their own tape following the end of their own program.\n\nApplication software\n\nThe subroutine concept led to the availability of a substantial subroutine library. By 1951, 87 subroutines in the following categories were available for general use: floating point arithmetic; arithmetic operations on complex numbers; checking; division; exponentiation; routines relating to functions; differential equations; special functions; power series; logarithms; miscellaneous; print and layout; quadrature; read (input); nth root; trigonometric functions; counting operations (simulating repeat until loops, while loops and for loops); vectors; and matrices.\n\nApplications of EDSAC\n\n* In 1950, M. V. Wilkes and Wheeler used EDSAC to solve a differential equation relating to gene frequencies in a paper by Ronald Fisher.[https://www.jstor.org/stable/3001780 Gene Frequencies in a Cline Determined by Selection and Diffusion], R. A. Fisher, Biometrics, Vol. 6, No. 4 (Dec. 1950), pp. 353–361 This represents the first use of a computer for a problem in the field of biology.\n* In 1951, Miller and Wheeler used the machine to discover a 79-digit prime[http://primes.utm.edu/notes/by_year.html Caldwell – largest known primes by year] One reference gives Miller, J. C. P. \"Larger Prime Numbers\" (1951) Nature 168(4280):838, but the [http://www.nature.com/nature/journal/v168/n4280/abs/168838b0.html abstract] does not mention it. – the largest known at the time.\n* In 1952, Sandy Douglas developed OXO, a version of noughts and crosses (tic-tac-toe) for the EDSAC, with graphical output to a VCR97 6\" cathode ray tube. This may well have been the world's first video game.\n* In the early 1960s Peter Swinnerton-Dyer used the EDSAC computer to calculate the number of points modulo p (denoted by Np) for a large number of primes p on elliptic curves whose rank was known. Based on these numerical results  conjectured that Np for a curve E with rank r obeys an asymptotic law, the Birch and Swinnerton-Dyer conjecture, considered one of the top unsolved problems in mathematics as of 2016.\n\nFurther developments\n\nEDSAC's successor, EDSAC 2, was commissioned in 1958.\n\nIn 1961, an EDSAC 2 version of Autocode, an ALGOL-like high-level programming language for scientists and engineers, was developed by David Hartley.\n\nIn the mid-1960s, a successor to the EDSAC 2 was planned, but the move was instead made to the Titan, a prototype Atlas 2 developed from the Atlas Computer of the University of Manchester, Ferranti, and Plessey.\n\nEDSAC Replica Project\n\nOn 13 January 2011, the Computer Conservation Society announced that it planned to build a working replica of EDSAC, at the National Museum of Computing (TNMoC) in Bletchley Park supervised by Andrew Herbert, who studied under Maurice Wilkes. The first parts of the recreation were switched on in November 2014.[http://www.bbc.co.uk/news/technology-30131447 Museum switches on historic computer ] The ongoing project is open to visitors of the museum. As of November 2016, commissioning of the fully completed and operational state of the replica is estimated by the autumn of 2017.",
  "entityProperties" : [ {
    "name" : "title",
    "type" : "String",
    "values" : [ "Electronic delay storage automatic calculator" ],
    "synthetic" : false
  }, {
    "name" : "url",
    "type" : "String",
    "values" : [ "http://en.wikipedia.org/?curid=10251" ],
    "synthetic" : false
  } ],
  "classifications" : [ "xml-export" ],
  "technicalAttributes" : {
    "technicalAttributes" : null,
    "aggregatedText" : "The electronic delay storage automatic calculator (EDSAC) was an early British computer. Inspired by John von Neumann's seminal First Draft of a Report on the EDVAC, the machine was constructed by Maurice Wilkes and his team at the University of Cambridge Mathematical Laboratory in England.  EDSAC was the second electronic digital stored-program computer to go into regular service.The Manchester Small-Scale Experimental Machine, nicknamed \"Baby\", predated EDSAC as a stored-program computer, but was built as a test bed for the Williams tube and not as a machine for practical use. http://www.cl.cam.ac.uk/conference/EDSAC99/history.html. However, the Manchester Mark 1 of 1949 (not to be confused with the 1948 SSEM prototype) was available for general use by other university departments and Ferranti in April 1949 http://www.computer50.org/mark1/MM1.html despite being still under development.\n\nLater the project was supported by J. Lyons & Co. Ltd., a British firm, who were rewarded with the first commercially applied computer, LEO I, based on the EDSAC design.  Work on EDSAC started during 1947,[http://ieeexplore.ieee.org/xpl/login.jsp?tp&arnumber\n560726&url=http%3A%2F%2Fieeexplore.ieee.org%2Fstamp%2Fstamp.jsp%3Ftp%3D%26arnumber%3D560726]  and it ran its first programs on 6 May 1949, when it calculated a table of square numbers To be precise, EDSAC's first program printed a list of the squares of the integers from 0 to 99 inclusive. and a list of prime numbers. EDSAC 1 was finally shut down on 11 July 1958, having been superseded by EDSAC 2, which remained in use until 1965.\n\nTechnical overview\n\nPhysical components\n\nAs soon as EDSAC was operational, it began serving the University's research needs.  It used mercury delay lines for memory, and derated vacuum tubes for logic.  Cycle time was 1.5 ms for all ordinary instructions, 6 ms for multiplication.  Input was via five-hole punched tape and output was via a teleprinter.\n\nInitially registers were limited to an accumulator and a multiplier register. In 1953, David Wheeler, returning from a stay at the University of Illinois, designed an index register as an extension to the original EDSAC hardware.\n\nA magnetic tape drive was added in 1952 but never worked sufficiently well to be of real use.[http://www.cl.cam.ac.uk/events/EDSAC99/statistics.html Some EDSAC statistics]\n\nUntil 1952, the available main memory (instructions and data) was only 512 18-bit words, and there was no backing store.[http://www.cl.cam.ac.uk/events/EDSAC99/reminiscences/#EDSAC%201%20applications EDSAC 1 and after] The delay lines (or \"tanks\") were arranged in two batteries providing 512 words each. The second battery came into operation in 1952.\n\nThe full 1024-word delay line store was not available until 1955 or early 1956,[http://www.cl.cam.ac.uk/events/EDSAC99/reminiscences/#EDSAC%201%20maintenance EDSAC 1 and after] limiting programs to about 800 words until then.\n\nJohn Lindley (diploma student 1958–1959) mentioned \"the incredible difficulty we had ever to produce a single correct piece of paper tape with the crude and unreliable home-made punching, printing and verifying gear available in the late 50s\".[http://www.cl.cam.ac.uk/events/EDSAC99/reminiscences/#EDSAC%202%20operating EDSAC 1 and after]\n\nMemory and instructions\n\nThe EDSAC's main memory consisted of 1024 locations, though only 512 locations were initially installed. Each contained 18 bits, but the topmost bit was always unavailable due to timing problems, so only 17 bits were used. An instruction consisted of a five-bit instruction code, one spare bit, a ten bit operand (usually a memory address), and a length bit to control whether the instruction used a 17-bit or a 35-bit operand (two consecutive words, little-endian).  All instruction codes were by design represented by one mnemonic letter, so that the Add instruction, for example, used the EDSAC character code for the letter A.\n\nInternally, the EDSAC used two's complement, binary numbers.  Numbers were either 17 bits (one word) or 35 bits (two words) long.  Unusually, the multiplier was designed to treat numbers as fixed-point fractions in the range −1 ≤ x Professor David Barron, Emeritus Professor of the University of Southampton at a Cambridge Computer Lab seminar to mark the 60th anniversary 6 May 2009.\n\nProgramming technique\n\nThe early programmers had to make use of techniques frowned upon today — especially altering the code. As there was no index register until much later, the only way of accessing an array was to alter which memory location a particular instruction was referencing.\n\nDavid Wheeler, who earned the world's first Computer Science PhD working on the project, is credited with inventing the concept of a subroutine. Users wrote programs that called a routine by jumping to the start of the subroutine with the return address (i.e. the location-plus-one of the jump itself) in the accumulator (a Wheeler jump). By convention the subroutine expected this and the first thing it did was to modify its concluding jump instruction to that return address. Multiple and nested subroutines could be called so long as the user knew the length of each one in order to calculate the location to jump to; recursive calls were forbidden. The user then copied the code for the subroutine from a master tape onto their own tape following the end of their own program.\n\nApplication software\n\nThe subroutine concept led to the availability of a substantial subroutine library. By 1951, 87 subroutines in the following categories were available for general use: floating point arithmetic; arithmetic operations on complex numbers; checking; division; exponentiation; routines relating to functions; differential equations; special functions; power series; logarithms; miscellaneous; print and layout; quadrature; read (input); nth root; trigonometric functions; counting operations (simulating repeat until loops, while loops and for loops); vectors; and matrices.\n\nApplications of EDSAC\n\n* In 1950, M. V. Wilkes and Wheeler used EDSAC to solve a differential equation relating to gene frequencies in a paper by Ronald Fisher.[https://www.jstor.org/stable/3001780 Gene Frequencies in a Cline Determined by Selection and Diffusion], R. A. Fisher, Biometrics, Vol. 6, No. 4 (Dec. 1950), pp. 353–361 This represents the first use of a computer for a problem in the field of biology.\n* In 1951, Miller and Wheeler used the machine to discover a 79-digit prime[http://primes.utm.edu/notes/by_year.html Caldwell – largest known primes by year] One reference gives Miller, J. C. P. \"Larger Prime Numbers\" (1951) Nature 168(4280):838, but the [http://www.nature.com/nature/journal/v168/n4280/abs/168838b0.html abstract] does not mention it. – the largest known at the time.\n* In 1952, Sandy Douglas developed OXO, a version of noughts and crosses (tic-tac-toe) for the EDSAC, with graphical output to a VCR97 6\" cathode ray tube. This may well have been the world's first video game.\n* In the early 1960s Peter Swinnerton-Dyer used the EDSAC computer to calculate the number of points modulo p (denoted by Np) for a large number of primes p on elliptic curves whose rank was known. Based on these numerical results  conjectured that Np for a curve E with rank r obeys an asymptotic law, the Birch and Swinnerton-Dyer conjecture, considered one of the top unsolved problems in mathematics as of 2016.\n\nFurther developments\n\nEDSAC's successor, EDSAC 2, was commissioned in 1958.\n\nIn 1961, an EDSAC 2 version of Autocode, an ALGOL-like high-level programming language for scientists and engineers, was developed by David Hartley.\n\nIn the mid-1960s, a successor to the EDSAC 2 was planned, but the move was instead made to the Titan, a prototype Atlas 2 developed from the Atlas Computer of the University of Manchester, Ferranti, and Plessey.\n\nEDSAC Replica Project\n\nOn 13 January 2011, the Computer Conservation Society announced that it planned to build a working replica of EDSAC, at the National Museum of Computing (TNMoC) in Bletchley Park supervised by Andrew Herbert, who studied under Maurice Wilkes. The first parts of the recreation were switched on in November 2014.[http://www.bbc.co.uk/news/technology-30131447 Museum switches on historic computer ] The ongoing project is open to visitors of the museum. As of November 2016, commissioning of the fully completed and operational state of the replica is estimated by the autumn of 2017. Electronic delay storage automatic calculator. http://en.wikipedia.org/?curid=10251."
  }
}
